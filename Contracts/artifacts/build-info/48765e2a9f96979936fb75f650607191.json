{
	"id": "48765e2a9f96979936fb75f650607191",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.5.12",
	"solcLongVersion": "0.5.12+commit.7709ece9",
	"input": {
		"language": "Solidity",
		"sources": {
			"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol": {
				"content": "pragma solidity ^0.5.12;\n\nimport \"https://github.com/OpenZeppelin/openzeppelin-upgrades/blob/master/packages/core/contracts/Initializable.sol\";\nimport \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/GSN/Context.sol\";\nimport \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/ownership/Ownable.sol\";\n\nimport \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/IERC20.sol\";\nimport \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20Detailed.sol\";\nimport \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/SafeERC20.sol\";\nimport \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/math/SafeMath.sol\";\n\nimport \"./curvefi/ICurveFi_DepositY.sol\";\nimport \"./curvefi/ICurveFi_Gauge.sol\";\nimport \"./curvefi/ICurveFi_Minter.sol\";\nimport \"./curvefi/ICurveFi_SwapY.sol\";\nimport \"./curvefi/IYERC20.sol\";\n\ncontract MoneyToCurve is Initializable, Context, Ownable {\n    using SafeMath for uint256;\n    using SafeERC20 for IERC20;\n\n    address public curveFi_Deposit;\n    address public curveFi_Swap;\n    address public curveFi_LPToken;\n    address public curveFi_LPGauge;\n    address public curveFi_CRVMinter;\n    address public curveFi_CRVToken;\n    uint256 public x;\n    \n    function initialize(uint256 _x) public initializer {\n        x = _x;\n    }\n\n    /**\n     * @notice Set CurveFi contracts addresses\n     * @param _depositContract CurveFi Deposit contract for Y-pool\n     * @param _gaugeContract CurveFi Gauge contract for Y-pool\n     * @param _minterContract CurveFi CRV minter\n     */\n    function setup(address _depositContract, address _gaugeContract, address _minterContract) external onlyOwner {\n        require(_depositContract != address(0), \"Incorrect deposit contract address\");\n\n        curveFi_Deposit = _depositContract;\n        curveFi_Swap = ICurveFi_DepositY(curveFi_Deposit).curve();\n        curveFi_LPGauge = _gaugeContract;\n        curveFi_LPToken = ICurveFi_DepositY(curveFi_Deposit).token();\n\n        require(ICurveFi_Gauge(curveFi_LPGauge).lp_token() == address(curveFi_LPToken), \"CurveFi LP tokens do not match\");        \n\n        curveFi_CRVMinter = _minterContract;\n        curveFi_CRVToken = ICurveFi_Gauge(curveFi_LPGauge).crv_token();\n    }\n\n\n    /**\n     * @notice Deposits 4 stablecoins (registered in Curve.Fi Y pool)\n     * @param _amounts Array of amounts for CurveFI stablecoins in pool (denormalized to token decimals)\n     */\n    function multiStepDeposit(uint256[4] memory _amounts) public {\n        address[4] memory stablecoins = ICurveFi_DepositY(curveFi_Deposit).underlying_coins();\n\n        for (uint256 i = 0; i < stablecoins.length; i++) {\n            IERC20(stablecoins[i]).safeTransferFrom(_msgSender(), address(this), _amounts[i]);\n            IERC20(stablecoins[i]).safeApprove(curveFi_Deposit, _amounts[i]);\n        }\n\n        //Step 1 - deposit stablecoins and get Curve.Fi LP tokens\n        ICurveFi_DepositY(curveFi_Deposit).add_liquidity(_amounts, 0); //0 to mint all Curve has to \n\n        //Step 2 - stake Curve LP tokens into Gauge and get CRV rewards\n        uint256 curveLPBalance = IERC20(curveFi_LPToken).balanceOf(address(this));\n\n        IERC20(curveFi_LPToken).safeApprove(curveFi_LPGauge, curveLPBalance);\n        ICurveFi_Gauge(curveFi_LPGauge).deposit(curveLPBalance);\n\n        //Step 3 - get all the rewards (and make whatever you need with them)\n        crvTokenClaim();\n        uint256 crvAmount = IERC20(curveFi_CRVToken).balanceOf(address(this));\n        IERC20(curveFi_CRVToken).safeTransfer(_msgSender(), crvAmount);\n\n    }\n\n\n    /**\n     * @notice Withdraws 4 stablecoins (registered in Curve.Fi Y pool)\n     * @param _amounts Array of amounts for CurveFI stablecoins in pool (denormalized to token decimals)\n     */\n    function multiStepWithdraw(uint256[4] memory _amounts) public {\n        address[4] memory stablecoins = ICurveFi_DepositY(curveFi_Deposit).underlying_coins();\n\n        //Step 1 - Calculate amount of Curve LP-tokens to unstake\n        uint256 nWithdraw;\n        uint256 i;\n        for (i = 0; i < stablecoins.length; i++) {\n            nWithdraw = nWithdraw.add(normalize(stablecoins[i], _amounts[i]));\n        }\n\n        uint256 withdrawShares = calculateShares(nWithdraw);\n\n        //Check if you can re-use unstaked LP tokens\n        uint256 notStaked = curveLPTokenUnstaked();\n        if (notStaked > 0) {\n            withdrawShares = withdrawShares.sub(notStaked);\n        }\n\n        //Step 2 - Unstake Curve LP tokens from Gauge\n        ICurveFi_Gauge(curveFi_LPGauge).withdraw(withdrawShares);\n    \n        //Step 3 - Withdraw stablecoins from CurveDeposit\n        IERC20(curveFi_LPToken).safeApprove(curveFi_Deposit, withdrawShares);\n        ICurveFi_DepositY(curveFi_Deposit).remove_liquidity_imbalance(_amounts, withdrawShares);\n        \n        //Step 4 - Send stablecoins to the requestor\n        for (i = 0; i <  stablecoins.length; i++){\n            IERC20 stablecoin = IERC20(stablecoins[i]);\n            uint256 balance = stablecoin.balanceOf(address(this));\n            uint256 amount = (balance <= _amounts[i]) ? balance : _amounts[i]; //Safepoint for rounding\n            stablecoin.safeTransfer(_msgSender(), amount);\n        }\n    }\n\n    /**\n     * @notice Get amount of CurveFi LP tokens staked in the Gauge\n     */\n    function curveLPTokenStaked() public view returns(uint256) {\n        return ICurveFi_Gauge(curveFi_LPGauge).balanceOf(address(this));\n    }\n    \n    /**\n     * @notice Get amount of unstaked CurveFi LP tokens (which lay on this contract)\n     */\n    function curveLPTokenUnstaked() public view returns(uint256) {\n        return IERC20(curveFi_LPToken).balanceOf(address(this));\n    }\n\n    /**\n     * @notice Get full amount of Curve LP tokens available for this contract\n     */\n    function curveLPTokenBalance() public view returns(uint256) {\n        uint256 staked = curveLPTokenStaked();\n        uint256 unstaked = curveLPTokenUnstaked();\n        return unstaked.add(staked);\n    }\n\n    /**\n     * @notice Claim CRV reward\n     */\n    function crvTokenClaim() internal {\n        ICurveFi_Minter(curveFi_CRVMinter).mint(curveFi_LPGauge);\n    }\n\n    /**\n     * @notice Calculate shared part of this contract in LP token distriution\n     * @param normalizedWithdraw amount of stablecoins to withdraw normalized to 18 decimals\n     */    \n    function calculateShares(uint256 normalizedWithdraw) internal view returns(uint256) {\n        uint256 nBalance = normalizedBalance();\n        uint256 poolShares = curveLPTokenBalance();\n        \n        return poolShares.mul(normalizedWithdraw).div(nBalance);\n    }\n\n    /**\n     * @notice Balances of stablecoins available for withdraw\n     */\n    function balanceOfAll() public view returns(uint256[4] memory balances) {\n        address[4] memory stablecoins = ICurveFi_DepositY(curveFi_Deposit).underlying_coins();\n\n        uint256 curveLPBalance = curveLPTokenBalance();\n        uint256 curveLPTokenSupply = IERC20(curveFi_LPToken).totalSupply();\n\n        require(curveLPTokenSupply > 0, \"No Curve LP tokens minted\");\n\n        for (uint256 i = 0; i < stablecoins.length; i++) {\n            //Get Y-tokens balance\n            uint256 yLPTokenBalance = ICurveFi_SwapY(curveFi_Swap).balances(int128(i));\n            address yCoin = ICurveFi_SwapY(curveFi_Swap).coins(int128(i));\n\n            //Calculate user's shares in y-tokens\n            uint256 yShares = yLPTokenBalance.mul(curveLPBalance).div(curveLPTokenSupply);\n\n            //Get y-token price for underlying coin\n            uint256 yPrice = IYERC20(yCoin).getPricePerFullShare();\n\n            //Re-calculate available stablecoins balance by y-tokens shares\n            balances[i] = yPrice.mul(yShares).div(1e18);\n        }\n    }\n\n    /**\n     * @notice Balances of stablecoins available for withdraw normalized to 18 decimals\n     */\n    function normalizedBalance() public view returns(uint256) {\n        address[4] memory stablecoins = ICurveFi_DepositY(curveFi_Deposit).underlying_coins();\n        uint256[4] memory balances = balanceOfAll();\n\n        uint256 summ;\n        for (uint256 i=0; i < stablecoins.length; i++){\n            summ = summ.add(normalize(stablecoins[i], balances[i]));\n        }\n        return summ;\n    }\n\n    /**\n     * @notice Util to normalize balance up to 18 decimals\n     */\n    function normalize(address coin, uint256 amount) internal view returns(uint256) {\n        uint8 decimals = ERC20Detailed(coin).decimals();\n        if (decimals == 18) {\n            return amount;\n        } else if (decimals > 18) {\n            return amount.div(uint256(10)**(decimals-18));\n        } else if (decimals < 18) {\n            return amount.mul(uint256(10)**(18 - decimals));\n        }\n    }\n}"
			},
			"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/curvefi/IYERC20.sol": {
				"content": "pragma solidity ^0.5.12;\n\ncontract IYERC20 { \n\n    //ERC20 functions\n    function totalSupply() external view returns (uint256);\n    function balanceOf(address account) external view returns (uint256);\n    function transfer(address recipient, uint256 amount) external returns (bool);\n    function allowance(address owner, address spender) external view returns (uint256);\n    function approve(address spender, uint256 amount) external returns (bool);\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\n    function name() external view returns (string memory);\n    function symbol() external view returns (string memory);\n    function decimals() external view returns (uint8);\n\n    //Y-token functions\n    function deposit(uint256 amount) external;\n    function withdraw(uint256 shares) external;\n    function getPricePerFullShare() external view returns (uint256);\n\n    function token() external returns(address);\n\n}"
			},
			"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/curvefi/ICurveFi_SwapY.sol": {
				"content": "pragma solidity ^0.5.12;\n\n/** \n * @dev Interface for Curve.Fi swap contract for Y-pool.\n * @dev See original implementation in official repository:\n * https://github.com/curvefi/curve-contract/blob/master/contracts/pools/y/StableSwapY.vy\n */\n \ninterface ICurveFi_SwapY { \n    function add_liquidity(uint256[4] calldata amounts, uint256 min_mint_amount) external;\n    function remove_liquidity(uint256 _amount, uint256[4] calldata min_amounts) external;\n    function remove_liquidity_imbalance(uint256[4] calldata amounts, uint256 max_burn_amount) external;\n    function calc_token_amount(uint256[4] calldata amounts, bool deposit) external view returns(uint256);\n\n    function balances(int128 i) external view returns(uint256);\n    function coins(int128 i) external view returns (address);\n}"
			},
			"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/curvefi/ICurveFi_Minter.sol": {
				"content": "pragma solidity ^0.5.12;\n\n/** \n * @dev Interface for Curve.Fi CRV minter contract.\n * @dev See original implementation in official repository:\n * https://github.com/curvefi/curve-dao-contracts/blob/master/contracts/Minter.vy\n */\n \ninterface ICurveFi_Minter {\n    function mint(address gauge_addr) external;\n    function mint_for(address gauge_addr, address _for) external;\n    function minted(address _for, address gauge_addr) external view returns(uint256);\n\n    function toggle_approve_mint(address minting_user) external;\n\n    function token() external view returns(address);\n}"
			},
			"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/curvefi/ICurveFi_Gauge.sol": {
				"content": "pragma solidity ^0.5.12;\n\n/** \n * @dev Interface for Curve.Fi CRV staking Gauge contract.\n * @dev See original implementation in official repository:\n * https://github.com/curvefi/curve-dao-contracts/blob/master/contracts/LiquidityGauge.vy\n */\n \ninterface ICurveFi_Gauge {\n    function lp_token() external view returns(address);\n    function crv_token() external view returns(address);\n \n    function balanceOf(address addr) external view returns (uint256);\n    function deposit(uint256 _value) external;\n    function withdraw(uint256 _value) external;\n\n    function claimable_tokens(address addr) external returns (uint256);\n    function minter() external view returns(address); //use minter().mint(gauge_addr) to claim CRV\n\n    function integrate_fraction(address _for) external view returns(uint256);\n    function user_checkpoint(address _for) external returns(bool);\n}"
			},
			"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/curvefi/ICurveFi_DepositY.sol": {
				"content": "pragma solidity ^0.5.12;\n\n/** \n * @dev Interface for Curve.Fi deposit contract for Y-pool.\n * @dev See original implementation in official repository:\n * https://github.com/curvefi/curve-contract/blob/master/contracts/pools/y/DepositY.vy\n */\ncontract ICurveFi_DepositY { \n    function add_liquidity(uint256[4] calldata uamounts, uint256 min_mint_amount) external;\n    function remove_liquidity(uint256 _amount, uint256[4] calldata min_uamounts) external;\n    function remove_liquidity_imbalance(uint256[4] calldata uamounts, uint256 max_burn_amount) external;\n\n    function coins(int128 i) external view returns (address);\n    function underlying_coins(int128 i) external view returns (address);\n    function underlying_coins() external view returns (address[4] memory);\n    function curve() external view returns (address);\n    function token() external view returns (address);\n\n}"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/math/SafeMath.sol": {
				"content": "pragma solidity ^0.5.0;\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations with added overflow\n * checks.\n *\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\n * in bugs, because programmers usually assume that an overflow raises an\n * error, which is the standard behavior in high level programming languages.\n * `SafeMath` restores this intuition by reverting the transaction when an\n * operation overflows.\n *\n * Using this library instead of the unchecked operations eliminates an entire\n * class of bugs, so it's recommended to use it always.\n */\nlibrary SafeMath {\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        uint256 c = a + b;\n        require(c >= a, \"SafeMath: addition overflow\");\n\n        return c;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        return sub(a, b, \"SafeMath: subtraction overflow\");\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     * - Subtraction cannot overflow.\n     *\n     * _Available since v2.4.0._\n     */\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        require(b <= a, errorMessage);\n        uint256 c = a - b;\n\n        return c;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n        // benefit is lost if 'b' is also tested.\n        // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n        if (a == 0) {\n            return 0;\n        }\n\n        uint256 c = a * b;\n        require(c / a == b, \"SafeMath: multiplication overflow\");\n\n        return c;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers. Reverts on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        return div(a, b, \"SafeMath: division by zero\");\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers. Reverts with custom message on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     * - The divisor cannot be zero.\n     *\n     * _Available since v2.4.0._\n     */\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        // Solidity only automatically asserts when dividing by 0\n        require(b > 0, errorMessage);\n        uint256 c = a / b;\n        // assert(a == b * c + a % b); // There is no case in which this doesn't hold\n\n        return c;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * Reverts when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        return mod(a, b, \"SafeMath: modulo by zero\");\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * Reverts with custom message when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     * - The divisor cannot be zero.\n     *\n     * _Available since v2.4.0._\n     */\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        require(b != 0, errorMessage);\n        return a % b;\n    }\n}\n"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/SafeERC20.sol": {
				"content": "pragma solidity ^0.5.0;\n\nimport \"./IERC20.sol\";\nimport \"../../math/SafeMath.sol\";\nimport \"../../utils/Address.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for ERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    using SafeMath for uint256;\n    using Address for address;\n\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\n        callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\n    }\n\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\n        callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\n    }\n\n    function safeApprove(IERC20 token, address spender, uint256 value) internal {\n        // safeApprove should only be called when setting an initial allowance,\n        // or when resetting it to zero. To increase and decrease it, use\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\n        // solhint-disable-next-line max-line-length\n        require((value == 0) || (token.allowance(address(this), spender) == 0),\n            \"SafeERC20: approve from non-zero to non-zero allowance\"\n        );\n        callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\n    }\n\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        uint256 newAllowance = token.allowance(address(this), spender).add(value);\n        callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\n    }\n\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        uint256 newAllowance = token.allowance(address(this), spender).sub(value, \"SafeERC20: decreased allowance below zero\");\n        callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     */\n    function callOptionalReturn(IERC20 token, bytes memory data) private {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves.\n\n        // A Solidity high level call has three parts:\n        //  1. The target address is checked to verify it contains contract code\n        //  2. The call itself is made, and success asserted\n        //  3. The return value is decoded, which in turn checks the size of the returned data.\n        // solhint-disable-next-line max-line-length\n        require(address(token).isContract(), \"SafeERC20: call to non-contract\");\n\n        // solhint-disable-next-line avoid-low-level-calls\n        (bool success, bytes memory returndata) = address(token).call(data);\n        require(success, \"SafeERC20: low-level call failed\");\n\n        if (returndata.length > 0) { // Return data is optional\n            // solhint-disable-next-line max-line-length\n            require(abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\");\n        }\n    }\n}\n"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20Detailed.sol": {
				"content": "pragma solidity ^0.5.0;\n\nimport \"./IERC20.sol\";\n\n/**\n * @dev Optional functions from the ERC20 standard.\n */\ncontract ERC20Detailed is IERC20 {\n    string private _name;\n    string private _symbol;\n    uint8 private _decimals;\n\n    /**\n     * @dev Sets the values for `name`, `symbol`, and `decimals`. All three of\n     * these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor (string memory name, string memory symbol, uint8 decimals) public {\n        _name = name;\n        _symbol = symbol;\n        _decimals = decimals;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5,05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view returns (uint8) {\n        return _decimals;\n    }\n}\n"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/IERC20.sol": {
				"content": "pragma solidity ^0.5.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP. Does not include\n * the optional functions; to access them see {ERC20Detailed}.\n */\ninterface IERC20 {\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address recipient, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n}\n"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/ownership/Ownable.sol": {
				"content": "pragma solidity ^0.5.0;\n\nimport \"../GSN/Context.sol\";\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\ncontract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor () internal {\n        address msgSender = _msgSender();\n        _owner = msgSender;\n        emit OwnershipTransferred(address(0), msgSender);\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        require(isOwner(), \"Ownable: caller is not the owner\");\n        _;\n    }\n\n    /**\n     * @dev Returns true if the caller is the current owner.\n     */\n    function isOwner() public view returns (bool) {\n        return _msgSender() == _owner;\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public onlyOwner {\n        emit OwnershipTransferred(_owner, address(0));\n        _owner = address(0);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public onlyOwner {\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     */\n    function _transferOwnership(address newOwner) internal {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        emit OwnershipTransferred(_owner, newOwner);\n        _owner = newOwner;\n    }\n}\n"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/GSN/Context.sol": {
				"content": "pragma solidity ^0.5.0;\n\n/*\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with GSN meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\ncontract Context {\n    // Empty internal constructor, to prevent people from mistakenly deploying\n    // an instance of this contract, which should be used via inheritance.\n    constructor () internal { }\n    // solhint-disable-previous-line no-empty-blocks\n\n    function _msgSender() internal view returns (address payable) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view returns (bytes memory) {\n        this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\n        return msg.data;\n    }\n}\n"
			},
			"https://github.com/OpenZeppelin/openzeppelin-upgrades/blob/master/packages/core/contracts/Initializable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity >=0.4.24 <0.7.0;\n\n\n/**\n * @title Initializable\n *\n * @dev Deprecated. This contract is kept in the Upgrades Plugins for backwards compatibility purposes.\n * Users should use openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol instead.\n *\n * Helper contract to support initializer functions. To use it, replace\n * the constructor with a function that has the `initializer` modifier.\n * WARNING: Unlike constructors, initializer functions must be manually\n * invoked. This applies both to deploying an Initializable contract, as well\n * as extending an Initializable contract via inheritance.\n * WARNING: When used with inheritance, manual care must be taken to not invoke\n * a parent initializer twice, or ensure that all initializers are idempotent,\n * because this is not dealt with automatically as with constructors.\n */\ncontract Initializable {\n\n  /**\n   * @dev Indicates that the contract has been initialized.\n   */\n  bool private initialized;\n\n  /**\n   * @dev Indicates that the contract is in the process of being initialized.\n   */\n  bool private initializing;\n\n  /**\n   * @dev Modifier to use in the initializer function of a contract.\n   */\n  modifier initializer() {\n    require(initializing || isConstructor() || !initialized, \"Contract instance has already been initialized\");\n\n    bool isTopLevelCall = !initializing;\n    if (isTopLevelCall) {\n      initializing = true;\n      initialized = true;\n    }\n\n    _;\n\n    if (isTopLevelCall) {\n      initializing = false;\n    }\n  }\n\n  /// @dev Returns true if and only if the function is running in the constructor\n  function isConstructor() private view returns (bool) {\n    // extcodesize checks the size of the code stored in an address, and\n    // address returns the current address. Since the code is still not\n    // deployed when running a constructor, any checks on its code size will\n    // yield zero, making it an effective way to detect if a contract is\n    // under construction or not.\n    address self = address(this);\n    uint256 cs;\n    assembly { cs := extcodesize(self) }\n    return cs == 0;\n  }\n\n  // Reserved storage space to allow for layout changes in the future.\n  uint256[50] private ______gap;\n}\n"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/utils/Address.sol": {
				"content": "pragma solidity ^0.5.5;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following \n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // According to EIP-1052, 0x0 is the value returned for not-yet created accounts\n        // and 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470 is returned\n        // for accounts without code, i.e. `keccak256('')`\n        bytes32 codehash;\n        bytes32 accountHash = 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470;\n        // solhint-disable-next-line no-inline-assembly\n        assembly { codehash := extcodehash(account) }\n        return (codehash != accountHash && codehash != 0x0);\n    }\n\n    /**\n     * @dev Converts an `address` into `address payable`. Note that this is\n     * simply a type cast: the actual underlying value is not changed.\n     *\n     * _Available since v2.4.0._\n     */\n    function toPayable(address account) internal pure returns (address payable) {\n        return address(uint160(account));\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     *\n     * _Available since v2.4.0._\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        // solhint-disable-next-line avoid-call-value\n        (bool success, ) = recipient.call.value(amount)(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol": {
				"MoneyToCurve": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "balanceOfAll",
							"outputs": [
								{
									"internalType": "uint256[4]",
									"name": "balances",
									"type": "uint256[4]"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "curveFi_CRVMinter",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "curveFi_CRVToken",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "curveFi_Deposit",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "curveFi_LPGauge",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "curveFi_LPToken",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "curveFi_Swap",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "curveLPTokenBalance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "curveLPTokenStaked",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "curveLPTokenUnstaked",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_x",
									"type": "uint256"
								}
							],
							"name": "initialize",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "isOwner",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "uint256[4]",
									"name": "_amounts",
									"type": "uint256[4]"
								}
							],
							"name": "multiStepDeposit",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "uint256[4]",
									"name": "_amounts",
									"type": "uint256[4]"
								}
							],
							"name": "multiStepWithdraw",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "normalizedBalance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "_depositContract",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_gaugeContract",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_minterContract",
									"type": "address"
								}
							],
							"name": "setup",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "x",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {
							"isOwner()": {
								"details": "Returns true if the caller is the current owner."
							},
							"multiStepDeposit(uint256[4])": {
								"params": {
									"_amounts": "Array of amounts for CurveFI stablecoins in pool (denormalized to token decimals)"
								}
							},
							"multiStepWithdraw(uint256[4])": {
								"params": {
									"_amounts": "Array of amounts for CurveFI stablecoins in pool (denormalized to token decimals)"
								}
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.     * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"setup(address,address,address)": {
								"params": {
									"_depositContract": "CurveFi Deposit contract for Y-pool",
									"_gaugeContract": "CurveFi Gauge contract for Y-pool",
									"_minterContract": "CurveFi CRV minter"
								}
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						}
					},
					"evm": {
						"assembly": "    /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":1044:8905  contract MoneyToCurve is Initializable, Context, Ownable {... */\n  mstore(0x40, 0x80)\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/ownership/Ownable.sol\":698:715  address msgSender */\n  0x00\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/ownership/Ownable.sol\":718:730  _msgSender() */\n  tag_5\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/ownership/Ownable.sol\":718:728  _msgSender */\n  shl(0x20, tag_6)\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/ownership/Ownable.sol\":718:730  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_5:\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/ownership/Ownable.sol\":698:730  address msgSender = _msgSender() */\n  swap1\n  pop\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/ownership/Ownable.sol\":749:758  msgSender */\n  dup1\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/ownership/Ownable.sol\":740:746  _owner */\n  0x33\n  0x00\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/ownership/Ownable.sol\":740:758  _owner = msgSender */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/ownership/Ownable.sol\":806:815  msgSender */\n  dup1\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/ownership/Ownable.sol\":773:816  OwnershipTransferred(address(0), msgSender) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/ownership/Ownable.sol\":802:803  0 */\n  0x00\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/ownership/Ownable.sol\":773:816  OwnershipTransferred(address(0), msgSender) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/ownership/Ownable.sol\":664:823  constructor () internal {... */\n  pop\n    /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":1044:8905  contract MoneyToCurve is Initializable, Context, Ownable {... */\n  jump(tag_7)\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/GSN/Context.sol\":788:884  function _msgSender() internal view returns (address payable) {... */\ntag_6:\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/GSN/Context.sol\":833:848  address payable */\n  0x00\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/GSN/Context.sol\":867:877  msg.sender */\n  caller\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/GSN/Context.sol\":860:877  return msg.sender */\n  swap1\n  pop\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/GSN/Context.sol\":788:884  function _msgSender() internal view returns (address payable) {... */\n  swap1\n  jump\t// out\n    /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":1044:8905  contract MoneyToCurve is Initializable, Context, Ownable {... */\ntag_7:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":1044:8905  contract MoneyToCurve is Initializable, Context, Ownable {... */\n      mstore(0x40, 0x80)\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_1\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_1:\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":1044:8905  contract MoneyToCurve is Initializable, Context, Ownable {... */\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x8141d266\n      gt\n      tag_23\n      jumpi\n      dup1\n      0xbe873f50\n      gt\n      tag_24\n      jumpi\n      dup1\n      0xbe873f50\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xdfda714a\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xe011262a\n      eq\n      tag_20\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_21\n      jumpi\n      dup1\n      0xfe4b84df\n      eq\n      tag_22\n      jumpi\n      jump(tag_2)\n    tag_24:\n      dup1\n      0x8141d266\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x8f32d59b\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x97aa80d5\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xa3477c36\n      eq\n      tag_17\n      jumpi\n      jump(tag_2)\n    tag_23:\n      dup1\n      0x44f9c395\n      gt\n      tag_25\n      jumpi\n      dup1\n      0x44f9c395\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x628cb95e\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x77b8b1c7\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x7c241146\n      eq\n      tag_12\n      jumpi\n      jump(tag_2)\n    tag_25:\n      dup1\n      0x0c55699c\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x14a19aec\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x1c600416\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x208e509f\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x38eda370\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":1388:1404  uint256 public x */\n    tag_3:\n      tag_26\n      tag_27\n      jump\t// in\n    tag_26:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":2612:3742  function multiStepDeposit(uint256[4] memory _amounts) public {... */\n    tag_4:\n      tag_28\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:16   */\n      0x80\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:17   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_29\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_29:\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":2612:3742  function multiStepDeposit(uint256[4] memory _amounts) public {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      0x80\n      add\n      swap1\n      0x04\n      dup1\n      0x20\n      mul\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup3\n      mul(0x20, 0x04)\n        /* \"--CODEGEN--\":30:33   */\n      dup1\n        /* \"--CODEGEN--\":22:28   */\n      dup3\n        /* \"--CODEGEN--\":14:20   */\n      dup5\n        /* \"--CODEGEN--\":1:34   */\n      calldatacopy\n        /* \"--CODEGEN--\":99:100   */\n      0x00\n        /* \"--CODEGEN--\":93:96   */\n      dup2\n        /* \"--CODEGEN--\":85:91   */\n      dup5\n        /* \"--CODEGEN--\":81:97   */\n      add\n        /* \"--CODEGEN--\":74:101   */\n      mstore\n        /* \"--CODEGEN--\":137:141   */\n      0x1f\n        /* \"--CODEGEN--\":133:142   */\n      not\n        /* \"--CODEGEN--\":126:130   */\n      0x1f\n        /* \"--CODEGEN--\":121:124   */\n      dup3\n        /* \"--CODEGEN--\":117:131   */\n      add\n        /* \"--CODEGEN--\":113:143   */\n      and\n        /* \"--CODEGEN--\":106:143   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":169:172   */\n      dup1\n        /* \"--CODEGEN--\":161:167   */\n      dup4\n        /* \"--CODEGEN--\":157:173   */\n      add\n        /* \"--CODEGEN--\":147:173   */\n      swap3\n      pop\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":2612:3742  function multiStepDeposit(uint256[4] memory _amounts) public {... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap2\n      swap3\n      swap2\n      swap3\n      swap1\n      pop\n      pop\n      pop\n      tag_30\n      jump\t// in\n    tag_28:\n      stop\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":1208:1235  address public curveFi_Swap */\n    tag_5:\n      tag_31\n      tag_32\n      jump\t// in\n    tag_31:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":6874:7917  function balanceOfAll() public view returns(uint256[4] memory balances) {... */\n    tag_6:\n      tag_33\n      tag_34\n      jump\t// in\n    tag_33:\n      mload(0x40)\n      dup1\n      dup3\n      mul(0x20, 0x04)\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":23:24   */\n      0x00\n        /* \"--CODEGEN--\":8:108   */\n    tag_35:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_37\n      jumpi\n        /* \"--CODEGEN--\":99:100   */\n      dup1\n        /* \"--CODEGEN--\":94:97   */\n      dup3\n        /* \"--CODEGEN--\":90:101   */\n      add\n        /* \"--CODEGEN--\":84:102   */\n      mload\n        /* \"--CODEGEN--\":80:81   */\n      dup2\n        /* \"--CODEGEN--\":75:78   */\n      dup5\n        /* \"--CODEGEN--\":71:82   */\n      add\n        /* \"--CODEGEN--\":64:103   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":49:50   */\n      dup2\n        /* \"--CODEGEN--\":45:55   */\n      add\n        /* \"--CODEGEN--\":40:55   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_35)\n    tag_37:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":6874:7917  function balanceOfAll() public view returns(uint256[4] memory balances) {... */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":3941:5393  function multiStepWithdraw(uint256[4] memory _amounts) public {... */\n    tag_7:\n      tag_38\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:16   */\n      0x80\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:17   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_39\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_39:\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":3941:5393  function multiStepWithdraw(uint256[4] memory _amounts) public {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      0x80\n      add\n      swap1\n      0x04\n      dup1\n      0x20\n      mul\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup3\n      mul(0x20, 0x04)\n        /* \"--CODEGEN--\":30:33   */\n      dup1\n        /* \"--CODEGEN--\":22:28   */\n      dup3\n        /* \"--CODEGEN--\":14:20   */\n      dup5\n        /* \"--CODEGEN--\":1:34   */\n      calldatacopy\n        /* \"--CODEGEN--\":99:100   */\n      0x00\n        /* \"--CODEGEN--\":93:96   */\n      dup2\n        /* \"--CODEGEN--\":85:91   */\n      dup5\n        /* \"--CODEGEN--\":81:97   */\n      add\n        /* \"--CODEGEN--\":74:101   */\n      mstore\n        /* \"--CODEGEN--\":137:141   */\n      0x1f\n        /* \"--CODEGEN--\":133:142   */\n      not\n        /* \"--CODEGEN--\":126:130   */\n      0x1f\n        /* \"--CODEGEN--\":121:124   */\n      dup3\n        /* \"--CODEGEN--\":117:131   */\n      add\n        /* \"--CODEGEN--\":113:143   */\n      and\n        /* \"--CODEGEN--\":106:143   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":169:172   */\n      dup1\n        /* \"--CODEGEN--\":161:167   */\n      dup4\n        /* \"--CODEGEN--\":157:173   */\n      add\n        /* \"--CODEGEN--\":147:173   */\n      swap3\n      pop\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":3941:5393  function multiStepWithdraw(uint256[4] memory _amounts) public {... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap2\n      swap3\n      swap2\n      swap3\n      swap1\n      pop\n      pop\n      pop\n      tag_40\n      jump\t// in\n    tag_38:\n      stop\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":5482:5621  function curveLPTokenStaked() public view returns(uint256) {... */\n    tag_8:\n      tag_41\n      tag_42\n      jump\t// in\n    tag_41:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":8027:8419  function normalizedBalance() public view returns(uint256) {... */\n    tag_9:\n      tag_43\n      tag_44\n      jump\t// in\n    tag_43:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/ownership/Ownable.sol\":1684:1821  function renounceOwnership() public onlyOwner {... */\n    tag_10:\n      tag_45\n      tag_46\n      jump\t// in\n    tag_45:\n      stop\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":1737:2414  function setup(address _depositContract, address _gaugeContract, address _minterContract) external onlyOwner {... */\n    tag_11:\n      tag_47\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x60\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_48\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_48:\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":1737:2414  function setup(address _depositContract, address _gaugeContract, address _minterContract) external onlyOwner {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_49\n      jump\t// in\n    tag_47:\n      stop\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":1313:1345  address public curveFi_CRVMinter */\n    tag_12:\n      tag_50\n      tag_51\n      jump\t// in\n    tag_50:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":1351:1382  address public curveFi_CRVToken */\n    tag_13:\n      tag_52\n      tag_53\n      jump\t// in\n    tag_52:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/ownership/Ownable.sol\":899:976  function owner() public view returns (address) {... */\n    tag_14:\n      tag_54\n      tag_55\n      jump\t// in\n    tag_54:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/ownership/Ownable.sol\":1250:1342  function isOwner() public view returns (bool) {... */\n    tag_15:\n      tag_56\n      tag_57\n      jump\t// in\n    tag_56:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":5965:6167  function curveLPTokenBalance() public view returns(uint256) {... */\n    tag_16:\n      tag_58\n      tag_59\n      jump\t// in\n    tag_58:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":1241:1271  address public curveFi_LPToken */\n    tag_17:\n      tag_60\n      tag_61\n      jump\t// in\n    tag_60:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":1172:1202  address public curveFi_Deposit */\n    tag_18:\n      tag_62\n      tag_63\n      jump\t// in\n    tag_62:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":5732:5865  function curveLPTokenUnstaked() public view returns(uint256) {... */\n    tag_19:\n      tag_64\n      tag_65\n      jump\t// in\n    tag_64:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":1277:1307  address public curveFi_LPGauge */\n    tag_20:\n      tag_66\n      tag_67\n      jump\t// in\n    tag_66:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/ownership/Ownable.sol\":1970:2077  function transferOwnership(address newOwner) public onlyOwner {... */\n    tag_21:\n      tag_68\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_69\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_69:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/ownership/Ownable.sol\":1970:2077  function transferOwnership(address newOwner) public onlyOwner {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_70\n      jump\t// in\n    tag_68:\n      stop\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":1415:1489  function initialize(uint256 _x) public initializer {... */\n    tag_22:\n      tag_71\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_72\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_72:\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":1415:1489  function initialize(uint256 _x) public initializer {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_73\n      jump\t// in\n    tag_71:\n      stop\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":1388:1404  uint256 public x */\n    tag_27:\n      sload(0x3a)\n      dup2\n      jump\t// out\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":2612:3742  function multiStepDeposit(uint256[4] memory _amounts) public {... */\n    tag_30:\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":2683:2712  address[4] memory stablecoins */\n      tag_75\n      tag_76\n      jump\t// in\n    tag_75:\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":2733:2748  curveFi_Deposit */\n      0x34\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":2715:2766  ICurveFi_DepositY(curveFi_Deposit).underlying_coins */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xfb6d3a89\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":2715:2768  ICurveFi_DepositY(curveFi_Deposit).underlying_coins() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x80\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_77\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_77:\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":2715:2768  ICurveFi_DepositY(curveFi_Deposit).underlying_coins() */\n      pop\n      gas\n      staticcall\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_78\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_78:\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":2715:2768  ICurveFi_DepositY(curveFi_Deposit).underlying_coins() */\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n        /* \"--CODEGEN--\":101:105   */\n      0x1f\n        /* \"--CODEGEN--\":97:106   */\n      not\n        /* \"--CODEGEN--\":90:94   */\n      0x1f\n        /* \"--CODEGEN--\":84:88   */\n      dup3\n        /* \"--CODEGEN--\":80:95   */\n      add\n        /* \"--CODEGEN--\":76:107   */\n      and\n        /* \"--CODEGEN--\":69:74   */\n      dup3\n        /* \"--CODEGEN--\":65:108   */\n      add\n        /* \"--CODEGEN--\":126:132   */\n      dup1\n        /* \"--CODEGEN--\":120:124   */\n      0x40\n        /* \"--CODEGEN--\":113:133   */\n      mstore\n        /* \"--CODEGEN--\":0:138   */\n      pop\n        /* \"--CODEGEN--\":13:16   */\n      0x80\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:17   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_79\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_79:\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":2715:2768  ICurveFi_DepositY(curveFi_Deposit).underlying_coins() */\n      dup2\n      add\n      swap1\n      dup1\n      swap2\n      swap1\n      pop\n      pop\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":2683:2768  address[4] memory stablecoins = ICurveFi_DepositY(curveFi_Deposit).underlying_coins() */\n      swap1\n      pop\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":2784:2793  uint256 i */\n      0x00\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":2796:2797  0 */\n      dup1\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":2784:2797  uint256 i = 0 */\n      swap1\n      pop\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":2779:3012  for (uint256 i = 0; i < stablecoins.length; i++) {... */\n    tag_80:\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":2803:2821  stablecoins.length */\n      0x04\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":2799:2800  i */\n      dup2\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":2799:2821  i < stablecoins.length */\n      lt\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":2779:3012  for (uint256 i = 0; i < stablecoins.length; i++) {... */\n      iszero\n      tag_81\n      jumpi\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":2842:2923  IERC20(stablecoins[i]).safeTransferFrom(_msgSender(), address(this), _amounts[i]) */\n      tag_83\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":2882:2894  _msgSender() */\n      tag_84\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":2882:2892  _msgSender */\n      tag_85\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":2882:2894  _msgSender() */\n      jump\t// in\n    tag_84:\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":2904:2908  this */\n      address\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":2911:2919  _amounts */\n      dup6\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":2920:2921  i */\n      dup5\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":2911:2922  _amounts[i] */\n      0x04\n      dup2\n      lt\n      tag_86\n      jumpi\n      invalid\n    tag_86:\n      0x20\n      mul\n      add\n      mload\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":2849:2860  stablecoins */\n      dup6\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":2861:2862  i */\n      dup6\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":2849:2863  stablecoins[i] */\n      0x04\n      dup2\n      lt\n      tag_87\n      jumpi\n      invalid\n    tag_87:\n      0x20\n      mul\n      add\n      mload\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":2842:2881  IERC20(stablecoins[i]).safeTransferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_88\n      swap1\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":2842:2923  IERC20(stablecoins[i]).safeTransferFrom(_msgSender(), address(this), _amounts[i]) */\n      swap4\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_83:\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":2937:3001  IERC20(stablecoins[i]).safeApprove(curveFi_Deposit, _amounts[i]) */\n      tag_89\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":2972:2987  curveFi_Deposit */\n      0x34\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":2989:2997  _amounts */\n      dup5\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":2998:2999  i */\n      dup4\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":2989:3000  _amounts[i] */\n      0x04\n      dup2\n      lt\n      tag_90\n      jumpi\n      invalid\n    tag_90:\n      0x20\n      mul\n      add\n      mload\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":2944:2955  stablecoins */\n      dup5\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":2956:2957  i */\n      dup5\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":2944:2958  stablecoins[i] */\n      0x04\n      dup2\n      lt\n      tag_91\n      jumpi\n      invalid\n    tag_91:\n      0x20\n      mul\n      add\n      mload\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":2937:2971  IERC20(stablecoins[i]).safeApprove */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_92\n      swap1\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":2937:3001  IERC20(stablecoins[i]).safeApprove(curveFi_Deposit, _amounts[i]) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_89:\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":2823:2826  i++ */\n      dup1\n      dup1\n      0x01\n      add\n      swap2\n      pop\n      pop\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":2779:3012  for (uint256 i = 0; i < stablecoins.length; i++) {... */\n      jump(tag_80)\n    tag_81:\n      pop\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":3106:3121  curveFi_Deposit */\n      0x34\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":3088:3136  ICurveFi_DepositY(curveFi_Deposit).add_liquidity */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x029b2f34\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":3137:3145  _amounts */\n      dup4\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":3147:3148  0 */\n      0x00\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":3088:3149  ICurveFi_DepositY(curveFi_Deposit).add_liquidity(_amounts, 0) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup4\n      mul(0x20, 0x04)\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":23:24   */\n      0x00\n        /* \"--CODEGEN--\":8:108   */\n    tag_93:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_95\n      jumpi\n        /* \"--CODEGEN--\":99:100   */\n      dup1\n        /* \"--CODEGEN--\":94:97   */\n      dup3\n        /* \"--CODEGEN--\":90:101   */\n      add\n        /* \"--CODEGEN--\":84:102   */\n      mload\n        /* \"--CODEGEN--\":80:81   */\n      dup2\n        /* \"--CODEGEN--\":75:78   */\n      dup5\n        /* \"--CODEGEN--\":71:82   */\n      add\n        /* \"--CODEGEN--\":64:103   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":49:50   */\n      dup2\n        /* \"--CODEGEN--\":45:55   */\n      add\n        /* \"--CODEGEN--\":40:55   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_93)\n    tag_95:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":3088:3149  ICurveFi_DepositY(curveFi_Deposit).add_liquidity(_amounts, 0) */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap3\n      pop\n      pop\n      pop\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_96\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_96:\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":3088:3149  ICurveFi_DepositY(curveFi_Deposit).add_liquidity(_amounts, 0) */\n      pop\n      gas\n      call\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_97\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_97:\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":3088:3149  ICurveFi_DepositY(curveFi_Deposit).add_liquidity(_amounts, 0) */\n      pop\n      pop\n      pop\n      pop\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":3262:3284  uint256 curveLPBalance */\n      0x00\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":3294:3309  curveFi_LPToken */\n      0x36\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":3287:3320  IERC20(curveFi_LPToken).balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":3329:3333  this */\n      address\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":3287:3335  IERC20(curveFi_LPToken).balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_98\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_98:\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":3287:3335  IERC20(curveFi_LPToken).balanceOf(address(this)) */\n      pop\n      gas\n      staticcall\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_99\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_99:\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":3287:3335  IERC20(curveFi_LPToken).balanceOf(address(this)) */\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_100\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_100:\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":3287:3335  IERC20(curveFi_LPToken).balanceOf(address(this)) */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":3262:3335  uint256 curveLPBalance = IERC20(curveFi_LPToken).balanceOf(address(this)) */\n      swap1\n      pop\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":3346:3414  IERC20(curveFi_LPToken).safeApprove(curveFi_LPGauge, curveLPBalance) */\n      tag_101\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":3382:3397  curveFi_LPGauge */\n      0x37\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":3399:3413  curveLPBalance */\n      dup3\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":3353:3368  curveFi_LPToken */\n      0x36\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":3346:3381  IERC20(curveFi_LPToken).safeApprove */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_92\n      swap1\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":3346:3414  IERC20(curveFi_LPToken).safeApprove(curveFi_LPGauge, curveLPBalance) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_101:\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":3439:3454  curveFi_LPGauge */\n      0x37\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":3424:3463  ICurveFi_Gauge(curveFi_LPGauge).deposit */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xb6b55f25\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":3464:3478  curveLPBalance */\n      dup3\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":3424:3479  ICurveFi_Gauge(curveFi_LPGauge).deposit(curveLPBalance) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_102\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_102:\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":3424:3479  ICurveFi_Gauge(curveFi_LPGauge).deposit(curveLPBalance) */\n      pop\n      gas\n      call\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_103\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_103:\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":3424:3479  ICurveFi_Gauge(curveFi_LPGauge).deposit(curveLPBalance) */\n      pop\n      pop\n      pop\n      pop\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":3568:3583  crvTokenClaim() */\n      tag_104\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":3568:3581  crvTokenClaim */\n      tag_105\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":3568:3583  crvTokenClaim() */\n      jump\t// in\n    tag_104:\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":3593:3610  uint256 crvAmount */\n      0x00\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":3620:3636  curveFi_CRVToken */\n      0x39\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":3613:3647  IERC20(curveFi_CRVToken).balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":3656:3660  this */\n      address\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":3613:3662  IERC20(curveFi_CRVToken).balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_106\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_106:\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":3613:3662  IERC20(curveFi_CRVToken).balanceOf(address(this)) */\n      pop\n      gas\n      staticcall\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_107\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_107:\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":3613:3662  IERC20(curveFi_CRVToken).balanceOf(address(this)) */\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_108\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_108:\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":3613:3662  IERC20(curveFi_CRVToken).balanceOf(address(this)) */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":3593:3662  uint256 crvAmount = IERC20(curveFi_CRVToken).balanceOf(address(this)) */\n      swap1\n      pop\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":3672:3734  IERC20(curveFi_CRVToken).safeTransfer(_msgSender(), crvAmount) */\n      tag_109\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":3710:3722  _msgSender() */\n      tag_110\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":3710:3720  _msgSender */\n      tag_85\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":3710:3722  _msgSender() */\n      jump\t// in\n    tag_110:\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":3724:3733  crvAmount */\n      dup3\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":3679:3695  curveFi_CRVToken */\n      0x39\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":3672:3709  IERC20(curveFi_CRVToken).safeTransfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_111\n      swap1\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":3672:3734  IERC20(curveFi_CRVToken).safeTransfer(_msgSender(), crvAmount) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_109:\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":2612:3742  function multiStepDeposit(uint256[4] memory _amounts) public {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":1208:1235  address public curveFi_Swap */\n    tag_32:\n      0x35\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":6874:7917  function balanceOfAll() public view returns(uint256[4] memory balances) {... */\n    tag_34:\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":6918:6944  uint256[4] memory balances */\n      tag_112\n      tag_113\n      jump\t// in\n    tag_112:\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":6956:6985  address[4] memory stablecoins */\n      tag_115\n      tag_76\n      jump\t// in\n    tag_115:\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":7006:7021  curveFi_Deposit */\n      0x34\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":6988:7039  ICurveFi_DepositY(curveFi_Deposit).underlying_coins */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xfb6d3a89\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":6988:7041  ICurveFi_DepositY(curveFi_Deposit).underlying_coins() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x80\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_116\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_116:\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":6988:7041  ICurveFi_DepositY(curveFi_Deposit).underlying_coins() */\n      pop\n      gas\n      staticcall\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_117\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_117:\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":6988:7041  ICurveFi_DepositY(curveFi_Deposit).underlying_coins() */\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n        /* \"--CODEGEN--\":101:105   */\n      0x1f\n        /* \"--CODEGEN--\":97:106   */\n      not\n        /* \"--CODEGEN--\":90:94   */\n      0x1f\n        /* \"--CODEGEN--\":84:88   */\n      dup3\n        /* \"--CODEGEN--\":80:95   */\n      add\n        /* \"--CODEGEN--\":76:107   */\n      and\n        /* \"--CODEGEN--\":69:74   */\n      dup3\n        /* \"--CODEGEN--\":65:108   */\n      add\n        /* \"--CODEGEN--\":126:132   */\n      dup1\n        /* \"--CODEGEN--\":120:124   */\n      0x40\n        /* \"--CODEGEN--\":113:133   */\n      mstore\n        /* \"--CODEGEN--\":0:138   */\n      pop\n        /* \"--CODEGEN--\":13:16   */\n      0x80\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:17   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_118\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_118:\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":6988:7041  ICurveFi_DepositY(curveFi_Deposit).underlying_coins() */\n      dup2\n      add\n      swap1\n      dup1\n      swap2\n      swap1\n      pop\n      pop\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":6956:7041  address[4] memory stablecoins = ICurveFi_DepositY(curveFi_Deposit).underlying_coins() */\n      swap1\n      pop\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":7052:7074  uint256 curveLPBalance */\n      0x00\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":7077:7098  curveLPTokenBalance() */\n      tag_119\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":7077:7096  curveLPTokenBalance */\n      tag_59\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":7077:7098  curveLPTokenBalance() */\n      jump\t// in\n    tag_119:\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":7052:7098  uint256 curveLPBalance = curveLPTokenBalance() */\n      swap1\n      pop\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":7108:7134  uint256 curveLPTokenSupply */\n      0x00\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":7144:7159  curveFi_LPToken */\n      0x36\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":7137:7172  IERC20(curveFi_LPToken).totalSupply */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x18160ddd\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":7137:7174  IERC20(curveFi_LPToken).totalSupply() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_120\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_120:\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":7137:7174  IERC20(curveFi_LPToken).totalSupply() */\n      pop\n      gas\n      staticcall\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_121\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_121:\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":7137:7174  IERC20(curveFi_LPToken).totalSupply() */\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_122\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_122:\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":7137:7174  IERC20(curveFi_LPToken).totalSupply() */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":7108:7174  uint256 curveLPTokenSupply = IERC20(curveFi_LPToken).totalSupply() */\n      swap1\n      pop\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":7214:7215  0 */\n      0x00\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":7193:7211  curveLPTokenSupply */\n      dup2\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":7193:7215  curveLPTokenSupply > 0 */\n      gt\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":7185:7245  require(curveLPTokenSupply > 0, \"No Curve LP tokens minted\") */\n      tag_123\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x19\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x4e6f204375727665204c5020746f6b656e73206d696e74656400000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_123:\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":7261:7270  uint256 i */\n      0x00\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":7273:7274  0 */\n      dup1\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":7261:7274  uint256 i = 0 */\n      swap1\n      pop\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":7256:7911  for (uint256 i = 0; i < stablecoins.length; i++) {... */\n    tag_124:\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":7280:7298  stablecoins.length */\n      0x04\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":7276:7277  i */\n      dup2\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":7276:7298  i < stablecoins.length */\n      lt\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":7256:7911  for (uint256 i = 0; i < stablecoins.length; i++) {... */\n      iszero\n      tag_125\n      jumpi\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":7354:7377  uint256 yLPTokenBalance */\n      0x00\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":7395:7407  curveFi_Swap */\n      0x35\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":7380:7417  ICurveFi_SwapY(curveFi_Swap).balances */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x065a80d8\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":7425:7426  i */\n      dup4\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":7380:7428  ICurveFi_SwapY(curveFi_Swap).balances(int128(i)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup3\n      0x0f\n      signextend\n      0x0f\n      signextend\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_127\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_127:\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":7380:7428  ICurveFi_SwapY(curveFi_Swap).balances(int128(i)) */\n      pop\n      gas\n      staticcall\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_128\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_128:\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":7380:7428  ICurveFi_SwapY(curveFi_Swap).balances(int128(i)) */\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_129\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_129:\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":7380:7428  ICurveFi_SwapY(curveFi_Swap).balances(int128(i)) */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":7354:7428  uint256 yLPTokenBalance = ICurveFi_SwapY(curveFi_Swap).balances(int128(i)) */\n      swap1\n      pop\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":7442:7455  address yCoin */\n      0x00\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":7473:7485  curveFi_Swap */\n      0x35\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":7458:7492  ICurveFi_SwapY(curveFi_Swap).coins */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23746eb8\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":7500:7501  i */\n      dup5\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":7458:7503  ICurveFi_SwapY(curveFi_Swap).coins(int128(i)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup3\n      0x0f\n      signextend\n      0x0f\n      signextend\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_130\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_130:\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":7458:7503  ICurveFi_SwapY(curveFi_Swap).coins(int128(i)) */\n      pop\n      gas\n      staticcall\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_131\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_131:\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":7458:7503  ICurveFi_SwapY(curveFi_Swap).coins(int128(i)) */\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_132\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_132:\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":7458:7503  ICurveFi_SwapY(curveFi_Swap).coins(int128(i)) */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":7442:7503  address yCoin = ICurveFi_SwapY(curveFi_Swap).coins(int128(i)) */\n      swap1\n      pop\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":7568:7583  uint256 yShares */\n      0x00\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":7586:7645  yLPTokenBalance.mul(curveLPBalance).div(curveLPTokenSupply) */\n      tag_133\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":7626:7644  curveLPTokenSupply */\n      dup6\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":7586:7621  yLPTokenBalance.mul(curveLPBalance) */\n      tag_134\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":7606:7620  curveLPBalance */\n      dup9\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":7586:7601  yLPTokenBalance */\n      dup7\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":7586:7605  yLPTokenBalance.mul */\n      tag_135\n      swap1\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":7586:7621  yLPTokenBalance.mul(curveLPBalance) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_134:\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":7586:7625  yLPTokenBalance.mul(curveLPBalance).div */\n      tag_136\n      swap1\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":7586:7645  yLPTokenBalance.mul(curveLPBalance).div(curveLPTokenSupply) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_133:\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":7568:7645  uint256 yShares = yLPTokenBalance.mul(curveLPBalance).div(curveLPTokenSupply) */\n      swap1\n      pop\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":7712:7726  uint256 yPrice */\n      0x00\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":7737:7742  yCoin */\n      dup3\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":7729:7764  IYERC20(yCoin).getPricePerFullShare */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x77c7b8fc\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":7729:7766  IYERC20(yCoin).getPricePerFullShare() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_137\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_137:\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":7729:7766  IYERC20(yCoin).getPricePerFullShare() */\n      pop\n      gas\n      staticcall\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_138\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_138:\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":7729:7766  IYERC20(yCoin).getPricePerFullShare() */\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_139\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_139:\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":7729:7766  IYERC20(yCoin).getPricePerFullShare() */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":7712:7766  uint256 yPrice = IYERC20(yCoin).getPricePerFullShare() */\n      swap1\n      pop\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":7871:7900  yPrice.mul(yShares).div(1e18) */\n      tag_140\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":7895:7899  1e18 */\n      0x0de0b6b3a7640000\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":7871:7890  yPrice.mul(yShares) */\n      tag_141\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":7882:7889  yShares */\n      dup5\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":7871:7877  yPrice */\n      dup5\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":7871:7881  yPrice.mul */\n      tag_135\n      swap1\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":7871:7890  yPrice.mul(yShares) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_141:\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":7871:7894  yPrice.mul(yShares).div */\n      tag_136\n      swap1\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":7871:7900  yPrice.mul(yShares).div(1e18) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_140:\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":7857:7865  balances */\n      dup10\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":7866:7867  i */\n      dup7\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":7857:7868  balances[i] */\n      0x04\n      dup2\n      lt\n      tag_142\n      jumpi\n      invalid\n    tag_142:\n      0x20\n      mul\n      add\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":7857:7900  balances[i] = yPrice.mul(yShares).div(1e18) */\n      dup2\n      dup2\n      mstore\n      pop\n      pop\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":7256:7911  for (uint256 i = 0; i < stablecoins.length; i++) {... */\n      pop\n      pop\n      pop\n      pop\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":7300:7303  i++ */\n      dup1\n      dup1\n      0x01\n      add\n      swap2\n      pop\n      pop\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":7256:7911  for (uint256 i = 0; i < stablecoins.length; i++) {... */\n      jump(tag_124)\n    tag_125:\n      pop\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":6874:7917  function balanceOfAll() public view returns(uint256[4] memory balances) {... */\n      pop\n      pop\n      pop\n      swap1\n      jump\t// out\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":3941:5393  function multiStepWithdraw(uint256[4] memory _amounts) public {... */\n    tag_40:\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":4013:4042  address[4] memory stablecoins */\n      tag_144\n      tag_76\n      jump\t// in\n    tag_144:\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":4063:4078  curveFi_Deposit */\n      0x34\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":4045:4096  ICurveFi_DepositY(curveFi_Deposit).underlying_coins */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xfb6d3a89\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":4045:4098  ICurveFi_DepositY(curveFi_Deposit).underlying_coins() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x80\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_145\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_145:\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":4045:4098  ICurveFi_DepositY(curveFi_Deposit).underlying_coins() */\n      pop\n      gas\n      staticcall\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_146\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_146:\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":4045:4098  ICurveFi_DepositY(curveFi_Deposit).underlying_coins() */\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n        /* \"--CODEGEN--\":101:105   */\n      0x1f\n        /* \"--CODEGEN--\":97:106   */\n      not\n        /* \"--CODEGEN--\":90:94   */\n      0x1f\n        /* \"--CODEGEN--\":84:88   */\n      dup3\n        /* \"--CODEGEN--\":80:95   */\n      add\n        /* \"--CODEGEN--\":76:107   */\n      and\n        /* \"--CODEGEN--\":69:74   */\n      dup3\n        /* \"--CODEGEN--\":65:108   */\n      add\n        /* \"--CODEGEN--\":126:132   */\n      dup1\n        /* \"--CODEGEN--\":120:124   */\n      0x40\n        /* \"--CODEGEN--\":113:133   */\n      mstore\n        /* \"--CODEGEN--\":0:138   */\n      pop\n        /* \"--CODEGEN--\":13:16   */\n      0x80\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:17   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_147\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_147:\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":4045:4098  ICurveFi_DepositY(curveFi_Deposit).underlying_coins() */\n      dup2\n      add\n      swap1\n      dup1\n      swap2\n      swap1\n      pop\n      pop\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":4013:4098  address[4] memory stablecoins = ICurveFi_DepositY(curveFi_Deposit).underlying_coins() */\n      swap1\n      pop\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":4175:4192  uint256 nWithdraw */\n      0x00\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":4202:4211  uint256 i */\n      dup1\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":4230:4231  0 */\n      0x00\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":4226:4231  i = 0 */\n      swap1\n      pop\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":4221:4352  for (i = 0; i < stablecoins.length; i++) {... */\n    tag_148:\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":4237:4255  stablecoins.length */\n      0x04\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":4233:4234  i */\n      dup2\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":4233:4255  i < stablecoins.length */\n      lt\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":4221:4352  for (i = 0; i < stablecoins.length; i++) {... */\n      iszero\n      tag_149\n      jumpi\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":4288:4341  nWithdraw.add(normalize(stablecoins[i], _amounts[i])) */\n      tag_151\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":4302:4340  normalize(stablecoins[i], _amounts[i]) */\n      tag_152\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":4312:4323  stablecoins */\n      dup5\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":4324:4325  i */\n      dup4\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":4312:4326  stablecoins[i] */\n      0x04\n      dup2\n      lt\n      tag_153\n      jumpi\n      invalid\n    tag_153:\n      0x20\n      mul\n      add\n      mload\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":4328:4336  _amounts */\n      dup7\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":4337:4338  i */\n      dup5\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":4328:4339  _amounts[i] */\n      0x04\n      dup2\n      lt\n      tag_154\n      jumpi\n      invalid\n    tag_154:\n      0x20\n      mul\n      add\n      mload\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":4302:4311  normalize */\n      tag_155\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":4302:4340  normalize(stablecoins[i], _amounts[i]) */\n      jump\t// in\n    tag_152:\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":4288:4297  nWithdraw */\n      dup4\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":4288:4301  nWithdraw.add */\n      tag_156\n      swap1\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":4288:4341  nWithdraw.add(normalize(stablecoins[i], _amounts[i])) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_151:\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":4276:4341  nWithdraw = nWithdraw.add(normalize(stablecoins[i], _amounts[i])) */\n      swap2\n      pop\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":4257:4260  i++ */\n      dup1\n      dup1\n      0x01\n      add\n      swap2\n      pop\n      pop\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":4221:4352  for (i = 0; i < stablecoins.length; i++) {... */\n      jump(tag_148)\n    tag_149:\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":4362:4384  uint256 withdrawShares */\n      0x00\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":4387:4413  calculateShares(nWithdraw) */\n      tag_157\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":4403:4412  nWithdraw */\n      dup4\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":4387:4402  calculateShares */\n      tag_158\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":4387:4413  calculateShares(nWithdraw) */\n      jump\t// in\n    tag_157:\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":4362:4413  uint256 withdrawShares = calculateShares(nWithdraw) */\n      swap1\n      pop\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":4477:4494  uint256 notStaked */\n      0x00\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":4497:4519  curveLPTokenUnstaked() */\n      tag_159\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":4497:4517  curveLPTokenUnstaked */\n      tag_65\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":4497:4519  curveLPTokenUnstaked() */\n      jump\t// in\n    tag_159:\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":4477:4519  uint256 notStaked = curveLPTokenUnstaked() */\n      swap1\n      pop\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":4545:4546  0 */\n      0x00\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":4533:4542  notStaked */\n      dup2\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":4533:4546  notStaked > 0 */\n      gt\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":4529:4619  if (notStaked > 0) {... */\n      iszero\n      tag_160\n      jumpi\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":4579:4608  withdrawShares.sub(notStaked) */\n      tag_161\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":4598:4607  notStaked */\n      dup2\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":4579:4593  withdrawShares */\n      dup4\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":4579:4597  withdrawShares.sub */\n      tag_162\n      swap1\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":4579:4608  withdrawShares.sub(notStaked) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_161:\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":4562:4608  withdrawShares = withdrawShares.sub(notStaked) */\n      swap2\n      pop\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":4529:4619  if (notStaked > 0) {... */\n    tag_160:\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":4698:4713  curveFi_LPGauge */\n      0x37\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":4683:4723  ICurveFi_Gauge(curveFi_LPGauge).withdraw */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x2e1a7d4d\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":4724:4738  withdrawShares */\n      dup4\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":4683:4739  ICurveFi_Gauge(curveFi_LPGauge).withdraw(withdrawShares) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_163\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_163:\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":4683:4739  ICurveFi_Gauge(curveFi_LPGauge).withdraw(withdrawShares) */\n      pop\n      gas\n      call\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_164\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_164:\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":4683:4739  ICurveFi_Gauge(curveFi_LPGauge).withdraw(withdrawShares) */\n      pop\n      pop\n      pop\n      pop\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":4812:4880  IERC20(curveFi_LPToken).safeApprove(curveFi_Deposit, withdrawShares) */\n      tag_165\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":4848:4863  curveFi_Deposit */\n      0x34\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":4865:4879  withdrawShares */\n      dup4\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":4819:4834  curveFi_LPToken */\n      0x36\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":4812:4847  IERC20(curveFi_LPToken).safeApprove */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_92\n      swap1\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":4812:4880  IERC20(curveFi_LPToken).safeApprove(curveFi_Deposit, withdrawShares) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_165:\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":4908:4923  curveFi_Deposit */\n      0x34\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":4890:4951  ICurveFi_DepositY(curveFi_Deposit).remove_liquidity_imbalance */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x18a7bd76\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":4952:4960  _amounts */\n      dup8\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":4962:4976  withdrawShares */\n      dup5\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":4890:4977  ICurveFi_DepositY(curveFi_Deposit).remove_liquidity_imbalance(_amounts, withdrawShares) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup4\n      mul(0x20, 0x04)\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":23:24   */\n      0x00\n        /* \"--CODEGEN--\":8:108   */\n    tag_166:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_168\n      jumpi\n        /* \"--CODEGEN--\":99:100   */\n      dup1\n        /* \"--CODEGEN--\":94:97   */\n      dup3\n        /* \"--CODEGEN--\":90:101   */\n      add\n        /* \"--CODEGEN--\":84:102   */\n      mload\n        /* \"--CODEGEN--\":80:81   */\n      dup2\n        /* \"--CODEGEN--\":75:78   */\n      dup5\n        /* \"--CODEGEN--\":71:82   */\n      add\n        /* \"--CODEGEN--\":64:103   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":49:50   */\n      dup2\n        /* \"--CODEGEN--\":45:55   */\n      add\n        /* \"--CODEGEN--\":40:55   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_166)\n    tag_168:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":4890:4977  ICurveFi_DepositY(curveFi_Deposit).remove_liquidity_imbalance(_amounts, withdrawShares) */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap3\n      pop\n      pop\n      pop\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_169\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_169:\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":4890:4977  ICurveFi_DepositY(curveFi_Deposit).remove_liquidity_imbalance(_amounts, withdrawShares) */\n      pop\n      gas\n      call\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_170\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_170:\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":4890:4977  ICurveFi_DepositY(curveFi_Deposit).remove_liquidity_imbalance(_amounts, withdrawShares) */\n      pop\n      pop\n      pop\n      pop\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":5058:5059  0 */\n      0x00\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":5054:5059  i = 0 */\n      swap3\n      pop\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":5049:5387  for (i = 0; i <  stablecoins.length; i++){... */\n    tag_171:\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":5066:5084  stablecoins.length */\n      0x04\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":5061:5062  i */\n      dup4\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":5061:5084  i <  stablecoins.length */\n      lt\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":5049:5387  for (i = 0; i <  stablecoins.length; i++){... */\n      iszero\n      tag_172\n      jumpi\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":5104:5121  IERC20 stablecoin */\n      0x00\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":5131:5142  stablecoins */\n      dup6\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":5143:5144  i */\n      dup5\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":5131:5145  stablecoins[i] */\n      0x04\n      dup2\n      lt\n      tag_174\n      jumpi\n      invalid\n    tag_174:\n      0x20\n      mul\n      add\n      mload\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":5104:5146  IERC20 stablecoin = IERC20(stablecoins[i]) */\n      swap1\n      pop\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":5160:5175  uint256 balance */\n      0x00\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":5178:5188  stablecoin */\n      dup2\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":5178:5198  stablecoin.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":5207:5211  this */\n      address\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":5178:5213  stablecoin.balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_175\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_175:\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":5178:5213  stablecoin.balanceOf(address(this)) */\n      pop\n      gas\n      staticcall\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_176\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_176:\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":5178:5213  stablecoin.balanceOf(address(this)) */\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_177\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_177:\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":5178:5213  stablecoin.balanceOf(address(this)) */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":5160:5213  uint256 balance = stablecoin.balanceOf(address(this)) */\n      swap1\n      pop\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":5227:5241  uint256 amount */\n      0x00\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":5256:5264  _amounts */\n      dup9\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":5265:5266  i */\n      dup7\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":5256:5267  _amounts[i] */\n      0x04\n      dup2\n      lt\n      tag_178\n      jumpi\n      invalid\n    tag_178:\n      0x20\n      mul\n      add\n      mload\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":5245:5252  balance */\n      dup3\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":5245:5267  balance <= _amounts[i] */\n      gt\n      iszero\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":5244:5292  (balance <= _amounts[i]) ? balance : _amounts[i] */\n      tag_179\n      jumpi\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":5281:5289  _amounts */\n      dup9\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":5290:5291  i */\n      dup7\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":5281:5292  _amounts[i] */\n      0x04\n      dup2\n      lt\n      tag_180\n      jumpi\n      invalid\n    tag_180:\n      0x20\n      mul\n      add\n      mload\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":5244:5292  (balance <= _amounts[i]) ? balance : _amounts[i] */\n      jump(tag_181)\n    tag_179:\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":5271:5278  balance */\n      dup2\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":5244:5292  (balance <= _amounts[i]) ? balance : _amounts[i] */\n    tag_181:\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":5227:5292  uint256 amount = (balance <= _amounts[i]) ? balance : _amounts[i] */\n      swap1\n      pop\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":5331:5376  stablecoin.safeTransfer(_msgSender(), amount) */\n      tag_182\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":5355:5367  _msgSender() */\n      tag_183\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":5355:5365  _msgSender */\n      tag_85\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":5355:5367  _msgSender() */\n      jump\t// in\n    tag_183:\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":5369:5375  amount */\n      dup3\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":5331:5341  stablecoin */\n      dup6\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":5331:5354  stablecoin.safeTransfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_111\n      swap1\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":5331:5376  stablecoin.safeTransfer(_msgSender(), amount) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_182:\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":5049:5387  for (i = 0; i <  stablecoins.length; i++){... */\n      pop\n      pop\n      pop\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":5086:5089  i++ */\n      dup3\n      dup1\n      0x01\n      add\n      swap4\n      pop\n      pop\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":5049:5387  for (i = 0; i <  stablecoins.length; i++){... */\n      jump(tag_171)\n    tag_172:\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":3941:5393  function multiStepWithdraw(uint256[4] memory _amounts) public {... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":5482:5621  function curveLPTokenStaked() public view returns(uint256) {... */\n    tag_42:\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":5532:5539  uint256 */\n      0x00\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":5573:5588  curveFi_LPGauge */\n      0x37\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":5558:5599  ICurveFi_Gauge(curveFi_LPGauge).balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":5608:5612  this */\n      address\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":5558:5614  ICurveFi_Gauge(curveFi_LPGauge).balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_185\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_185:\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":5558:5614  ICurveFi_Gauge(curveFi_LPGauge).balanceOf(address(this)) */\n      pop\n      gas\n      staticcall\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_186\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_186:\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":5558:5614  ICurveFi_Gauge(curveFi_LPGauge).balanceOf(address(this)) */\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_187\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_187:\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":5558:5614  ICurveFi_Gauge(curveFi_LPGauge).balanceOf(address(this)) */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":5551:5614  return ICurveFi_Gauge(curveFi_LPGauge).balanceOf(address(this)) */\n      swap1\n      pop\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":5482:5621  function curveLPTokenStaked() public view returns(uint256) {... */\n      swap1\n      jump\t// out\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":8027:8419  function normalizedBalance() public view returns(uint256) {... */\n    tag_44:\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":8076:8083  uint256 */\n      0x00\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":8095:8124  address[4] memory stablecoins */\n      tag_189\n      tag_76\n      jump\t// in\n    tag_189:\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":8145:8160  curveFi_Deposit */\n      0x34\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":8127:8178  ICurveFi_DepositY(curveFi_Deposit).underlying_coins */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xfb6d3a89\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":8127:8180  ICurveFi_DepositY(curveFi_Deposit).underlying_coins() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x80\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_190\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_190:\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":8127:8180  ICurveFi_DepositY(curveFi_Deposit).underlying_coins() */\n      pop\n      gas\n      staticcall\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_191\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_191:\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":8127:8180  ICurveFi_DepositY(curveFi_Deposit).underlying_coins() */\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n        /* \"--CODEGEN--\":101:105   */\n      0x1f\n        /* \"--CODEGEN--\":97:106   */\n      not\n        /* \"--CODEGEN--\":90:94   */\n      0x1f\n        /* \"--CODEGEN--\":84:88   */\n      dup3\n        /* \"--CODEGEN--\":80:95   */\n      add\n        /* \"--CODEGEN--\":76:107   */\n      and\n        /* \"--CODEGEN--\":69:74   */\n      dup3\n        /* \"--CODEGEN--\":65:108   */\n      add\n        /* \"--CODEGEN--\":126:132   */\n      dup1\n        /* \"--CODEGEN--\":120:124   */\n      0x40\n        /* \"--CODEGEN--\":113:133   */\n      mstore\n        /* \"--CODEGEN--\":0:138   */\n      pop\n        /* \"--CODEGEN--\":13:16   */\n      0x80\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:17   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_192\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_192:\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":8127:8180  ICurveFi_DepositY(curveFi_Deposit).underlying_coins() */\n      dup2\n      add\n      swap1\n      dup1\n      swap2\n      swap1\n      pop\n      pop\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":8095:8180  address[4] memory stablecoins = ICurveFi_DepositY(curveFi_Deposit).underlying_coins() */\n      swap1\n      pop\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":8190:8216  uint256[4] memory balances */\n      tag_193\n      tag_113\n      jump\t// in\n    tag_193:\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":8219:8233  balanceOfAll() */\n      tag_194\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":8219:8231  balanceOfAll */\n      tag_34\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":8219:8233  balanceOfAll() */\n      jump\t// in\n    tag_194:\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":8190:8233  uint256[4] memory balances = balanceOfAll() */\n      swap1\n      pop\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":8244:8256  uint256 summ */\n      0x00\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":8271:8280  uint256 i */\n      dup1\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":8281:8282  0 */\n      0x00\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":8271:8282  uint256 i=0 */\n      swap1\n      pop\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":8266:8392  for (uint256 i=0; i < stablecoins.length; i++){... */\n    tag_195:\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":8288:8306  stablecoins.length */\n      0x04\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":8284:8285  i */\n      dup2\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":8284:8306  i < stablecoins.length */\n      lt\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":8266:8392  for (uint256 i=0; i < stablecoins.length; i++){... */\n      iszero\n      tag_196\n      jumpi\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":8333:8381  summ.add(normalize(stablecoins[i], balances[i])) */\n      tag_198\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":8342:8380  normalize(stablecoins[i], balances[i]) */\n      tag_199\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":8352:8363  stablecoins */\n      dup6\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":8364:8365  i */\n      dup4\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":8352:8366  stablecoins[i] */\n      0x04\n      dup2\n      lt\n      tag_200\n      jumpi\n      invalid\n    tag_200:\n      0x20\n      mul\n      add\n      mload\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":8368:8376  balances */\n      dup6\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":8377:8378  i */\n      dup5\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":8368:8379  balances[i] */\n      0x04\n      dup2\n      lt\n      tag_201\n      jumpi\n      invalid\n    tag_201:\n      0x20\n      mul\n      add\n      mload\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":8342:8351  normalize */\n      tag_155\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":8342:8380  normalize(stablecoins[i], balances[i]) */\n      jump\t// in\n    tag_199:\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":8333:8337  summ */\n      dup4\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":8333:8341  summ.add */\n      tag_156\n      swap1\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":8333:8381  summ.add(normalize(stablecoins[i], balances[i])) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_198:\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":8326:8381  summ = summ.add(normalize(stablecoins[i], balances[i])) */\n      swap2\n      pop\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":8308:8311  i++ */\n      dup1\n      dup1\n      0x01\n      add\n      swap2\n      pop\n      pop\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":8266:8392  for (uint256 i=0; i < stablecoins.length; i++){... */\n      jump(tag_195)\n    tag_196:\n      pop\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":8408:8412  summ */\n      dup1\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":8401:8412  return summ */\n      swap4\n      pop\n      pop\n      pop\n      pop\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":8027:8419  function normalizedBalance() public view returns(uint256) {... */\n      swap1\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/ownership/Ownable.sol\":1684:1821  function renounceOwnership() public onlyOwner {... */\n    tag_46:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/ownership/Ownable.sol\":1103:1112  isOwner() */\n      tag_203\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/ownership/Ownable.sol\":1103:1110  isOwner */\n      tag_57\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/ownership/Ownable.sol\":1103:1112  isOwner() */\n      jump\t// in\n    tag_203:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/ownership/Ownable.sol\":1095:1149  require(isOwner(), \"Ownable: caller is not the owner\") */\n      tag_204\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x20\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_204:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/ownership/Ownable.sol\":1782:1783  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/ownership/Ownable.sol\":1745:1785  OwnershipTransferred(_owner, address(0)) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/ownership/Ownable.sol\":1766:1772  _owner */\n      0x33\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/ownership/Ownable.sol\":1745:1785  OwnershipTransferred(_owner, address(0)) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/ownership/Ownable.sol\":1812:1813  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/ownership/Ownable.sol\":1795:1801  _owner */\n      0x33\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/ownership/Ownable.sol\":1795:1814  _owner = address(0) */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/ownership/Ownable.sol\":1684:1821  function renounceOwnership() public onlyOwner {... */\n      jump\t// out\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":1737:2414  function setup(address _depositContract, address _gaugeContract, address _minterContract) external onlyOwner {... */\n    tag_49:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/ownership/Ownable.sol\":1103:1112  isOwner() */\n      tag_207\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/ownership/Ownable.sol\":1103:1110  isOwner */\n      tag_57\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/ownership/Ownable.sol\":1103:1112  isOwner() */\n      jump\t// in\n    tag_207:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/ownership/Ownable.sol\":1095:1149  require(isOwner(), \"Ownable: caller is not the owner\") */\n      tag_208\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x20\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_208:\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":1892:1893  0 */\n      0x00\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":1864:1894  _depositContract != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":1864:1880  _depositContract */\n      dup4\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":1864:1894  _depositContract != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":1856:1933  require(_depositContract != address(0), \"Incorrect deposit contract address\") */\n      tag_210\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x22\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_02c2cde26d907edef0275dd60c1d3730b459d629aea5e0144e75833e4ac66b41\n      0x22\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_210:\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":1962:1978  _depositContract */\n      dup3\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":1944:1959  curveFi_Deposit */\n      0x34\n      0x00\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":1944:1978  curveFi_Deposit = _depositContract */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":2021:2036  curveFi_Deposit */\n      0x34\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":2003:2043  ICurveFi_DepositY(curveFi_Deposit).curve */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x7165485d\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":2003:2045  ICurveFi_DepositY(curveFi_Deposit).curve() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_211\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_211:\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":2003:2045  ICurveFi_DepositY(curveFi_Deposit).curve() */\n      pop\n      gas\n      staticcall\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_212\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_212:\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":2003:2045  ICurveFi_DepositY(curveFi_Deposit).curve() */\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_213\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_213:\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":2003:2045  ICurveFi_DepositY(curveFi_Deposit).curve() */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":1988:2000  curveFi_Swap */\n      0x35\n      0x00\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":1988:2045  curveFi_Swap = ICurveFi_DepositY(curveFi_Deposit).curve() */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":2073:2087  _gaugeContract */\n      dup2\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":2055:2070  curveFi_LPGauge */\n      0x37\n      0x00\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":2055:2087  curveFi_LPGauge = _gaugeContract */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":2133:2148  curveFi_Deposit */\n      0x34\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":2115:2155  ICurveFi_DepositY(curveFi_Deposit).token */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xfc0c546a\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":2115:2157  ICurveFi_DepositY(curveFi_Deposit).token() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_214\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_214:\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":2115:2157  ICurveFi_DepositY(curveFi_Deposit).token() */\n      pop\n      gas\n      staticcall\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_215\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_215:\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":2115:2157  ICurveFi_DepositY(curveFi_Deposit).token() */\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_216\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_216:\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":2115:2157  ICurveFi_DepositY(curveFi_Deposit).token() */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":2097:2112  curveFi_LPToken */\n      0x36\n      0x00\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":2097:2157  curveFi_LPToken = ICurveFi_DepositY(curveFi_Deposit).token() */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":2230:2245  curveFi_LPToken */\n      0x36\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":2176:2246  ICurveFi_Gauge(curveFi_LPGauge).lp_token() == address(curveFi_LPToken) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":2191:2206  curveFi_LPGauge */\n      0x37\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":2176:2216  ICurveFi_Gauge(curveFi_LPGauge).lp_token */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x82c63066\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":2176:2218  ICurveFi_Gauge(curveFi_LPGauge).lp_token() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_217\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_217:\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":2176:2218  ICurveFi_Gauge(curveFi_LPGauge).lp_token() */\n      pop\n      gas\n      staticcall\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_218\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_218:\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":2176:2218  ICurveFi_Gauge(curveFi_LPGauge).lp_token() */\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_219\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_219:\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":2176:2218  ICurveFi_Gauge(curveFi_LPGauge).lp_token() */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":2176:2246  ICurveFi_Gauge(curveFi_LPGauge).lp_token() == address(curveFi_LPToken) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":2168:2281  require(ICurveFi_Gauge(curveFi_LPGauge).lp_token() == address(curveFi_LPToken), \"CurveFi LP tokens do not match\") */\n      tag_220\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x1e\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x43757276654669204c5020746f6b656e7320646f206e6f74206d617463680000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_220:\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":2320:2335  _minterContract */\n      dup1\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":2300:2317  curveFi_CRVMinter */\n      0x38\n      0x00\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":2300:2335  curveFi_CRVMinter = _minterContract */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":2379:2394  curveFi_LPGauge */\n      0x37\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":2364:2405  ICurveFi_Gauge(curveFi_LPGauge).crv_token */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x76d8b117\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":2364:2407  ICurveFi_Gauge(curveFi_LPGauge).crv_token() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_221\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_221:\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":2364:2407  ICurveFi_Gauge(curveFi_LPGauge).crv_token() */\n      pop\n      gas\n      staticcall\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_222\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_222:\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":2364:2407  ICurveFi_Gauge(curveFi_LPGauge).crv_token() */\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_223\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_223:\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":2364:2407  ICurveFi_Gauge(curveFi_LPGauge).crv_token() */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":2345:2361  curveFi_CRVToken */\n      0x39\n      0x00\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":2345:2407  curveFi_CRVToken = ICurveFi_Gauge(curveFi_LPGauge).crv_token() */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":1737:2414  function setup(address _depositContract, address _gaugeContract, address _minterContract) external onlyOwner {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":1313:1345  address public curveFi_CRVMinter */\n    tag_51:\n      0x38\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":1351:1382  address public curveFi_CRVToken */\n    tag_53:\n      0x39\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/ownership/Ownable.sol\":899:976  function owner() public view returns (address) {... */\n    tag_55:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/ownership/Ownable.sol\":937:944  address */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/ownership/Ownable.sol\":963:969  _owner */\n      0x33\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/ownership/Ownable.sol\":956:969  return _owner */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/ownership/Ownable.sol\":899:976  function owner() public view returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/ownership/Ownable.sol\":1250:1342  function isOwner() public view returns (bool) {... */\n    tag_57:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/ownership/Ownable.sol\":1290:1294  bool */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/ownership/Ownable.sol\":1329:1335  _owner */\n      0x33\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/ownership/Ownable.sol\":1313:1335  _msgSender() == _owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/ownership/Ownable.sol\":1313:1325  _msgSender() */\n      tag_226\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/ownership/Ownable.sol\":1313:1323  _msgSender */\n      tag_85\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/ownership/Ownable.sol\":1313:1325  _msgSender() */\n      jump\t// in\n    tag_226:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/ownership/Ownable.sol\":1313:1335  _msgSender() == _owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/ownership/Ownable.sol\":1306:1335  return _msgSender() == _owner */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/ownership/Ownable.sol\":1250:1342  function isOwner() public view returns (bool) {... */\n      swap1\n      jump\t// out\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":5965:6167  function curveLPTokenBalance() public view returns(uint256) {... */\n    tag_59:\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":6016:6023  uint256 */\n      0x00\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":6035:6049  uint256 staked */\n      dup1\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":6052:6072  curveLPTokenStaked() */\n      tag_228\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":6052:6070  curveLPTokenStaked */\n      tag_42\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":6052:6072  curveLPTokenStaked() */\n      jump\t// in\n    tag_228:\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":6035:6072  uint256 staked = curveLPTokenStaked() */\n      swap1\n      pop\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":6082:6098  uint256 unstaked */\n      0x00\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":6101:6123  curveLPTokenUnstaked() */\n      tag_229\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":6101:6121  curveLPTokenUnstaked */\n      tag_65\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":6101:6123  curveLPTokenUnstaked() */\n      jump\t// in\n    tag_229:\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":6082:6123  uint256 unstaked = curveLPTokenUnstaked() */\n      swap1\n      pop\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":6140:6160  unstaked.add(staked) */\n      tag_230\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":6153:6159  staked */\n      dup3\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":6140:6148  unstaked */\n      dup3\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":6140:6152  unstaked.add */\n      tag_156\n      swap1\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":6140:6160  unstaked.add(staked) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_230:\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":6133:6160  return unstaked.add(staked) */\n      swap3\n      pop\n      pop\n      pop\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":5965:6167  function curveLPTokenBalance() public view returns(uint256) {... */\n      swap1\n      jump\t// out\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":1241:1271  address public curveFi_LPToken */\n    tag_61:\n      0x36\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":1172:1202  address public curveFi_Deposit */\n    tag_63:\n      0x34\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":5732:5865  function curveLPTokenUnstaked() public view returns(uint256) {... */\n    tag_65:\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":5784:5791  uint256 */\n      0x00\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":5817:5832  curveFi_LPToken */\n      0x36\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":5810:5843  IERC20(curveFi_LPToken).balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":5852:5856  this */\n      address\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":5810:5858  IERC20(curveFi_LPToken).balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_232\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_232:\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":5810:5858  IERC20(curveFi_LPToken).balanceOf(address(this)) */\n      pop\n      gas\n      staticcall\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_233\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_233:\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":5810:5858  IERC20(curveFi_LPToken).balanceOf(address(this)) */\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_234\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_234:\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":5810:5858  IERC20(curveFi_LPToken).balanceOf(address(this)) */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":5803:5858  return IERC20(curveFi_LPToken).balanceOf(address(this)) */\n      swap1\n      pop\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":5732:5865  function curveLPTokenUnstaked() public view returns(uint256) {... */\n      swap1\n      jump\t// out\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":1277:1307  address public curveFi_LPGauge */\n    tag_67:\n      0x37\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/ownership/Ownable.sol\":1970:2077  function transferOwnership(address newOwner) public onlyOwner {... */\n    tag_70:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/ownership/Ownable.sol\":1103:1112  isOwner() */\n      tag_236\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/ownership/Ownable.sol\":1103:1110  isOwner */\n      tag_57\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/ownership/Ownable.sol\":1103:1112  isOwner() */\n      jump\t// in\n    tag_236:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/ownership/Ownable.sol\":1095:1149  require(isOwner(), \"Ownable: caller is not the owner\") */\n      tag_237\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x20\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_237:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/ownership/Ownable.sol\":2042:2070  _transferOwnership(newOwner) */\n      tag_239\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/ownership/Ownable.sol\":2061:2069  newOwner */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/ownership/Ownable.sol\":2042:2060  _transferOwnership */\n      tag_240\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/ownership/Ownable.sol\":2042:2070  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_239:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/ownership/Ownable.sol\":1970:2077  function transferOwnership(address newOwner) public onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":1415:1489  function initialize(uint256 _x) public initializer {... */\n    tag_73:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-upgrades/blob/master/packages/core/contracts/Initializable.sol\":1253:1265  initializing */\n      0x00\n      0x01\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-upgrades/blob/master/packages/core/contracts/Initializable.sol\":1253:1284  initializing || isConstructor() */\n      dup1\n      tag_242\n      jumpi\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-upgrades/blob/master/packages/core/contracts/Initializable.sol\":1269:1284  isConstructor() */\n      tag_243\n        /* \"https://github.com/OpenZeppelin/openzeppelin-upgrades/blob/master/packages/core/contracts/Initializable.sol\":1269:1282  isConstructor */\n      tag_244\n        /* \"https://github.com/OpenZeppelin/openzeppelin-upgrades/blob/master/packages/core/contracts/Initializable.sol\":1269:1284  isConstructor() */\n      jump\t// in\n    tag_243:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-upgrades/blob/master/packages/core/contracts/Initializable.sol\":1253:1284  initializing || isConstructor() */\n    tag_242:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-upgrades/blob/master/packages/core/contracts/Initializable.sol\":1253:1300  initializing || isConstructor() || !initialized */\n      dup1\n      tag_245\n      jumpi\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-upgrades/blob/master/packages/core/contracts/Initializable.sol\":1289:1300  initialized */\n      0x00\n      dup1\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-upgrades/blob/master/packages/core/contracts/Initializable.sol\":1288:1300  !initialized */\n      iszero\n        /* \"https://github.com/OpenZeppelin/openzeppelin-upgrades/blob/master/packages/core/contracts/Initializable.sol\":1253:1300  initializing || isConstructor() || !initialized */\n    tag_245:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-upgrades/blob/master/packages/core/contracts/Initializable.sol\":1245:1351  require(initializing || isConstructor() || !initialized, \"Contract instance has already been initialized\") */\n      tag_246\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x2e\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_9fbba6c4dcac9134893b633b9564f36435b3f927c1d5fa152c5c14b20cecb1a4\n      0x2e\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_246:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-upgrades/blob/master/packages/core/contracts/Initializable.sol\":1358:1377  bool isTopLevelCall */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-upgrades/blob/master/packages/core/contracts/Initializable.sol\":1381:1393  initializing */\n      dup1\n      0x01\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-upgrades/blob/master/packages/core/contracts/Initializable.sol\":1380:1393  !initializing */\n      iszero\n        /* \"https://github.com/OpenZeppelin/openzeppelin-upgrades/blob/master/packages/core/contracts/Initializable.sol\":1358:1393  bool isTopLevelCall = !initializing */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-upgrades/blob/master/packages/core/contracts/Initializable.sol\":1403:1417  isTopLevelCall */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-upgrades/blob/master/packages/core/contracts/Initializable.sol\":1399:1479  if (isTopLevelCall) {... */\n      iszero\n      tag_247\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-upgrades/blob/master/packages/core/contracts/Initializable.sol\":1442:1446  true */\n      0x01\n        /* \"https://github.com/OpenZeppelin/openzeppelin-upgrades/blob/master/packages/core/contracts/Initializable.sol\":1427:1439  initializing */\n      0x00\n      0x01\n        /* \"https://github.com/OpenZeppelin/openzeppelin-upgrades/blob/master/packages/core/contracts/Initializable.sol\":1427:1446  initializing = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-upgrades/blob/master/packages/core/contracts/Initializable.sol\":1468:1472  true */\n      0x01\n        /* \"https://github.com/OpenZeppelin/openzeppelin-upgrades/blob/master/packages/core/contracts/Initializable.sol\":1454:1465  initialized */\n      0x00\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-upgrades/blob/master/packages/core/contracts/Initializable.sol\":1454:1472  initialized = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-upgrades/blob/master/packages/core/contracts/Initializable.sol\":1399:1479  if (isTopLevelCall) {... */\n    tag_247:\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":1480:1482  _x */\n      dup2\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":1476:1477  x */\n      0x3a\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":1476:1482  x = _x */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-upgrades/blob/master/packages/core/contracts/Initializable.sol\":1497:1511  isTopLevelCall */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-upgrades/blob/master/packages/core/contracts/Initializable.sol\":1493:1548  if (isTopLevelCall) {... */\n      iszero\n      tag_249\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-upgrades/blob/master/packages/core/contracts/Initializable.sol\":1536:1541  false */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-upgrades/blob/master/packages/core/contracts/Initializable.sol\":1521:1533  initializing */\n      dup1\n      0x01\n        /* \"https://github.com/OpenZeppelin/openzeppelin-upgrades/blob/master/packages/core/contracts/Initializable.sol\":1521:1541  initializing = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-upgrades/blob/master/packages/core/contracts/Initializable.sol\":1493:1548  if (isTopLevelCall) {... */\n    tag_249:\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":1415:1489  function initialize(uint256 _x) public initializer {... */\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/GSN/Context.sol\":788:884  function _msgSender() internal view returns (address payable) {... */\n    tag_85:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/GSN/Context.sol\":833:848  address payable */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/GSN/Context.sol\":867:877  msg.sender */\n      caller\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/GSN/Context.sol\":860:877  return msg.sender */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/GSN/Context.sol\":788:884  function _msgSender() internal view returns (address payable) {... */\n      swap1\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/SafeERC20.sol\":842:1044  function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {... */\n    tag_88:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/SafeERC20.sol\":942:1037  callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value)) */\n      tag_252\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/SafeERC20.sol\":961:966  token */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/SafeERC20.sol\":991:996  token */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/SafeERC20.sol\":991:1009  token.transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/SafeERC20.sol\":991:1018  token.transferFrom.selector */\n      swap1\n      pop\n      0xe0\n      shl\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/SafeERC20.sol\":1020:1024  from */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/SafeERC20.sol\":1026:1028  to */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/SafeERC20.sol\":1030:1035  value */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/SafeERC20.sol\":968:1036  abi.encodeWithSelector(token.transferFrom.selector, from, to, value) */\n      add(0x24, mload(0x40))\n      dup1\n      dup5\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap4\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n        /* \"--CODEGEN--\":49:53   */\n      0x20\n        /* \"--CODEGEN--\":39:46   */\n      dup2\n        /* \"--CODEGEN--\":30:37   */\n      dup4\n        /* \"--CODEGEN--\":26:47   */\n      sub\n        /* \"--CODEGEN--\":22:54   */\n      sub\n        /* \"--CODEGEN--\":13:20   */\n      dup2\n        /* \"--CODEGEN--\":6:55   */\n      mstore\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/SafeERC20.sol\":968:1036  abi.encodeWithSelector(token.transferFrom.selector, from, to, value) */\n      swap1\n      0x40\n      mstore\n      swap1\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"--CODEGEN--\":38:42   */\n      0x20\n        /* \"--CODEGEN--\":29:36   */\n      dup3\n        /* \"--CODEGEN--\":25:43   */\n      add\n        /* \"--CODEGEN--\":67:77   */\n      dup1\n        /* \"--CODEGEN--\":61:78   */\n      mload\n        /* \"--CODEGEN--\":96:154   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"--CODEGEN--\":199:207   */\n      dup4\n        /* \"--CODEGEN--\":192:196   */\n      dup2\n        /* \"--CODEGEN--\":186:190   */\n      dup4\n        /* \"--CODEGEN--\":182:197   */\n      and\n        /* \"--CODEGEN--\":179:208   */\n      or\n        /* \"--CODEGEN--\":167:177   */\n      dup4\n        /* \"--CODEGEN--\":160:209   */\n      mstore\n        /* \"--CODEGEN--\":0:215   */\n      pop\n      pop\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/SafeERC20.sol\":968:1036  abi.encodeWithSelector(token.transferFrom.selector, from, to, value) */\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/SafeERC20.sol\":942:960  callOptionalReturn */\n      tag_253\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/SafeERC20.sol\":942:1037  callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value)) */\n      jump\t// in\n    tag_252:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/SafeERC20.sol\":842:1044  function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/SafeERC20.sol\":1050:1662  function safeApprove(IERC20 token, address spender, uint256 value) internal {... */\n    tag_92:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/SafeERC20.sol\":1424:1425  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/SafeERC20.sol\":1415:1420  value */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/SafeERC20.sol\":1415:1425  value == 0 */\n      eq\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/SafeERC20.sol\":1414:1476  (value == 0) || (token.allowance(address(this), spender) == 0) */\n      dup1\n      tag_255\n      jumpi\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/SafeERC20.sol\":1474:1475  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/SafeERC20.sol\":1431:1436  token */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/SafeERC20.sol\":1431:1446  token.allowance */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xdd62ed3e\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/SafeERC20.sol\":1455:1459  this */\n      address\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/SafeERC20.sol\":1462:1469  spender */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/SafeERC20.sol\":1431:1470  token.allowance(address(this), spender) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap3\n      pop\n      pop\n      pop\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_256\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_256:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/SafeERC20.sol\":1431:1470  token.allowance(address(this), spender) */\n      pop\n      gas\n      staticcall\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_257\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_257:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/SafeERC20.sol\":1431:1470  token.allowance(address(this), spender) */\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_258\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_258:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/SafeERC20.sol\":1431:1470  token.allowance(address(this), spender) */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/SafeERC20.sol\":1431:1475  token.allowance(address(this), spender) == 0 */\n      eq\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/SafeERC20.sol\":1414:1476  (value == 0) || (token.allowance(address(this), spender) == 0) */\n    tag_255:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/SafeERC20.sol\":1406:1556  require((value == 0) || (token.allowance(address(this), spender) == 0),... */\n      tag_259\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x36\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25\n      0x36\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_259:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/SafeERC20.sol\":1566:1655  callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value)) */\n      tag_260\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/SafeERC20.sol\":1585:1590  token */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/SafeERC20.sol\":1615:1620  token */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/SafeERC20.sol\":1615:1628  token.approve */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x095ea7b3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/SafeERC20.sol\":1615:1637  token.approve.selector */\n      swap1\n      pop\n      0xe0\n      shl\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/SafeERC20.sol\":1639:1646  spender */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/SafeERC20.sol\":1648:1653  value */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/SafeERC20.sol\":1592:1654  abi.encodeWithSelector(token.approve.selector, spender, value) */\n      add(0x24, mload(0x40))\n      dup1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n        /* \"--CODEGEN--\":49:53   */\n      0x20\n        /* \"--CODEGEN--\":39:46   */\n      dup2\n        /* \"--CODEGEN--\":30:37   */\n      dup4\n        /* \"--CODEGEN--\":26:47   */\n      sub\n        /* \"--CODEGEN--\":22:54   */\n      sub\n        /* \"--CODEGEN--\":13:20   */\n      dup2\n        /* \"--CODEGEN--\":6:55   */\n      mstore\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/SafeERC20.sol\":1592:1654  abi.encodeWithSelector(token.approve.selector, spender, value) */\n      swap1\n      0x40\n      mstore\n      swap1\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"--CODEGEN--\":38:42   */\n      0x20\n        /* \"--CODEGEN--\":29:36   */\n      dup3\n        /* \"--CODEGEN--\":25:43   */\n      add\n        /* \"--CODEGEN--\":67:77   */\n      dup1\n        /* \"--CODEGEN--\":61:78   */\n      mload\n        /* \"--CODEGEN--\":96:154   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"--CODEGEN--\":199:207   */\n      dup4\n        /* \"--CODEGEN--\":192:196   */\n      dup2\n        /* \"--CODEGEN--\":186:190   */\n      dup4\n        /* \"--CODEGEN--\":182:197   */\n      and\n        /* \"--CODEGEN--\":179:208   */\n      or\n        /* \"--CODEGEN--\":167:177   */\n      dup4\n        /* \"--CODEGEN--\":160:209   */\n      mstore\n        /* \"--CODEGEN--\":0:215   */\n      pop\n      pop\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/SafeERC20.sol\":1592:1654  abi.encodeWithSelector(token.approve.selector, spender, value) */\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/SafeERC20.sol\":1566:1584  callOptionalReturn */\n      tag_253\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/SafeERC20.sol\":1566:1655  callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value)) */\n      jump\t// in\n    tag_260:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/SafeERC20.sol\":1050:1662  function safeApprove(IERC20 token, address spender, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":6221:6328  function crvTokenClaim() internal {... */\n    tag_105:\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":6281:6298  curveFi_CRVMinter */\n      0x38\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":6265:6304  ICurveFi_Minter(curveFi_CRVMinter).mint */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x6a627842\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":6305:6320  curveFi_LPGauge */\n      0x37\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":6265:6321  ICurveFi_Minter(curveFi_CRVMinter).mint(curveFi_LPGauge) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_262\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_262:\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":6265:6321  ICurveFi_Minter(curveFi_CRVMinter).mint(curveFi_LPGauge) */\n      pop\n      gas\n      call\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_263\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_263:\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":6265:6321  ICurveFi_Minter(curveFi_CRVMinter).mint(curveFi_LPGauge) */\n      pop\n      pop\n      pop\n      pop\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":6221:6328  function crvTokenClaim() internal {... */\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/SafeERC20.sol\":662:836  function safeTransfer(IERC20 token, address to, uint256 value) internal {... */\n    tag_111:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/SafeERC20.sol\":744:829  callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value)) */\n      tag_265\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/SafeERC20.sol\":763:768  token */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/SafeERC20.sol\":793:798  token */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/SafeERC20.sol\":793:807  token.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/SafeERC20.sol\":793:816  token.transfer.selector */\n      swap1\n      pop\n      0xe0\n      shl\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/SafeERC20.sol\":818:820  to */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/SafeERC20.sol\":822:827  value */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/SafeERC20.sol\":770:828  abi.encodeWithSelector(token.transfer.selector, to, value) */\n      add(0x24, mload(0x40))\n      dup1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n        /* \"--CODEGEN--\":49:53   */\n      0x20\n        /* \"--CODEGEN--\":39:46   */\n      dup2\n        /* \"--CODEGEN--\":30:37   */\n      dup4\n        /* \"--CODEGEN--\":26:47   */\n      sub\n        /* \"--CODEGEN--\":22:54   */\n      sub\n        /* \"--CODEGEN--\":13:20   */\n      dup2\n        /* \"--CODEGEN--\":6:55   */\n      mstore\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/SafeERC20.sol\":770:828  abi.encodeWithSelector(token.transfer.selector, to, value) */\n      swap1\n      0x40\n      mstore\n      swap1\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"--CODEGEN--\":38:42   */\n      0x20\n        /* \"--CODEGEN--\":29:36   */\n      dup3\n        /* \"--CODEGEN--\":25:43   */\n      add\n        /* \"--CODEGEN--\":67:77   */\n      dup1\n        /* \"--CODEGEN--\":61:78   */\n      mload\n        /* \"--CODEGEN--\":96:154   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"--CODEGEN--\":199:207   */\n      dup4\n        /* \"--CODEGEN--\":192:196   */\n      dup2\n        /* \"--CODEGEN--\":186:190   */\n      dup4\n        /* \"--CODEGEN--\":182:197   */\n      and\n        /* \"--CODEGEN--\":179:208   */\n      or\n        /* \"--CODEGEN--\":167:177   */\n      dup4\n        /* \"--CODEGEN--\":160:209   */\n      mstore\n        /* \"--CODEGEN--\":0:215   */\n      pop\n      pop\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/SafeERC20.sol\":770:828  abi.encodeWithSelector(token.transfer.selector, to, value) */\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/SafeERC20.sol\":744:762  callOptionalReturn */\n      tag_253\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/SafeERC20.sol\":744:829  callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value)) */\n      jump\t// in\n    tag_265:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/SafeERC20.sol\":662:836  function safeTransfer(IERC20 token, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/math/SafeMath.sol\":2159:2618  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_135:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/math/SafeMath.sol\":2217:2224  uint256 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/math/SafeMath.sol\":2463:2464  0 */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/math/SafeMath.sol\":2458:2459  a */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/math/SafeMath.sol\":2458:2464  a == 0 */\n      eq\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/math/SafeMath.sol\":2454:2499  if (a == 0) {... */\n      iszero\n      tag_267\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/math/SafeMath.sol\":2487:2488  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/math/SafeMath.sol\":2480:2488  return 0 */\n      swap1\n      pop\n      jump(tag_266)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/math/SafeMath.sol\":2454:2499  if (a == 0) {... */\n    tag_267:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/math/SafeMath.sol\":2509:2518  uint256 c */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/math/SafeMath.sol\":2525:2526  b */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/math/SafeMath.sol\":2521:2522  a */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/math/SafeMath.sol\":2521:2526  a * b */\n      mul\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/math/SafeMath.sol\":2509:2526  uint256 c = a * b */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/math/SafeMath.sol\":2553:2554  b */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/math/SafeMath.sol\":2548:2549  a */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/math/SafeMath.sol\":2544:2545  c */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/math/SafeMath.sol\":2544:2549  c / a */\n      dup2\n      tag_268\n      jumpi\n      invalid\n    tag_268:\n      div\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/math/SafeMath.sol\":2544:2554  c / a == b */\n      eq\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/math/SafeMath.sol\":2536:2592  require(c / a == b, \"SafeMath: multiplication overflow\") */\n      tag_269\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x21\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3\n      0x21\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_269:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/math/SafeMath.sol\":2610:2611  c */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/math/SafeMath.sol\":2603:2611  return c */\n      swap2\n      pop\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/math/SafeMath.sol\":2159:2618  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_266:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/math/SafeMath.sol\":3073:3203  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_136:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/math/SafeMath.sol\":3131:3138  uint256 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/math/SafeMath.sol\":3157:3196  div(a, b, \"SafeMath: division by zero\") */\n      tag_271\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/math/SafeMath.sol\":3161:3162  a */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/math/SafeMath.sol\":3164:3165  b */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/math/SafeMath.sol\":3157:3196  div(a, b, \"SafeMath: division by zero\") */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x1a\n      dup2\n      mstore\n      0x20\n      add\n      0x536166654d6174683a206469766973696f6e206279207a65726f000000000000\n      dup2\n      mstore\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/math/SafeMath.sol\":3157:3160  div */\n      tag_272\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/math/SafeMath.sol\":3157:3196  div(a, b, \"SafeMath: division by zero\") */\n      jump\t// in\n    tag_271:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/math/SafeMath.sol\":3150:3196  return div(a, b, \"SafeMath: division by zero\") */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/math/SafeMath.sol\":3073:3203  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":8500:8903  function normalize(address coin, uint256 amount) internal view returns(uint256) {... */\n    tag_155:\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":8571:8578  uint256 */\n      0x00\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":8590:8604  uint8 decimals */\n      dup1\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":8621:8625  coin */\n      dup4\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":8607:8635  ERC20Detailed(coin).decimals */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x313ce567\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":8607:8637  ERC20Detailed(coin).decimals() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_274\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_274:\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":8607:8637  ERC20Detailed(coin).decimals() */\n      pop\n      gas\n      staticcall\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_275\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_275:\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":8607:8637  ERC20Detailed(coin).decimals() */\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_276\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_276:\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":8607:8637  ERC20Detailed(coin).decimals() */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":8590:8637  uint8 decimals = ERC20Detailed(coin).decimals() */\n      swap1\n      pop\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":8663:8665  18 */\n      0x12\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":8651:8659  decimals */\n      dup2\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":8651:8665  decimals == 18 */\n      0xff\n      and\n      eq\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":8647:8897  if (decimals == 18) {... */\n      iszero\n      tag_277\n      jumpi\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":8688:8694  amount */\n      dup3\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":8681:8694  return amount */\n      swap2\n      pop\n      pop\n      jump(tag_273)\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":8647:8897  if (decimals == 18) {... */\n    tag_277:\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":8726:8728  18 */\n      0x12\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":8715:8723  decimals */\n      dup2\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":8715:8728  decimals > 18 */\n      0xff\n      and\n      gt\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":8711:8897  if (decimals > 18) {... */\n      iszero\n      tag_279\n      jumpi\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":8751:8789  amount.div(uint256(10)**(decimals-18)) */\n      tag_280\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":8785:8787  18 */\n      0x12\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":8776:8784  decimals */\n      dup3\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":8776:8787  decimals-18 */\n      sub\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":8762:8788  uint256(10)**(decimals-18) */\n      0xff\n      and\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":8770:8772  10 */\n      0x0a\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":8762:8788  uint256(10)**(decimals-18) */\n      exp\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":8751:8757  amount */\n      dup5\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":8751:8761  amount.div */\n      tag_136\n      swap1\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":8751:8789  amount.div(uint256(10)**(decimals-18)) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_280:\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":8744:8789  return amount.div(uint256(10)**(decimals-18)) */\n      swap2\n      pop\n      pop\n      jump(tag_273)\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":8711:8897  if (decimals > 18) {... */\n    tag_279:\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":8821:8823  18 */\n      0x12\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":8810:8818  decimals */\n      dup2\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":8810:8823  decimals < 18 */\n      0xff\n      and\n      lt\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":8806:8897  if (decimals < 18) {... */\n      iszero\n      tag_282\n      jumpi\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":8846:8886  amount.mul(uint256(10)**(18 - decimals)) */\n      tag_283\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":8876:8884  decimals */\n      dup2\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":8871:8873  18 */\n      0x12\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":8871:8884  18 - decimals */\n      sub\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":8857:8885  uint256(10)**(18 - decimals) */\n      0xff\n      and\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":8865:8867  10 */\n      0x0a\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":8857:8885  uint256(10)**(18 - decimals) */\n      exp\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":8846:8852  amount */\n      dup5\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":8846:8856  amount.mul */\n      tag_135\n      swap1\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":8846:8886  amount.mul(uint256(10)**(18 - decimals)) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_283:\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":8839:8886  return amount.mul(uint256(10)**(18 - decimals)) */\n      swap2\n      pop\n      pop\n      jump(tag_273)\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":8806:8897  if (decimals < 18) {... */\n    tag_282:\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":8500:8903  function normalize(address coin, uint256 amount) internal view returns(uint256) {... */\n      pop\n    tag_273:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/math/SafeMath.sol\":834:1010  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_156:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/math/SafeMath.sol\":892:899  uint256 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/math/SafeMath.sol\":911:920  uint256 c */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/math/SafeMath.sol\":927:928  b */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/math/SafeMath.sol\":923:924  a */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/math/SafeMath.sol\":923:928  a + b */\n      add\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/math/SafeMath.sol\":911:928  uint256 c = a + b */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/math/SafeMath.sol\":951:952  a */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/math/SafeMath.sol\":946:947  c */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/math/SafeMath.sol\":946:952  c >= a */\n      lt\n      iszero\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/math/SafeMath.sol\":938:984  require(c >= a, \"SafeMath: addition overflow\") */\n      tag_285\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x1b\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_285:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/math/SafeMath.sol\":1002:1003  c */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/math/SafeMath.sol\":995:1003  return c */\n      swap2\n      pop\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/math/SafeMath.sol\":834:1010  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":6525:6790  function calculateShares(uint256 normalizedWithdraw) internal view returns(uint256) {... */\n    tag_158:\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":6600:6607  uint256 */\n      0x00\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":6619:6635  uint256 nBalance */\n      dup1\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":6638:6657  normalizedBalance() */\n      tag_287\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":6638:6655  normalizedBalance */\n      tag_44\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":6638:6657  normalizedBalance() */\n      jump\t// in\n    tag_287:\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":6619:6657  uint256 nBalance = normalizedBalance() */\n      swap1\n      pop\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":6667:6685  uint256 poolShares */\n      0x00\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":6688:6709  curveLPTokenBalance() */\n      tag_288\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":6688:6707  curveLPTokenBalance */\n      tag_59\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":6688:6709  curveLPTokenBalance() */\n      jump\t// in\n    tag_288:\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":6667:6709  uint256 poolShares = curveLPTokenBalance() */\n      swap1\n      pop\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":6735:6783  poolShares.mul(normalizedWithdraw).div(nBalance) */\n      tag_289\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":6774:6782  nBalance */\n      dup3\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":6735:6769  poolShares.mul(normalizedWithdraw) */\n      tag_290\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":6750:6768  normalizedWithdraw */\n      dup7\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":6735:6745  poolShares */\n      dup5\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":6735:6749  poolShares.mul */\n      tag_135\n      swap1\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":6735:6769  poolShares.mul(normalizedWithdraw) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_290:\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":6735:6773  poolShares.mul(normalizedWithdraw).div */\n      tag_136\n      swap1\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":6735:6783  poolShares.mul(normalizedWithdraw).div(nBalance) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_289:\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":6728:6783  return poolShares.mul(normalizedWithdraw).div(nBalance) */\n      swap3\n      pop\n      pop\n      pop\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":6525:6790  function calculateShares(uint256 normalizedWithdraw) internal view returns(uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/math/SafeMath.sol\":1274:1408  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_162:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/math/SafeMath.sol\":1332:1339  uint256 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/math/SafeMath.sol\":1358:1401  sub(a, b, \"SafeMath: subtraction overflow\") */\n      tag_292\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/math/SafeMath.sol\":1362:1363  a */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/math/SafeMath.sol\":1365:1366  b */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/math/SafeMath.sol\":1358:1401  sub(a, b, \"SafeMath: subtraction overflow\") */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x1e\n      dup2\n      mstore\n      0x20\n      add\n      0x536166654d6174683a207375627472616374696f6e206f766572666c6f770000\n      dup2\n      mstore\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/math/SafeMath.sol\":1358:1361  sub */\n      tag_293\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/math/SafeMath.sol\":1358:1401  sub(a, b, \"SafeMath: subtraction overflow\") */\n      jump\t// in\n    tag_292:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/math/SafeMath.sol\":1351:1401  return sub(a, b, \"SafeMath: subtraction overflow\") */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/math/SafeMath.sol\":1274:1408  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/ownership/Ownable.sol\":2178:2403  function _transferOwnership(address newOwner) internal {... */\n    tag_240:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/ownership/Ownable.sol\":2271:2272  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/ownership/Ownable.sol\":2251:2273  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/ownership/Ownable.sol\":2251:2259  newOwner */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/ownership/Ownable.sol\":2251:2273  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/ownership/Ownable.sol\":2243:2316  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_295\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x26\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe\n      0x26\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_295:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/ownership/Ownable.sol\":2360:2368  newOwner */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/ownership/Ownable.sol\":2331:2369  OwnershipTransferred(_owner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/ownership/Ownable.sol\":2352:2358  _owner */\n      0x33\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/ownership/Ownable.sol\":2331:2369  OwnershipTransferred(_owner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/ownership/Ownable.sol\":2388:2396  newOwner */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/ownership/Ownable.sol\":2379:2385  _owner */\n      0x33\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/ownership/Ownable.sol\":2379:2396  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/ownership/Ownable.sol\":2178:2403  function _transferOwnership(address newOwner) internal {... */\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-upgrades/blob/master/packages/core/contracts/Initializable.sol\":1638:2136  function isConstructor() private view returns (bool) {... */\n    tag_244:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-upgrades/blob/master/packages/core/contracts/Initializable.sol\":1685:1689  bool */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-upgrades/blob/master/packages/core/contracts/Initializable.sol\":2026:2038  address self */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-upgrades/blob/master/packages/core/contracts/Initializable.sol\":2049:2053  this */\n      address\n        /* \"https://github.com/OpenZeppelin/openzeppelin-upgrades/blob/master/packages/core/contracts/Initializable.sol\":2026:2054  address self = address(this) */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-upgrades/blob/master/packages/core/contracts/Initializable.sol\":2060:2070  uint256 cs */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-upgrades/blob/master/packages/core/contracts/Initializable.sol\":2105:2109  self */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-upgrades/blob/master/packages/core/contracts/Initializable.sol\":2093:2110  extcodesize(self) */\n      extcodesize\n        /* \"https://github.com/OpenZeppelin/openzeppelin-upgrades/blob/master/packages/core/contracts/Initializable.sol\":2087:2110  cs := extcodesize(self) */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-upgrades/blob/master/packages/core/contracts/Initializable.sol\":2130:2131  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-upgrades/blob/master/packages/core/contracts/Initializable.sol\":2124:2126  cs */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-upgrades/blob/master/packages/core/contracts/Initializable.sol\":2124:2131  cs == 0 */\n      eq\n        /* \"https://github.com/OpenZeppelin/openzeppelin-upgrades/blob/master/packages/core/contracts/Initializable.sol\":2117:2131  return cs == 0 */\n      swap3\n      pop\n      pop\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-upgrades/blob/master/packages/core/contracts/Initializable.sol\":1638:2136  function isConstructor() private view returns (bool) {... */\n      swap1\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/SafeERC20.sol\":2666:3761  function callOptionalReturn(IERC20 token, bytes memory data) private {... */\n    tag_253:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/SafeERC20.sol\":3261:3288  address(token).isContract() */\n      tag_298\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/SafeERC20.sol\":3269:3274  token */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/SafeERC20.sol\":3261:3286  address(token).isContract */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_299\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/SafeERC20.sol\":3261:3288  address(token).isContract() */\n      jump\t// in\n    tag_298:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/SafeERC20.sol\":3253:3324  require(address(token).isContract(), \"SafeERC20: call to non-contract\") */\n      tag_300\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x1f\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x5361666545524332303a2063616c6c20746f206e6f6e2d636f6e747261637400\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_300:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/SafeERC20.sol\":3395:3407  bool success */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/SafeERC20.sol\":3409:3432  bytes memory returndata */\n      0x60\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/SafeERC20.sol\":3444:3449  token */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/SafeERC20.sol\":3436:3455  address(token).call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/SafeERC20.sol\":3456:3460  data */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/SafeERC20.sol\":3436:3461  address(token).call(data) */\n      mload(0x40)\n      dup1\n      dup3\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":36:189   */\n    tag_301:\n        /* \"--CODEGEN--\":66:68   */\n      0x20\n        /* \"--CODEGEN--\":61:64   */\n      dup4\n        /* \"--CODEGEN--\":58:69   */\n      lt\n        /* \"--CODEGEN--\":36:189   */\n      tag_303\n      jumpi\n        /* \"--CODEGEN--\":182:185   */\n      dup1\n        /* \"--CODEGEN--\":176:186   */\n      mload\n        /* \"--CODEGEN--\":171:174   */\n      dup3\n        /* \"--CODEGEN--\":164:187   */\n      mstore\n        /* \"--CODEGEN--\":98:100   */\n      0x20\n        /* \"--CODEGEN--\":93:96   */\n      dup3\n        /* \"--CODEGEN--\":89:101   */\n      add\n        /* \"--CODEGEN--\":82:101   */\n      swap2\n      pop\n        /* \"--CODEGEN--\":123:125   */\n      0x20\n        /* \"--CODEGEN--\":118:121   */\n      dup2\n        /* \"--CODEGEN--\":114:126   */\n      add\n        /* \"--CODEGEN--\":107:126   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":148:150   */\n      0x20\n        /* \"--CODEGEN--\":143:146   */\n      dup4\n        /* \"--CODEGEN--\":139:151   */\n      sub\n        /* \"--CODEGEN--\":132:151   */\n      swap3\n      pop\n        /* \"--CODEGEN--\":36:189   */\n      jump(tag_301)\n    tag_303:\n        /* \"--CODEGEN--\":274:275   */\n      0x01\n        /* \"--CODEGEN--\":267:270   */\n      dup4\n        /* \"--CODEGEN--\":263:265   */\n      0x20\n        /* \"--CODEGEN--\":259:271   */\n      sub\n        /* \"--CODEGEN--\":254:257   */\n      0x0100\n        /* \"--CODEGEN--\":250:272   */\n      exp\n        /* \"--CODEGEN--\":246:276   */\n      sub\n        /* \"--CODEGEN--\":315:319   */\n      dup1\n        /* \"--CODEGEN--\":311:320   */\n      not\n        /* \"--CODEGEN--\":305:308   */\n      dup3\n        /* \"--CODEGEN--\":299:309   */\n      mload\n        /* \"--CODEGEN--\":295:321   */\n      and\n        /* \"--CODEGEN--\":356:360   */\n      dup2\n        /* \"--CODEGEN--\":350:353   */\n      dup5\n        /* \"--CODEGEN--\":344:354   */\n      mload\n        /* \"--CODEGEN--\":340:361   */\n      and\n        /* \"--CODEGEN--\":389:396   */\n      dup1\n        /* \"--CODEGEN--\":380:387   */\n      dup3\n        /* \"--CODEGEN--\":377:397   */\n      or\n        /* \"--CODEGEN--\":372:375   */\n      dup6\n        /* \"--CODEGEN--\":365:398   */\n      mstore\n        /* \"--CODEGEN--\":3:402   */\n      pop\n      pop\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/SafeERC20.sol\":3436:3461  address(token).call(data) */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      add\n      swap2\n      pop\n      pop\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup7\n      gas\n      call\n      swap2\n      pop\n      pop\n      returndatasize\n        /* \"--CODEGEN--\":14:15   */\n      dup1\n        /* \"--CODEGEN--\":21:22   */\n      0x00\n        /* \"--CODEGEN--\":16:47   */\n      dup2\n      eq\n      tag_305\n      jumpi\n        /* \"--CODEGEN--\":75:79   */\n      0x40\n        /* \"--CODEGEN--\":69:80   */\n      mload\n        /* \"--CODEGEN--\":64:80   */\n      swap2\n      pop\n        /* \"--CODEGEN--\":144:148   */\n      0x1f\n        /* \"--CODEGEN--\":140:149   */\n      not\n        /* \"--CODEGEN--\":133:137   */\n      0x3f\n        /* \"--CODEGEN--\":115:131   */\n      returndatasize\n        /* \"--CODEGEN--\":111:138   */\n      add\n        /* \"--CODEGEN--\":107:150   */\n      and\n        /* \"--CODEGEN--\":104:105   */\n      dup3\n        /* \"--CODEGEN--\":100:151   */\n      add\n        /* \"--CODEGEN--\":94:98   */\n      0x40\n        /* \"--CODEGEN--\":87:152   */\n      mstore\n        /* \"--CODEGEN--\":169:185   */\n      returndatasize\n        /* \"--CODEGEN--\":166:167   */\n      dup3\n        /* \"--CODEGEN--\":159:186   */\n      mstore\n        /* \"--CODEGEN--\":225:241   */\n      returndatasize\n        /* \"--CODEGEN--\":222:223   */\n      0x00\n        /* \"--CODEGEN--\":215:219   */\n      0x20\n        /* \"--CODEGEN--\":212:213   */\n      dup5\n        /* \"--CODEGEN--\":208:220   */\n      add\n        /* \"--CODEGEN--\":193:242   */\n      returndatacopy\n        /* \"--CODEGEN--\":7:249   */\n      jump(tag_304)\n        /* \"--CODEGEN--\":16:47   */\n    tag_305:\n        /* \"--CODEGEN--\":36:40   */\n      0x60\n        /* \"--CODEGEN--\":31:40   */\n      swap2\n      pop\n        /* \"--CODEGEN--\":7:249   */\n    tag_304:\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/SafeERC20.sol\":3394:3461  (bool success, bytes memory returndata) = address(token).call(data) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/SafeERC20.sol\":3479:3486  success */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/SafeERC20.sol\":3471:3523  require(success, \"SafeERC20: low-level call failed\") */\n      tag_306\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x20\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_306:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/SafeERC20.sol\":3558:3559  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/SafeERC20.sol\":3538:3548  returndata */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/SafeERC20.sol\":3538:3555  returndata.length */\n      mload\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/SafeERC20.sol\":3538:3559  returndata.length > 0 */\n      gt\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/SafeERC20.sol\":3534:3755  if (returndata.length > 0) { // Return data is optional... */\n      iszero\n      tag_307\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/SafeERC20.sol\":3678:3688  returndata */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/SafeERC20.sol\":3667:3697  abi.decode(returndata, (bool)) */\n      dup1\n      0x20\n      add\n      swap1\n      mload\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_308\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_308:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/SafeERC20.sol\":3667:3697  abi.decode(returndata, (bool)) */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/SafeERC20.sol\":3659:3744  require(abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\") */\n      tag_309\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x2a\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd\n      0x2a\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_309:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/SafeERC20.sol\":3534:3755  if (returndata.length > 0) { // Return data is optional... */\n    tag_307:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/SafeERC20.sol\":2666:3761  function callOptionalReturn(IERC20 token, bytes memory data) private {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/math/SafeMath.sol\":3718:4056  function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {... */\n    tag_272:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/math/SafeMath.sol\":3804:3811  uint256 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/math/SafeMath.sol\":3901:3902  0 */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/math/SafeMath.sol\":3897:3898  b */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/math/SafeMath.sol\":3897:3902  b > 0 */\n      gt\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/math/SafeMath.sol\":3904:3916  errorMessage */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/math/SafeMath.sol\":3889:3917  require(b > 0, errorMessage) */\n      swap1\n      tag_311\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":23:24   */\n      0x00\n        /* \"--CODEGEN--\":8:108   */\n    tag_312:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_314\n      jumpi\n        /* \"--CODEGEN--\":99:100   */\n      dup1\n        /* \"--CODEGEN--\":94:97   */\n      dup3\n        /* \"--CODEGEN--\":90:101   */\n      add\n        /* \"--CODEGEN--\":84:102   */\n      mload\n        /* \"--CODEGEN--\":80:81   */\n      dup2\n        /* \"--CODEGEN--\":75:78   */\n      dup5\n        /* \"--CODEGEN--\":71:82   */\n      add\n        /* \"--CODEGEN--\":64:103   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":49:50   */\n      dup2\n        /* \"--CODEGEN--\":45:55   */\n      add\n        /* \"--CODEGEN--\":40:55   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_312)\n    tag_314:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/math/SafeMath.sol\":3889:3917  require(b > 0, errorMessage) */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_315\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_315:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_311:\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/math/SafeMath.sol\":3927:3936  uint256 c */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/math/SafeMath.sol\":3943:3944  b */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/math/SafeMath.sol\":3939:3940  a */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/math/SafeMath.sol\":3939:3944  a / b */\n      dup2\n      tag_316\n      jumpi\n      invalid\n    tag_316:\n      div\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/math/SafeMath.sol\":3927:3944  uint256 c = a / b */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/math/SafeMath.sol\":4048:4049  c */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/math/SafeMath.sol\":4041:4049  return c */\n      swap2\n      pop\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/math/SafeMath.sol\":3718:4056  function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/math/SafeMath.sol\":1732:1919  function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {... */\n    tag_293:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/math/SafeMath.sol\":1818:1825  uint256 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/math/SafeMath.sol\":1850:1851  a */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/math/SafeMath.sol\":1845:1846  b */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/math/SafeMath.sol\":1845:1851  b <= a */\n      gt\n      iszero\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/math/SafeMath.sol\":1853:1865  errorMessage */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/math/SafeMath.sol\":1837:1866  require(b <= a, errorMessage) */\n      swap1\n      tag_318\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":23:24   */\n      0x00\n        /* \"--CODEGEN--\":8:108   */\n    tag_319:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_321\n      jumpi\n        /* \"--CODEGEN--\":99:100   */\n      dup1\n        /* \"--CODEGEN--\":94:97   */\n      dup3\n        /* \"--CODEGEN--\":90:101   */\n      add\n        /* \"--CODEGEN--\":84:102   */\n      mload\n        /* \"--CODEGEN--\":80:81   */\n      dup2\n        /* \"--CODEGEN--\":75:78   */\n      dup5\n        /* \"--CODEGEN--\":71:82   */\n      add\n        /* \"--CODEGEN--\":64:103   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":49:50   */\n      dup2\n        /* \"--CODEGEN--\":45:55   */\n      add\n        /* \"--CODEGEN--\":40:55   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_319)\n    tag_321:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/math/SafeMath.sol\":1837:1866  require(b <= a, errorMessage) */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_322\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_322:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_318:\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/math/SafeMath.sol\":1876:1885  uint256 c */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/math/SafeMath.sol\":1892:1893  b */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/math/SafeMath.sol\":1888:1889  a */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/math/SafeMath.sol\":1888:1893  a - b */\n      sub\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/math/SafeMath.sol\":1876:1893  uint256 c = a - b */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/math/SafeMath.sol\":1911:1912  c */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/math/SafeMath.sol\":1904:1912  return c */\n      swap2\n      pop\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/math/SafeMath.sol\":1732:1919  function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/utils/Address.sol\":686:1296  function isContract(address account) internal view returns (bool) {... */\n    tag_299:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/utils/Address.sol\":746:750  bool */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/utils/Address.sol\":1004:1020  bytes32 codehash */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/utils/Address.sol\":1030:1049  bytes32 accountHash */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/utils/Address.sol\":1052:1118  0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470 */\n      0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/utils/Address.sol\":1030:1118  bytes32 accountHash = 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470 */\n      0x00\n      shl\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/utils/Address.sol\":1219:1226  account */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/utils/Address.sol\":1207:1227  extcodehash(account) */\n      extcodehash\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/utils/Address.sol\":1195:1227  codehash := extcodehash(account) */\n      swap2\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/utils/Address.sol\":1258:1269  accountHash */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/utils/Address.sol\":1246:1254  codehash */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/utils/Address.sol\":1246:1269  codehash != accountHash */\n      eq\n      iszero\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/utils/Address.sol\":1246:1288  codehash != accountHash && codehash != 0x0 */\n      dup1\n      iszero\n      tag_324\n      jumpi\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/utils/Address.sol\":1285:1288  0x0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/utils/Address.sol\":1273:1288  codehash != 0x0 */\n      dup1\n      shl\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/utils/Address.sol\":1273:1281  codehash */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/utils/Address.sol\":1273:1288  codehash != 0x0 */\n      eq\n      iszero\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/utils/Address.sol\":1246:1288  codehash != accountHash && codehash != 0x0 */\n    tag_324:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/utils/Address.sol\":1238:1289  return (codehash != accountHash && codehash != 0x0) */\n      swap3\n      pop\n      pop\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/utils/Address.sol\":686:1296  function isContract(address account) internal view returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":1044:8905  contract MoneyToCurve is Initializable, Context, Ownable {... */\n    tag_76:\n      mload(0x40)\n      dup1\n      0x80\n      add\n      0x40\n      mstore\n      dup1\n      0x04\n      swap1\n        /* \"--CODEGEN--\":29:31   */\n      0x20\n        /* \"--CODEGEN--\":21:27   */\n      dup3\n        /* \"--CODEGEN--\":17:32   */\n      mul\n        /* \"--CODEGEN--\":117:121   */\n      dup1\n        /* \"--CODEGEN--\":105:115   */\n      codesize\n        /* \"--CODEGEN--\":97:103   */\n      dup4\n        /* \"--CODEGEN--\":88:122   */\n      codecopy\n        /* \"--CODEGEN--\":148:152   */\n      dup1\n        /* \"--CODEGEN--\":140:146   */\n      dup3\n        /* \"--CODEGEN--\":136:153   */\n      add\n        /* \"--CODEGEN--\":126:153   */\n      swap2\n      pop\n        /* \"--CODEGEN--\":0:157   */\n      pop\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":1044:8905  contract MoneyToCurve is Initializable, Context, Ownable {... */\n      swap1\n      pop\n      pop\n      swap1\n      jump\t// out\n    tag_113:\n      mload(0x40)\n      dup1\n      0x80\n      add\n      0x40\n      mstore\n      dup1\n      0x04\n      swap1\n        /* \"--CODEGEN--\":29:31   */\n      0x20\n        /* \"--CODEGEN--\":21:27   */\n      dup3\n        /* \"--CODEGEN--\":17:32   */\n      mul\n        /* \"--CODEGEN--\":117:121   */\n      dup1\n        /* \"--CODEGEN--\":105:115   */\n      codesize\n        /* \"--CODEGEN--\":97:103   */\n      dup4\n        /* \"--CODEGEN--\":88:122   */\n      codecopy\n        /* \"--CODEGEN--\":148:152   */\n      dup1\n        /* \"--CODEGEN--\":140:146   */\n      dup3\n        /* \"--CODEGEN--\":136:153   */\n      add\n        /* \"--CODEGEN--\":126:153   */\n      swap2\n      pop\n        /* \"--CODEGEN--\":0:157   */\n      pop\n        /* \"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":1044:8905  contract MoneyToCurve is Initializable, Context, Ownable {... */\n      swap1\n      pop\n      pop\n      swap1\n      jump\t// out\n    stop\n    data_02c2cde26d907edef0275dd60c1d3730b459d629aea5e0144e75833e4ac66b41 496e636f7272656374206465706f73697420636f6e74726163742061646472657373\n    data_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe 4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373\n    data_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3 536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77\n    data_9fbba6c4dcac9134893b633b9564f36435b3f927c1d5fa152c5c14b20cecb1a4 436f6e747261637420696e7374616e63652068617320616c7265616479206265656e20696e697469616c697a6564\n    data_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd 5361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564\n    data_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25 5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f20746f206e6f6e2d7a65726f20616c6c6f77616e6365\n\n    auxdata: 0xa265627a7a7231582012f905a18eea472128bb3c4baa48cab580ae113d3a2388f02b98b27ca93d23ae64736f6c634300050c0032\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "608060405260006100146100b860201b60201c565b905080603360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3506100c0565b600033905090565b613014806100cf6000396000f3fe608060405234801561001057600080fd5b506004361061012c5760003560e01c80638141d266116100ad578063be873f5011610071578063be873f50146104db578063dfda714a14610525578063e011262a14610543578063f2fde38b1461058d578063fe4b84df146105d15761012c565b80638141d266146103bd5780638da5cb5b146104075780638f32d59b1461045157806397aa80d514610473578063a3477c36146104915761012c565b806344f9c395116100f457806344f9c395146102a9578063628cb95e146102c7578063715018a6146102e557806377b8b1c7146102ef5780637c241146146103735761012c565b80630c55699c1461013157806314a19aec1461014f5780631c600416146101b4578063208e509f146101fe57806338eda37014610244575b600080fd5b6101396105ff565b6040518082815260200191505060405180910390f35b6101b26004803603608081101561016557600080fd5b8101908080608001906004806020026040519081016040528092919082600460200280828437600081840152601f19601f8201169050808301925050505050509192919290505050610605565b005b6101bc610b6e565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b610206610b94565b6040518082600460200280838360005b83811015610231578082015181840152602081019050610216565b5050505090500191505060405180910390f35b6102a76004803603608081101561025a57600080fd5b8101908080608001906004806020026040519081016040528092919082600460200280828437600081840152601f19601f8201169050808301925050505050509192919290505050610fff565b005b6102b161145c565b6040518082815260200191505060405180910390f35b6102cf61153d565b6040518082815260200191505060405180910390f35b6102ed61166a565b005b6103716004803603606081101561030557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506117a5565b005b61037b611d7b565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6103c5611da1565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61040f611dc7565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b610459611df1565b604051808215151515815260200191505060405180910390f35b61047b611e50565b6040518082815260200191505060405180910390f35b610499611e83565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6104e3611ea9565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61052d611ecf565b6040518082815260200191505060405180910390f35b61054b611fb0565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6105cf600480360360208110156105a357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611fd6565b005b6105fd600480360360208110156105e757600080fd5b810190808035906020019092919050505061205c565b005b603a5481565b61060d612ea4565b603460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663fb6d3a896040518163ffffffff1660e01b815260040160806040518083038186803b15801561067557600080fd5b505afa158015610689573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525060808110156106ae57600080fd5b8101908091905050905060008090505b60048110156107955761071b6106d2612163565b308584600481106106df57fe5b60200201518585600481106106f057fe5b602002015173ffffffffffffffffffffffffffffffffffffffff1661216b909392919063ffffffff16565b610788603460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1684836004811061074d57fe5b602002015184846004811061075e57fe5b602002015173ffffffffffffffffffffffffffffffffffffffff166122719092919063ffffffff16565b80806001019150506106be565b50603460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663029b2f348360006040518363ffffffff1660e01b81526004018083600460200280838360005b838110156108115780820151818401526020810190506107f6565b5050505090500182815260200192505050600060405180830381600087803b15801561083c57600080fd5b505af1158015610850573d6000803e3d6000fd5b505050506000603660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b1580156108f557600080fd5b505afa158015610909573d6000803e3d6000fd5b505050506040513d602081101561091f57600080fd5b810190808051906020019092919050505090506109a1603760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1682603660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166122719092919063ffffffff16565b603760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663b6b55f25826040518263ffffffff1660e01b815260040180828152602001915050600060405180830381600087803b158015610a1657600080fd5b505af1158015610a2a573d6000803e3d6000fd5b50505050610a36612491565b6000603960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b158015610ad757600080fd5b505afa158015610aeb573d6000803e3d6000fd5b505050506040513d6020811015610b0157600080fd5b81019080805190602001909291905050509050610b68610b1f612163565b82603960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1661256e9092919063ffffffff16565b50505050565b603560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b610b9c612ec6565b610ba4612ea4565b603460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663fb6d3a896040518163ffffffff1660e01b815260040160806040518083038186803b158015610c0c57600080fd5b505afa158015610c20573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506080811015610c4557600080fd5b810190809190505090506000610c59611e50565b90506000603660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166318160ddd6040518163ffffffff1660e01b815260040160206040518083038186803b158015610cc557600080fd5b505afa158015610cd9573d6000803e3d6000fd5b505050506040513d6020811015610cef57600080fd5b8101908080519060200190929190505050905060008111610d78576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260198152602001807f4e6f204375727665204c5020746f6b656e73206d696e7465640000000000000081525060200191505060405180910390fd5b60008090505b6004811015610ff8576000603560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663065a80d8836040518263ffffffff1660e01b81526004018082600f0b600f0b815260200191505060206040518083038186803b158015610e0257600080fd5b505afa158015610e16573d6000803e3d6000fd5b505050506040513d6020811015610e2c57600080fd5b810190808051906020019092919050505090506000603560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323746eb8846040518263ffffffff1660e01b81526004018082600f0b600f0b815260200191505060206040518083038186803b158015610eba57600080fd5b505afa158015610ece573d6000803e3d6000fd5b505050506040513d6020811015610ee457600080fd5b810190808051906020019092919050505090506000610f1e85610f10888661263f90919063ffffffff16565b6126c590919063ffffffff16565b905060008273ffffffffffffffffffffffffffffffffffffffff166377c7b8fc6040518163ffffffff1660e01b815260040160206040518083038186803b158015610f6857600080fd5b505afa158015610f7c573d6000803e3d6000fd5b505050506040513d6020811015610f9257600080fd5b81019080805190602001909291905050509050610fd2670de0b6b3a7640000610fc4848461263f90919063ffffffff16565b6126c590919063ffffffff16565b898660048110610fde57fe5b602002018181525050505050508080600101915050610d7e565b5050505090565b611007612ea4565b603460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663fb6d3a896040518163ffffffff1660e01b815260040160806040518083038186803b15801561106f57600080fd5b505afa158015611083573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525060808110156110a857600080fd5b81019080919050509050600080600090505b600481101561110e576110ff6110f08483600481106110d557fe5b60200201518684600481106110e657fe5b602002015161270f565b8361281290919063ffffffff16565b915080806001019150506110ba565b60006111198361289a565b90506000611125611ecf565b905060008111156111465761114381836128e190919063ffffffff16565b91505b603760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16632e1a7d4d836040518263ffffffff1660e01b815260040180828152602001915050600060405180830381600087803b1580156111bb57600080fd5b505af11580156111cf573d6000803e3d6000fd5b50505050611242603460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1683603660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166122719092919063ffffffff16565b603460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166318a7bd7687846040518363ffffffff1660e01b81526004018083600460200280838360005b838110156112bc5780820151818401526020810190506112a1565b5050505090500182815260200192505050600060405180830381600087803b1580156112e757600080fd5b505af11580156112fb573d6000803e3d6000fd5b50505050600092505b600483101561145457600085846004811061131b57fe5b6020020151905060008173ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b1580156113a157600080fd5b505afa1580156113b5573d6000803e3d6000fd5b505050506040513d60208110156113cb57600080fd5b8101908080519060200190929190505050905060008886600481106113ec57fe5b602002015182111561140e5788866004811061140457fe5b6020020151611410565b815b905061144461141d612163565b828573ffffffffffffffffffffffffffffffffffffffff1661256e9092919063ffffffff16565b5050508280600101935050611304565b505050505050565b6000603760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b1580156114fd57600080fd5b505afa158015611511573d6000803e3d6000fd5b505050506040513d602081101561152757600080fd5b8101908080519060200190929190505050905090565b6000611547612ea4565b603460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663fb6d3a896040518163ffffffff1660e01b815260040160806040518083038186803b1580156115af57600080fd5b505afa1580156115c3573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525060808110156115e857600080fd5b810190809190505090506115fa612ec6565b611602610b94565b9050600080600090505b60048110156116605761165161164285836004811061162757fe5b602002015185846004811061163857fe5b602002015161270f565b8361281290919063ffffffff16565b9150808060010191505061160c565b5080935050505090565b611672611df1565b6116e4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff16603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a36000603360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b6117ad611df1565b61181f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156118a5576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526022815260200180612ee96022913960400191505060405180910390fd5b82603460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550603460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16637165485d6040518163ffffffff1660e01b815260040160206040518083038186803b15801561194e57600080fd5b505afa158015611962573d6000803e3d6000fd5b505050506040513d602081101561197857600080fd5b8101908080519060200190929190505050603560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555081603760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550603460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663fc0c546a6040518163ffffffff1660e01b815260040160206040518083038186803b158015611a7257600080fd5b505afa158015611a86573d6000803e3d6000fd5b505050506040513d6020811015611a9c57600080fd5b8101908080519060200190929190505050603660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550603660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16603760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166382c630666040518163ffffffff1660e01b815260040160206040518083038186803b158015611b8e57600080fd5b505afa158015611ba2573d6000803e3d6000fd5b505050506040513d6020811015611bb857600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff1614611c52576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601e8152602001807f43757276654669204c5020746f6b656e7320646f206e6f74206d61746368000081525060200191505060405180910390fd5b80603860006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550603760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166376d8b1176040518163ffffffff1660e01b815260040160206040518083038186803b158015611cfb57600080fd5b505afa158015611d0f573d6000803e3d6000fd5b505050506040513d6020811015611d2557600080fd5b8101908080519060200190929190505050603960006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505050565b603860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b603960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16611e34612163565b73ffffffffffffffffffffffffffffffffffffffff1614905090565b600080611e5b61145c565b90506000611e67611ecf565b9050611e7c828261281290919063ffffffff16565b9250505090565b603660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b603460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000603660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b158015611f7057600080fd5b505afa158015611f84573d6000803e3d6000fd5b505050506040513d6020811015611f9a57600080fd5b8101908080519060200190929190505050905090565b603760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b611fde611df1565b612050576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b6120598161292b565b50565b600060019054906101000a900460ff168061207b575061207a612a71565b5b8061209257506000809054906101000a900460ff16155b6120e7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e815260200180612f52602e913960400191505060405180910390fd5b60008060019054906101000a900460ff161590508015612137576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b81603a81905550801561215f5760008060016101000a81548160ff0219169083151502179055505b5050565b600033905090565b61226b848573ffffffffffffffffffffffffffffffffffffffff166323b872dd905060e01b858585604051602401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050612a88565b50505050565b600081148061236b575060008373ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e30856040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019250505060206040518083038186803b15801561232e57600080fd5b505afa158015612342573d6000803e3d6000fd5b505050506040513d602081101561235857600080fd5b8101908080519060200190929190505050145b6123c0576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526036815260200180612faa6036913960400191505060405180910390fd5b61248c838473ffffffffffffffffffffffffffffffffffffffff1663095ea7b3905060e01b8484604051602401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050612a88565b505050565b603860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16636a627842603760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050600060405180830381600087803b15801561255457600080fd5b505af1158015612568573d6000803e3d6000fd5b50505050565b61263a838473ffffffffffffffffffffffffffffffffffffffff1663a9059cbb905060e01b8484604051602401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050612a88565b505050565b60008083141561265257600090506126bf565b600082840290508284828161266357fe5b04146126ba576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526021815260200180612f316021913960400191505060405180910390fd5b809150505b92915050565b600061270783836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f000000000000815250612cd3565b905092915050565b6000808373ffffffffffffffffffffffffffffffffffffffff1663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b15801561275857600080fd5b505afa15801561276c573d6000803e3d6000fd5b505050506040513d602081101561278257600080fd5b8101908080519060200190929190505050905060128160ff1614156127aa578291505061280c565b60128160ff1611156127da576127d26012820360ff16600a0a846126c590919063ffffffff16565b91505061280c565b60128160ff16101561280a576128028160120360ff16600a0a8461263f90919063ffffffff16565b91505061280c565b505b92915050565b600080828401905083811015612890576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b6000806128a561153d565b905060006128b1611e50565b90506128d8826128ca868461263f90919063ffffffff16565b6126c590919063ffffffff16565b92505050919050565b600061292383836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250612d99565b905092915050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156129b1576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526026815260200180612f0b6026913960400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff16603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a380603360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000803090506000813b9050600081149250505090565b612aa78273ffffffffffffffffffffffffffffffffffffffff16612e59565b612b19576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f5361666545524332303a2063616c6c20746f206e6f6e2d636f6e74726163740081525060200191505060405180910390fd5b600060608373ffffffffffffffffffffffffffffffffffffffff16836040518082805190602001908083835b60208310612b685780518252602082019150602081019050602083039250612b45565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d8060008114612bca576040519150601f19603f3d011682016040523d82523d6000602084013e612bcf565b606091505b509150915081612c47576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c656481525060200191505060405180910390fd5b600081511115612ccd57808060200190516020811015612c6657600080fd5b8101908080519060200190929190505050612ccc576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602a815260200180612f80602a913960400191505060405180910390fd5b5b50505050565b60008083118290612d7f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b83811015612d44578082015181840152602081019050612d29565b50505050905090810190601f168015612d715780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b506000838581612d8b57fe5b049050809150509392505050565b6000838311158290612e46576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b83811015612e0b578082015181840152602081019050612df0565b50505050905090810190601f168015612e385780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5060008385039050809150509392505050565b60008060007fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a47060001b9050833f9150808214158015612e9b57506000801b8214155b92505050919050565b6040518060800160405280600490602082028038833980820191505090505090565b604051806080016040528060049060208202803883398082019150509050509056fe496e636f7272656374206465706f73697420636f6e747261637420616464726573734f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77436f6e747261637420696e7374616e63652068617320616c7265616479206265656e20696e697469616c697a65645361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565645361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f20746f206e6f6e2d7a65726f20616c6c6f77616e6365a265627a7a7231582012f905a18eea472128bb3c4baa48cab580ae113d3a2388f02b98b27ca93d23ae64736f6c634300050c0032",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 PUSH2 0x14 PUSH2 0xB8 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x33 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP PUSH2 0xC0 JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x3014 DUP1 PUSH2 0xCF PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x12C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8141D266 GT PUSH2 0xAD JUMPI DUP1 PUSH4 0xBE873F50 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xBE873F50 EQ PUSH2 0x4DB JUMPI DUP1 PUSH4 0xDFDA714A EQ PUSH2 0x525 JUMPI DUP1 PUSH4 0xE011262A EQ PUSH2 0x543 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x58D JUMPI DUP1 PUSH4 0xFE4B84DF EQ PUSH2 0x5D1 JUMPI PUSH2 0x12C JUMP JUMPDEST DUP1 PUSH4 0x8141D266 EQ PUSH2 0x3BD JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x407 JUMPI DUP1 PUSH4 0x8F32D59B EQ PUSH2 0x451 JUMPI DUP1 PUSH4 0x97AA80D5 EQ PUSH2 0x473 JUMPI DUP1 PUSH4 0xA3477C36 EQ PUSH2 0x491 JUMPI PUSH2 0x12C JUMP JUMPDEST DUP1 PUSH4 0x44F9C395 GT PUSH2 0xF4 JUMPI DUP1 PUSH4 0x44F9C395 EQ PUSH2 0x2A9 JUMPI DUP1 PUSH4 0x628CB95E EQ PUSH2 0x2C7 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x2E5 JUMPI DUP1 PUSH4 0x77B8B1C7 EQ PUSH2 0x2EF JUMPI DUP1 PUSH4 0x7C241146 EQ PUSH2 0x373 JUMPI PUSH2 0x12C JUMP JUMPDEST DUP1 PUSH4 0xC55699C EQ PUSH2 0x131 JUMPI DUP1 PUSH4 0x14A19AEC EQ PUSH2 0x14F JUMPI DUP1 PUSH4 0x1C600416 EQ PUSH2 0x1B4 JUMPI DUP1 PUSH4 0x208E509F EQ PUSH2 0x1FE JUMPI DUP1 PUSH4 0x38EDA370 EQ PUSH2 0x244 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x139 PUSH2 0x5FF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B2 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x80 DUP2 LT ISZERO PUSH2 0x165 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 PUSH1 0x80 ADD SWAP1 PUSH1 0x4 DUP1 PUSH1 0x20 MUL PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP3 PUSH1 0x4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP SWAP2 SWAP3 SWAP2 SWAP3 SWAP1 POP POP POP PUSH2 0x605 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1BC PUSH2 0xB6E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x206 PUSH2 0xB94 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH1 0x4 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x231 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x216 JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A7 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x80 DUP2 LT ISZERO PUSH2 0x25A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 PUSH1 0x80 ADD SWAP1 PUSH1 0x4 DUP1 PUSH1 0x20 MUL PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP3 PUSH1 0x4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP SWAP2 SWAP3 SWAP2 SWAP3 SWAP1 POP POP POP PUSH2 0xFFF JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2B1 PUSH2 0x145C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2CF PUSH2 0x153D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2ED PUSH2 0x166A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x371 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x305 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x17A5 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x37B PUSH2 0x1D7B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3C5 PUSH2 0x1DA1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x40F PUSH2 0x1DC7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x459 PUSH2 0x1DF1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x47B PUSH2 0x1E50 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x499 PUSH2 0x1E83 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4E3 PUSH2 0x1EA9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x52D PUSH2 0x1ECF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x54B PUSH2 0x1FB0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5CF PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x5A3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1FD6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x5FD PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x5E7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x205C JUMP JUMPDEST STOP JUMPDEST PUSH1 0x3A SLOAD DUP2 JUMP JUMPDEST PUSH2 0x60D PUSH2 0x2EA4 JUMP JUMPDEST PUSH1 0x34 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xFB6D3A89 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x80 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x675 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x689 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP PUSH1 0x80 DUP2 LT ISZERO PUSH2 0x6AE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 SWAP2 SWAP1 POP POP SWAP1 POP PUSH1 0x0 DUP1 SWAP1 POP JUMPDEST PUSH1 0x4 DUP2 LT ISZERO PUSH2 0x795 JUMPI PUSH2 0x71B PUSH2 0x6D2 PUSH2 0x2163 JUMP JUMPDEST ADDRESS DUP6 DUP5 PUSH1 0x4 DUP2 LT PUSH2 0x6DF JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MLOAD DUP6 DUP6 PUSH1 0x4 DUP2 LT PUSH2 0x6F0 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x216B SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x788 PUSH1 0x34 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 DUP4 PUSH1 0x4 DUP2 LT PUSH2 0x74D JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MLOAD DUP5 DUP5 PUSH1 0x4 DUP2 LT PUSH2 0x75E JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2271 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x6BE JUMP JUMPDEST POP PUSH1 0x34 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x29B2F34 DUP4 PUSH1 0x0 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP4 PUSH1 0x4 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x811 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x7F6 JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x83C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x850 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x0 PUSH1 0x36 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x8F5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x909 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x91F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP SWAP1 POP PUSH2 0x9A1 PUSH1 0x37 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x36 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2271 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x37 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xB6B55F25 DUP3 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xA16 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xA2A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH2 0xA36 PUSH2 0x2491 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x39 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xAD7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xAEB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xB01 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP SWAP1 POP PUSH2 0xB68 PUSH2 0xB1F PUSH2 0x2163 JUMP JUMPDEST DUP3 PUSH1 0x39 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x256E SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x35 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0xB9C PUSH2 0x2EC6 JUMP JUMPDEST PUSH2 0xBA4 PUSH2 0x2EA4 JUMP JUMPDEST PUSH1 0x34 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xFB6D3A89 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x80 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xC0C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xC20 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP PUSH1 0x80 DUP2 LT ISZERO PUSH2 0xC45 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 SWAP2 SWAP1 POP POP SWAP1 POP PUSH1 0x0 PUSH2 0xC59 PUSH2 0x1E50 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x36 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x18160DDD PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xCC5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xCD9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xCEF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP SWAP1 POP PUSH1 0x0 DUP2 GT PUSH2 0xD78 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x19 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4E6F204375727665204C5020746F6B656E73206D696E74656400000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SWAP1 POP JUMPDEST PUSH1 0x4 DUP2 LT ISZERO PUSH2 0xFF8 JUMPI PUSH1 0x0 PUSH1 0x35 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x65A80D8 DUP4 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH1 0xF SIGNEXTEND PUSH1 0xF SIGNEXTEND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xE02 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xE16 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xE2C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP SWAP1 POP PUSH1 0x0 PUSH1 0x35 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23746EB8 DUP5 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH1 0xF SIGNEXTEND PUSH1 0xF SIGNEXTEND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xEBA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xECE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xEE4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP SWAP1 POP PUSH1 0x0 PUSH2 0xF1E DUP6 PUSH2 0xF10 DUP9 DUP7 PUSH2 0x263F SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x26C5 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x77C7B8FC PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xF68 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xF7C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xF92 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP SWAP1 POP PUSH2 0xFD2 PUSH8 0xDE0B6B3A7640000 PUSH2 0xFC4 DUP5 DUP5 PUSH2 0x263F SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x26C5 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP10 DUP7 PUSH1 0x4 DUP2 LT PUSH2 0xFDE JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD DUP2 DUP2 MSTORE POP POP POP POP POP POP DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0xD7E JUMP JUMPDEST POP POP POP POP SWAP1 JUMP JUMPDEST PUSH2 0x1007 PUSH2 0x2EA4 JUMP JUMPDEST PUSH1 0x34 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xFB6D3A89 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x80 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x106F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1083 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP PUSH1 0x80 DUP2 LT ISZERO PUSH2 0x10A8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 SWAP2 SWAP1 POP POP SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP JUMPDEST PUSH1 0x4 DUP2 LT ISZERO PUSH2 0x110E JUMPI PUSH2 0x10FF PUSH2 0x10F0 DUP5 DUP4 PUSH1 0x4 DUP2 LT PUSH2 0x10D5 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MLOAD DUP7 DUP5 PUSH1 0x4 DUP2 LT PUSH2 0x10E6 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MLOAD PUSH2 0x270F JUMP JUMPDEST DUP4 PUSH2 0x2812 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP2 POP DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x10BA JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1119 DUP4 PUSH2 0x289A JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1125 PUSH2 0x1ECF JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 GT ISZERO PUSH2 0x1146 JUMPI PUSH2 0x1143 DUP2 DUP4 PUSH2 0x28E1 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP2 POP JUMPDEST PUSH1 0x37 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x2E1A7D4D DUP4 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x11BB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x11CF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH2 0x1242 PUSH1 0x34 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH1 0x36 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2271 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x34 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x18A7BD76 DUP8 DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP4 PUSH1 0x4 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x12BC JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x12A1 JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x12E7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x12FB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x0 SWAP3 POP JUMPDEST PUSH1 0x4 DUP4 LT ISZERO PUSH2 0x1454 JUMPI PUSH1 0x0 DUP6 DUP5 PUSH1 0x4 DUP2 LT PUSH2 0x131B JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MLOAD SWAP1 POP PUSH1 0x0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x13A1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x13B5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x13CB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP SWAP1 POP PUSH1 0x0 DUP9 DUP7 PUSH1 0x4 DUP2 LT PUSH2 0x13EC JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MLOAD DUP3 GT ISZERO PUSH2 0x140E JUMPI DUP9 DUP7 PUSH1 0x4 DUP2 LT PUSH2 0x1404 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MLOAD PUSH2 0x1410 JUMP JUMPDEST DUP2 JUMPDEST SWAP1 POP PUSH2 0x1444 PUSH2 0x141D PUSH2 0x2163 JUMP JUMPDEST DUP3 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x256E SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP POP POP DUP3 DUP1 PUSH1 0x1 ADD SWAP4 POP POP PUSH2 0x1304 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x37 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x14FD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1511 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1527 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1547 PUSH2 0x2EA4 JUMP JUMPDEST PUSH1 0x34 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xFB6D3A89 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x80 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x15AF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x15C3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP PUSH1 0x80 DUP2 LT ISZERO PUSH2 0x15E8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 SWAP2 SWAP1 POP POP SWAP1 POP PUSH2 0x15FA PUSH2 0x2EC6 JUMP JUMPDEST PUSH2 0x1602 PUSH2 0xB94 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP JUMPDEST PUSH1 0x4 DUP2 LT ISZERO PUSH2 0x1660 JUMPI PUSH2 0x1651 PUSH2 0x1642 DUP6 DUP4 PUSH1 0x4 DUP2 LT PUSH2 0x1627 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MLOAD DUP6 DUP5 PUSH1 0x4 DUP2 LT PUSH2 0x1638 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MLOAD PUSH2 0x270F JUMP JUMPDEST DUP4 PUSH2 0x2812 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP2 POP DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x160C JUMP JUMPDEST POP DUP1 SWAP4 POP POP POP POP SWAP1 JUMP JUMPDEST PUSH2 0x1672 PUSH2 0x1DF1 JUMP JUMPDEST PUSH2 0x16E4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x33 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x0 PUSH1 0x33 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x17AD PUSH2 0x1DF1 JUMP JUMPDEST PUSH2 0x181F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x18A5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2EE9 PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 PUSH1 0x34 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x34 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x7165485D PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x194E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1962 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1978 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH1 0x35 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH1 0x37 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x34 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xFC0C546A PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1A72 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1A86 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1A9C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH1 0x36 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x36 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x37 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x82C63066 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1B8E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1BA2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1BB8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1C52 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x43757276654669204C5020746F6B656E7320646F206E6F74206D617463680000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x38 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x37 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x76D8B117 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1CFB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1D0F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1D25 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH1 0x39 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x38 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x39 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x33 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x33 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1E34 PUSH2 0x2163 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1E5B PUSH2 0x145C JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1E67 PUSH2 0x1ECF JUMP JUMPDEST SWAP1 POP PUSH2 0x1E7C DUP3 DUP3 PUSH2 0x2812 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP3 POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x36 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x34 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x36 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1F70 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1F84 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1F9A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x37 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x1FDE PUSH2 0x1DF1 JUMP JUMPDEST PUSH2 0x2050 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2059 DUP2 PUSH2 0x292B JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP1 PUSH2 0x207B JUMPI POP PUSH2 0x207A PUSH2 0x2A71 JUMP JUMPDEST JUMPDEST DUP1 PUSH2 0x2092 JUMPI POP PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO JUMPDEST PUSH2 0x20E7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2E DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2F52 PUSH1 0x2E SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO SWAP1 POP DUP1 ISZERO PUSH2 0x2137 JUMPI PUSH1 0x1 PUSH1 0x0 PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST DUP2 PUSH1 0x3A DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x215F JUMPI PUSH1 0x0 DUP1 PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x226B DUP5 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD SWAP1 POP PUSH1 0xE0 SHL DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP4 POP POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x2A88 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 EQ DUP1 PUSH2 0x236B JUMPI POP PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xDD62ED3E ADDRESS DUP6 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x232E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2342 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2358 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP EQ JUMPDEST PUSH2 0x23C0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x36 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2FAA PUSH1 0x36 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x248C DUP4 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x95EA7B3 SWAP1 POP PUSH1 0xE0 SHL DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x24 ADD DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x2A88 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x38 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x6A627842 PUSH1 0x37 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2554 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2568 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x263A DUP4 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB SWAP1 POP PUSH1 0xE0 SHL DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x24 ADD DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x2A88 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 EQ ISZERO PUSH2 0x2652 JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0x26BF JUMP JUMPDEST PUSH1 0x0 DUP3 DUP5 MUL SWAP1 POP DUP3 DUP5 DUP3 DUP2 PUSH2 0x2663 JUMPI INVALID JUMPDEST DIV EQ PUSH2 0x26BA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2F31 PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2707 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1A DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A206469766973696F6E206279207A65726F000000000000 DUP2 MSTORE POP PUSH2 0x2CD3 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x313CE567 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2758 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x276C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2782 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP SWAP1 POP PUSH1 0x12 DUP2 PUSH1 0xFF AND EQ ISZERO PUSH2 0x27AA JUMPI DUP3 SWAP2 POP POP PUSH2 0x280C JUMP JUMPDEST PUSH1 0x12 DUP2 PUSH1 0xFF AND GT ISZERO PUSH2 0x27DA JUMPI PUSH2 0x27D2 PUSH1 0x12 DUP3 SUB PUSH1 0xFF AND PUSH1 0xA EXP DUP5 PUSH2 0x26C5 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP2 POP POP PUSH2 0x280C JUMP JUMPDEST PUSH1 0x12 DUP2 PUSH1 0xFF AND LT ISZERO PUSH2 0x280A JUMPI PUSH2 0x2802 DUP2 PUSH1 0x12 SUB PUSH1 0xFF AND PUSH1 0xA EXP DUP5 PUSH2 0x263F SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP2 POP POP PUSH2 0x280C JUMP JUMPDEST POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 ADD SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x2890 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1B DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x28A5 PUSH2 0x153D JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x28B1 PUSH2 0x1E50 JUMP JUMPDEST SWAP1 POP PUSH2 0x28D8 DUP3 PUSH2 0x28CA DUP7 DUP5 PUSH2 0x263F SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x26C5 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2923 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 DUP2 MSTORE POP PUSH2 0x2D99 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x29B1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2F0B PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x33 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 PUSH1 0x33 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 ADDRESS SWAP1 POP PUSH1 0x0 DUP2 EXTCODESIZE SWAP1 POP PUSH1 0x0 DUP2 EQ SWAP3 POP POP POP SWAP1 JUMP JUMPDEST PUSH2 0x2AA7 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2E59 JUMP JUMPDEST PUSH2 0x2B19 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1F DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x5361666545524332303A2063616C6C20746F206E6F6E2D636F6E747261637400 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0x2B68 JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH1 0x20 DUP4 SUB SWAP3 POP PUSH2 0x2B45 JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x2BCA JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x2BCF JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 PUSH2 0x2C47 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 MLOAD GT ISZERO PUSH2 0x2CCD JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2C66 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x2CCC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2A DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2F80 PUSH1 0x2A SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 GT DUP3 SWAP1 PUSH2 0x2D7F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2D44 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2D29 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x2D71 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 DUP4 DUP6 DUP2 PUSH2 0x2D8B JUMPI INVALID JUMPDEST DIV SWAP1 POP DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 DUP4 GT ISZERO DUP3 SWAP1 PUSH2 0x2E46 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2E0B JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2DF0 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x2E38 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 DUP4 DUP6 SUB SWAP1 POP DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH32 0xC5D2460186F7233C927E7DB2DCC703C0E500B653CA82273B7BFAD8045D85A470 PUSH1 0x0 SHL SWAP1 POP DUP4 EXTCODEHASH SWAP2 POP DUP1 DUP3 EQ ISZERO DUP1 ISZERO PUSH2 0x2E9B JUMPI POP PUSH1 0x0 DUP1 SHL DUP3 EQ ISZERO JUMPDEST SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 SWAP1 PUSH1 0x20 DUP3 MUL DUP1 CODESIZE DUP4 CODECOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 SWAP1 PUSH1 0x20 DUP3 MUL DUP1 CODESIZE DUP4 CODECOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP POP SWAP1 JUMP INVALID 0x49 PUSH15 0x636F7272656374206465706F736974 KECCAK256 PUSH4 0x6F6E7472 PUSH2 0x6374 KECCAK256 PUSH2 0x6464 PUSH19 0x6573734F776E61626C653A206E6577206F776E PUSH6 0x722069732074 PUSH9 0x65207A65726F206164 PUSH5 0x7265737353 PUSH2 0x6665 0x4d PUSH2 0x7468 GASPRICE KECCAK256 PUSH14 0x756C7469706C69636174696F6E20 PUSH16 0x766572666C6F77436F6E747261637420 PUSH10 0x6E7374616E6365206861 PUSH20 0x20616C7265616479206265656E20696E69746961 PUSH13 0x697A6564536166654552433230 GASPRICE KECCAK256 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS KECCAK256 PUSH16 0x7065726174696F6E20646964206E6F74 KECCAK256 PUSH20 0x7563636565645361666545524332303A20617070 PUSH19 0x6F76652066726F6D206E6F6E2D7A65726F2074 PUSH16 0x206E6F6E2D7A65726F20616C6C6F7761 PUSH15 0x6365A265627A7A7231582012F905A1 DUP15 0xea SELFBALANCE 0x21 0x28 0xbb EXTCODECOPY 0x4b 0xaa 0x48 0xca 0xb5 DUP1 0xae GT RETURNDATASIZE GASPRICE 0x23 DUP9 CREATE 0x2b SWAP9 0xb2 PUSH29 0xA93D23AE64736F6C634300050C00320000000000000000000000000000 ",
							"sourceMap": "1044:7861:0:-;;;698:17:8;718:12;:10;;;:12;;:::i;:::-;698:32;;749:9;740:6;;:18;;;;;;;;;;;;;;;;;;806:9;773:43;;802:1;773:43;;;;;;;;;;;;664:159;1044:7861:0;;788:96:6;833:15;867:10;860:17;;788:96;:::o;1044:7861:0:-;;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506004361061012c5760003560e01c80638141d266116100ad578063be873f5011610071578063be873f50146104db578063dfda714a14610525578063e011262a14610543578063f2fde38b1461058d578063fe4b84df146105d15761012c565b80638141d266146103bd5780638da5cb5b146104075780638f32d59b1461045157806397aa80d514610473578063a3477c36146104915761012c565b806344f9c395116100f457806344f9c395146102a9578063628cb95e146102c7578063715018a6146102e557806377b8b1c7146102ef5780637c241146146103735761012c565b80630c55699c1461013157806314a19aec1461014f5780631c600416146101b4578063208e509f146101fe57806338eda37014610244575b600080fd5b6101396105ff565b6040518082815260200191505060405180910390f35b6101b26004803603608081101561016557600080fd5b8101908080608001906004806020026040519081016040528092919082600460200280828437600081840152601f19601f8201169050808301925050505050509192919290505050610605565b005b6101bc610b6e565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b610206610b94565b6040518082600460200280838360005b83811015610231578082015181840152602081019050610216565b5050505090500191505060405180910390f35b6102a76004803603608081101561025a57600080fd5b8101908080608001906004806020026040519081016040528092919082600460200280828437600081840152601f19601f8201169050808301925050505050509192919290505050610fff565b005b6102b161145c565b6040518082815260200191505060405180910390f35b6102cf61153d565b6040518082815260200191505060405180910390f35b6102ed61166a565b005b6103716004803603606081101561030557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506117a5565b005b61037b611d7b565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6103c5611da1565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61040f611dc7565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b610459611df1565b604051808215151515815260200191505060405180910390f35b61047b611e50565b6040518082815260200191505060405180910390f35b610499611e83565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6104e3611ea9565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61052d611ecf565b6040518082815260200191505060405180910390f35b61054b611fb0565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6105cf600480360360208110156105a357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611fd6565b005b6105fd600480360360208110156105e757600080fd5b810190808035906020019092919050505061205c565b005b603a5481565b61060d612ea4565b603460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663fb6d3a896040518163ffffffff1660e01b815260040160806040518083038186803b15801561067557600080fd5b505afa158015610689573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525060808110156106ae57600080fd5b8101908091905050905060008090505b60048110156107955761071b6106d2612163565b308584600481106106df57fe5b60200201518585600481106106f057fe5b602002015173ffffffffffffffffffffffffffffffffffffffff1661216b909392919063ffffffff16565b610788603460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1684836004811061074d57fe5b602002015184846004811061075e57fe5b602002015173ffffffffffffffffffffffffffffffffffffffff166122719092919063ffffffff16565b80806001019150506106be565b50603460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663029b2f348360006040518363ffffffff1660e01b81526004018083600460200280838360005b838110156108115780820151818401526020810190506107f6565b5050505090500182815260200192505050600060405180830381600087803b15801561083c57600080fd5b505af1158015610850573d6000803e3d6000fd5b505050506000603660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b1580156108f557600080fd5b505afa158015610909573d6000803e3d6000fd5b505050506040513d602081101561091f57600080fd5b810190808051906020019092919050505090506109a1603760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1682603660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166122719092919063ffffffff16565b603760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663b6b55f25826040518263ffffffff1660e01b815260040180828152602001915050600060405180830381600087803b158015610a1657600080fd5b505af1158015610a2a573d6000803e3d6000fd5b50505050610a36612491565b6000603960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b158015610ad757600080fd5b505afa158015610aeb573d6000803e3d6000fd5b505050506040513d6020811015610b0157600080fd5b81019080805190602001909291905050509050610b68610b1f612163565b82603960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1661256e9092919063ffffffff16565b50505050565b603560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b610b9c612ec6565b610ba4612ea4565b603460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663fb6d3a896040518163ffffffff1660e01b815260040160806040518083038186803b158015610c0c57600080fd5b505afa158015610c20573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506080811015610c4557600080fd5b810190809190505090506000610c59611e50565b90506000603660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166318160ddd6040518163ffffffff1660e01b815260040160206040518083038186803b158015610cc557600080fd5b505afa158015610cd9573d6000803e3d6000fd5b505050506040513d6020811015610cef57600080fd5b8101908080519060200190929190505050905060008111610d78576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260198152602001807f4e6f204375727665204c5020746f6b656e73206d696e7465640000000000000081525060200191505060405180910390fd5b60008090505b6004811015610ff8576000603560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663065a80d8836040518263ffffffff1660e01b81526004018082600f0b600f0b815260200191505060206040518083038186803b158015610e0257600080fd5b505afa158015610e16573d6000803e3d6000fd5b505050506040513d6020811015610e2c57600080fd5b810190808051906020019092919050505090506000603560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323746eb8846040518263ffffffff1660e01b81526004018082600f0b600f0b815260200191505060206040518083038186803b158015610eba57600080fd5b505afa158015610ece573d6000803e3d6000fd5b505050506040513d6020811015610ee457600080fd5b810190808051906020019092919050505090506000610f1e85610f10888661263f90919063ffffffff16565b6126c590919063ffffffff16565b905060008273ffffffffffffffffffffffffffffffffffffffff166377c7b8fc6040518163ffffffff1660e01b815260040160206040518083038186803b158015610f6857600080fd5b505afa158015610f7c573d6000803e3d6000fd5b505050506040513d6020811015610f9257600080fd5b81019080805190602001909291905050509050610fd2670de0b6b3a7640000610fc4848461263f90919063ffffffff16565b6126c590919063ffffffff16565b898660048110610fde57fe5b602002018181525050505050508080600101915050610d7e565b5050505090565b611007612ea4565b603460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663fb6d3a896040518163ffffffff1660e01b815260040160806040518083038186803b15801561106f57600080fd5b505afa158015611083573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525060808110156110a857600080fd5b81019080919050509050600080600090505b600481101561110e576110ff6110f08483600481106110d557fe5b60200201518684600481106110e657fe5b602002015161270f565b8361281290919063ffffffff16565b915080806001019150506110ba565b60006111198361289a565b90506000611125611ecf565b905060008111156111465761114381836128e190919063ffffffff16565b91505b603760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16632e1a7d4d836040518263ffffffff1660e01b815260040180828152602001915050600060405180830381600087803b1580156111bb57600080fd5b505af11580156111cf573d6000803e3d6000fd5b50505050611242603460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1683603660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166122719092919063ffffffff16565b603460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166318a7bd7687846040518363ffffffff1660e01b81526004018083600460200280838360005b838110156112bc5780820151818401526020810190506112a1565b5050505090500182815260200192505050600060405180830381600087803b1580156112e757600080fd5b505af11580156112fb573d6000803e3d6000fd5b50505050600092505b600483101561145457600085846004811061131b57fe5b6020020151905060008173ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b1580156113a157600080fd5b505afa1580156113b5573d6000803e3d6000fd5b505050506040513d60208110156113cb57600080fd5b8101908080519060200190929190505050905060008886600481106113ec57fe5b602002015182111561140e5788866004811061140457fe5b6020020151611410565b815b905061144461141d612163565b828573ffffffffffffffffffffffffffffffffffffffff1661256e9092919063ffffffff16565b5050508280600101935050611304565b505050505050565b6000603760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b1580156114fd57600080fd5b505afa158015611511573d6000803e3d6000fd5b505050506040513d602081101561152757600080fd5b8101908080519060200190929190505050905090565b6000611547612ea4565b603460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663fb6d3a896040518163ffffffff1660e01b815260040160806040518083038186803b1580156115af57600080fd5b505afa1580156115c3573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525060808110156115e857600080fd5b810190809190505090506115fa612ec6565b611602610b94565b9050600080600090505b60048110156116605761165161164285836004811061162757fe5b602002015185846004811061163857fe5b602002015161270f565b8361281290919063ffffffff16565b9150808060010191505061160c565b5080935050505090565b611672611df1565b6116e4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff16603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a36000603360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b6117ad611df1565b61181f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156118a5576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526022815260200180612ee96022913960400191505060405180910390fd5b82603460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550603460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16637165485d6040518163ffffffff1660e01b815260040160206040518083038186803b15801561194e57600080fd5b505afa158015611962573d6000803e3d6000fd5b505050506040513d602081101561197857600080fd5b8101908080519060200190929190505050603560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555081603760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550603460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663fc0c546a6040518163ffffffff1660e01b815260040160206040518083038186803b158015611a7257600080fd5b505afa158015611a86573d6000803e3d6000fd5b505050506040513d6020811015611a9c57600080fd5b8101908080519060200190929190505050603660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550603660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16603760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166382c630666040518163ffffffff1660e01b815260040160206040518083038186803b158015611b8e57600080fd5b505afa158015611ba2573d6000803e3d6000fd5b505050506040513d6020811015611bb857600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff1614611c52576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601e8152602001807f43757276654669204c5020746f6b656e7320646f206e6f74206d61746368000081525060200191505060405180910390fd5b80603860006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550603760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166376d8b1176040518163ffffffff1660e01b815260040160206040518083038186803b158015611cfb57600080fd5b505afa158015611d0f573d6000803e3d6000fd5b505050506040513d6020811015611d2557600080fd5b8101908080519060200190929190505050603960006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505050565b603860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b603960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16611e34612163565b73ffffffffffffffffffffffffffffffffffffffff1614905090565b600080611e5b61145c565b90506000611e67611ecf565b9050611e7c828261281290919063ffffffff16565b9250505090565b603660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b603460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000603660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b158015611f7057600080fd5b505afa158015611f84573d6000803e3d6000fd5b505050506040513d6020811015611f9a57600080fd5b8101908080519060200190929190505050905090565b603760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b611fde611df1565b612050576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b6120598161292b565b50565b600060019054906101000a900460ff168061207b575061207a612a71565b5b8061209257506000809054906101000a900460ff16155b6120e7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e815260200180612f52602e913960400191505060405180910390fd5b60008060019054906101000a900460ff161590508015612137576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b81603a81905550801561215f5760008060016101000a81548160ff0219169083151502179055505b5050565b600033905090565b61226b848573ffffffffffffffffffffffffffffffffffffffff166323b872dd905060e01b858585604051602401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050612a88565b50505050565b600081148061236b575060008373ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e30856040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019250505060206040518083038186803b15801561232e57600080fd5b505afa158015612342573d6000803e3d6000fd5b505050506040513d602081101561235857600080fd5b8101908080519060200190929190505050145b6123c0576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526036815260200180612faa6036913960400191505060405180910390fd5b61248c838473ffffffffffffffffffffffffffffffffffffffff1663095ea7b3905060e01b8484604051602401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050612a88565b505050565b603860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16636a627842603760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050600060405180830381600087803b15801561255457600080fd5b505af1158015612568573d6000803e3d6000fd5b50505050565b61263a838473ffffffffffffffffffffffffffffffffffffffff1663a9059cbb905060e01b8484604051602401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050612a88565b505050565b60008083141561265257600090506126bf565b600082840290508284828161266357fe5b04146126ba576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526021815260200180612f316021913960400191505060405180910390fd5b809150505b92915050565b600061270783836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f000000000000815250612cd3565b905092915050565b6000808373ffffffffffffffffffffffffffffffffffffffff1663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b15801561275857600080fd5b505afa15801561276c573d6000803e3d6000fd5b505050506040513d602081101561278257600080fd5b8101908080519060200190929190505050905060128160ff1614156127aa578291505061280c565b60128160ff1611156127da576127d26012820360ff16600a0a846126c590919063ffffffff16565b91505061280c565b60128160ff16101561280a576128028160120360ff16600a0a8461263f90919063ffffffff16565b91505061280c565b505b92915050565b600080828401905083811015612890576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b6000806128a561153d565b905060006128b1611e50565b90506128d8826128ca868461263f90919063ffffffff16565b6126c590919063ffffffff16565b92505050919050565b600061292383836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250612d99565b905092915050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156129b1576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526026815260200180612f0b6026913960400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff16603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a380603360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000803090506000813b9050600081149250505090565b612aa78273ffffffffffffffffffffffffffffffffffffffff16612e59565b612b19576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f5361666545524332303a2063616c6c20746f206e6f6e2d636f6e74726163740081525060200191505060405180910390fd5b600060608373ffffffffffffffffffffffffffffffffffffffff16836040518082805190602001908083835b60208310612b685780518252602082019150602081019050602083039250612b45565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d8060008114612bca576040519150601f19603f3d011682016040523d82523d6000602084013e612bcf565b606091505b509150915081612c47576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c656481525060200191505060405180910390fd5b600081511115612ccd57808060200190516020811015612c6657600080fd5b8101908080519060200190929190505050612ccc576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602a815260200180612f80602a913960400191505060405180910390fd5b5b50505050565b60008083118290612d7f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b83811015612d44578082015181840152602081019050612d29565b50505050905090810190601f168015612d715780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b506000838581612d8b57fe5b049050809150509392505050565b6000838311158290612e46576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b83811015612e0b578082015181840152602081019050612df0565b50505050905090810190601f168015612e385780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5060008385039050809150509392505050565b60008060007fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a47060001b9050833f9150808214158015612e9b57506000801b8214155b92505050919050565b6040518060800160405280600490602082028038833980820191505090505090565b604051806080016040528060049060208202803883398082019150509050509056fe496e636f7272656374206465706f73697420636f6e747261637420616464726573734f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77436f6e747261637420696e7374616e63652068617320616c7265616479206265656e20696e697469616c697a65645361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565645361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f20746f206e6f6e2d7a65726f20616c6c6f77616e6365a265627a7a7231582012f905a18eea472128bb3c4baa48cab580ae113d3a2388f02b98b27ca93d23ae64736f6c634300050c0032",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x12C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8141D266 GT PUSH2 0xAD JUMPI DUP1 PUSH4 0xBE873F50 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xBE873F50 EQ PUSH2 0x4DB JUMPI DUP1 PUSH4 0xDFDA714A EQ PUSH2 0x525 JUMPI DUP1 PUSH4 0xE011262A EQ PUSH2 0x543 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x58D JUMPI DUP1 PUSH4 0xFE4B84DF EQ PUSH2 0x5D1 JUMPI PUSH2 0x12C JUMP JUMPDEST DUP1 PUSH4 0x8141D266 EQ PUSH2 0x3BD JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x407 JUMPI DUP1 PUSH4 0x8F32D59B EQ PUSH2 0x451 JUMPI DUP1 PUSH4 0x97AA80D5 EQ PUSH2 0x473 JUMPI DUP1 PUSH4 0xA3477C36 EQ PUSH2 0x491 JUMPI PUSH2 0x12C JUMP JUMPDEST DUP1 PUSH4 0x44F9C395 GT PUSH2 0xF4 JUMPI DUP1 PUSH4 0x44F9C395 EQ PUSH2 0x2A9 JUMPI DUP1 PUSH4 0x628CB95E EQ PUSH2 0x2C7 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x2E5 JUMPI DUP1 PUSH4 0x77B8B1C7 EQ PUSH2 0x2EF JUMPI DUP1 PUSH4 0x7C241146 EQ PUSH2 0x373 JUMPI PUSH2 0x12C JUMP JUMPDEST DUP1 PUSH4 0xC55699C EQ PUSH2 0x131 JUMPI DUP1 PUSH4 0x14A19AEC EQ PUSH2 0x14F JUMPI DUP1 PUSH4 0x1C600416 EQ PUSH2 0x1B4 JUMPI DUP1 PUSH4 0x208E509F EQ PUSH2 0x1FE JUMPI DUP1 PUSH4 0x38EDA370 EQ PUSH2 0x244 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x139 PUSH2 0x5FF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B2 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x80 DUP2 LT ISZERO PUSH2 0x165 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 PUSH1 0x80 ADD SWAP1 PUSH1 0x4 DUP1 PUSH1 0x20 MUL PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP3 PUSH1 0x4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP SWAP2 SWAP3 SWAP2 SWAP3 SWAP1 POP POP POP PUSH2 0x605 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1BC PUSH2 0xB6E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x206 PUSH2 0xB94 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH1 0x4 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x231 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x216 JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A7 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x80 DUP2 LT ISZERO PUSH2 0x25A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 PUSH1 0x80 ADD SWAP1 PUSH1 0x4 DUP1 PUSH1 0x20 MUL PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP3 PUSH1 0x4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP SWAP2 SWAP3 SWAP2 SWAP3 SWAP1 POP POP POP PUSH2 0xFFF JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2B1 PUSH2 0x145C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2CF PUSH2 0x153D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2ED PUSH2 0x166A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x371 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x305 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x17A5 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x37B PUSH2 0x1D7B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3C5 PUSH2 0x1DA1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x40F PUSH2 0x1DC7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x459 PUSH2 0x1DF1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x47B PUSH2 0x1E50 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x499 PUSH2 0x1E83 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4E3 PUSH2 0x1EA9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x52D PUSH2 0x1ECF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x54B PUSH2 0x1FB0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5CF PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x5A3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1FD6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x5FD PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x5E7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x205C JUMP JUMPDEST STOP JUMPDEST PUSH1 0x3A SLOAD DUP2 JUMP JUMPDEST PUSH2 0x60D PUSH2 0x2EA4 JUMP JUMPDEST PUSH1 0x34 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xFB6D3A89 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x80 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x675 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x689 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP PUSH1 0x80 DUP2 LT ISZERO PUSH2 0x6AE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 SWAP2 SWAP1 POP POP SWAP1 POP PUSH1 0x0 DUP1 SWAP1 POP JUMPDEST PUSH1 0x4 DUP2 LT ISZERO PUSH2 0x795 JUMPI PUSH2 0x71B PUSH2 0x6D2 PUSH2 0x2163 JUMP JUMPDEST ADDRESS DUP6 DUP5 PUSH1 0x4 DUP2 LT PUSH2 0x6DF JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MLOAD DUP6 DUP6 PUSH1 0x4 DUP2 LT PUSH2 0x6F0 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x216B SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x788 PUSH1 0x34 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 DUP4 PUSH1 0x4 DUP2 LT PUSH2 0x74D JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MLOAD DUP5 DUP5 PUSH1 0x4 DUP2 LT PUSH2 0x75E JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2271 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x6BE JUMP JUMPDEST POP PUSH1 0x34 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x29B2F34 DUP4 PUSH1 0x0 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP4 PUSH1 0x4 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x811 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x7F6 JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x83C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x850 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x0 PUSH1 0x36 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x8F5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x909 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x91F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP SWAP1 POP PUSH2 0x9A1 PUSH1 0x37 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x36 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2271 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x37 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xB6B55F25 DUP3 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xA16 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xA2A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH2 0xA36 PUSH2 0x2491 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x39 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xAD7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xAEB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xB01 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP SWAP1 POP PUSH2 0xB68 PUSH2 0xB1F PUSH2 0x2163 JUMP JUMPDEST DUP3 PUSH1 0x39 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x256E SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x35 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0xB9C PUSH2 0x2EC6 JUMP JUMPDEST PUSH2 0xBA4 PUSH2 0x2EA4 JUMP JUMPDEST PUSH1 0x34 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xFB6D3A89 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x80 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xC0C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xC20 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP PUSH1 0x80 DUP2 LT ISZERO PUSH2 0xC45 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 SWAP2 SWAP1 POP POP SWAP1 POP PUSH1 0x0 PUSH2 0xC59 PUSH2 0x1E50 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x36 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x18160DDD PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xCC5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xCD9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xCEF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP SWAP1 POP PUSH1 0x0 DUP2 GT PUSH2 0xD78 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x19 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4E6F204375727665204C5020746F6B656E73206D696E74656400000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SWAP1 POP JUMPDEST PUSH1 0x4 DUP2 LT ISZERO PUSH2 0xFF8 JUMPI PUSH1 0x0 PUSH1 0x35 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x65A80D8 DUP4 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH1 0xF SIGNEXTEND PUSH1 0xF SIGNEXTEND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xE02 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xE16 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xE2C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP SWAP1 POP PUSH1 0x0 PUSH1 0x35 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23746EB8 DUP5 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH1 0xF SIGNEXTEND PUSH1 0xF SIGNEXTEND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xEBA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xECE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xEE4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP SWAP1 POP PUSH1 0x0 PUSH2 0xF1E DUP6 PUSH2 0xF10 DUP9 DUP7 PUSH2 0x263F SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x26C5 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x77C7B8FC PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xF68 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xF7C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xF92 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP SWAP1 POP PUSH2 0xFD2 PUSH8 0xDE0B6B3A7640000 PUSH2 0xFC4 DUP5 DUP5 PUSH2 0x263F SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x26C5 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP10 DUP7 PUSH1 0x4 DUP2 LT PUSH2 0xFDE JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD DUP2 DUP2 MSTORE POP POP POP POP POP POP DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0xD7E JUMP JUMPDEST POP POP POP POP SWAP1 JUMP JUMPDEST PUSH2 0x1007 PUSH2 0x2EA4 JUMP JUMPDEST PUSH1 0x34 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xFB6D3A89 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x80 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x106F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1083 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP PUSH1 0x80 DUP2 LT ISZERO PUSH2 0x10A8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 SWAP2 SWAP1 POP POP SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP JUMPDEST PUSH1 0x4 DUP2 LT ISZERO PUSH2 0x110E JUMPI PUSH2 0x10FF PUSH2 0x10F0 DUP5 DUP4 PUSH1 0x4 DUP2 LT PUSH2 0x10D5 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MLOAD DUP7 DUP5 PUSH1 0x4 DUP2 LT PUSH2 0x10E6 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MLOAD PUSH2 0x270F JUMP JUMPDEST DUP4 PUSH2 0x2812 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP2 POP DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x10BA JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1119 DUP4 PUSH2 0x289A JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1125 PUSH2 0x1ECF JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 GT ISZERO PUSH2 0x1146 JUMPI PUSH2 0x1143 DUP2 DUP4 PUSH2 0x28E1 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP2 POP JUMPDEST PUSH1 0x37 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x2E1A7D4D DUP4 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x11BB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x11CF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH2 0x1242 PUSH1 0x34 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH1 0x36 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2271 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x34 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x18A7BD76 DUP8 DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP4 PUSH1 0x4 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x12BC JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x12A1 JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x12E7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x12FB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x0 SWAP3 POP JUMPDEST PUSH1 0x4 DUP4 LT ISZERO PUSH2 0x1454 JUMPI PUSH1 0x0 DUP6 DUP5 PUSH1 0x4 DUP2 LT PUSH2 0x131B JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MLOAD SWAP1 POP PUSH1 0x0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x13A1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x13B5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x13CB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP SWAP1 POP PUSH1 0x0 DUP9 DUP7 PUSH1 0x4 DUP2 LT PUSH2 0x13EC JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MLOAD DUP3 GT ISZERO PUSH2 0x140E JUMPI DUP9 DUP7 PUSH1 0x4 DUP2 LT PUSH2 0x1404 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MLOAD PUSH2 0x1410 JUMP JUMPDEST DUP2 JUMPDEST SWAP1 POP PUSH2 0x1444 PUSH2 0x141D PUSH2 0x2163 JUMP JUMPDEST DUP3 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x256E SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP POP POP DUP3 DUP1 PUSH1 0x1 ADD SWAP4 POP POP PUSH2 0x1304 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x37 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x14FD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1511 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1527 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1547 PUSH2 0x2EA4 JUMP JUMPDEST PUSH1 0x34 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xFB6D3A89 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x80 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x15AF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x15C3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP PUSH1 0x80 DUP2 LT ISZERO PUSH2 0x15E8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 SWAP2 SWAP1 POP POP SWAP1 POP PUSH2 0x15FA PUSH2 0x2EC6 JUMP JUMPDEST PUSH2 0x1602 PUSH2 0xB94 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP JUMPDEST PUSH1 0x4 DUP2 LT ISZERO PUSH2 0x1660 JUMPI PUSH2 0x1651 PUSH2 0x1642 DUP6 DUP4 PUSH1 0x4 DUP2 LT PUSH2 0x1627 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MLOAD DUP6 DUP5 PUSH1 0x4 DUP2 LT PUSH2 0x1638 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MLOAD PUSH2 0x270F JUMP JUMPDEST DUP4 PUSH2 0x2812 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP2 POP DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x160C JUMP JUMPDEST POP DUP1 SWAP4 POP POP POP POP SWAP1 JUMP JUMPDEST PUSH2 0x1672 PUSH2 0x1DF1 JUMP JUMPDEST PUSH2 0x16E4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x33 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x0 PUSH1 0x33 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x17AD PUSH2 0x1DF1 JUMP JUMPDEST PUSH2 0x181F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x18A5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2EE9 PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 PUSH1 0x34 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x34 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x7165485D PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x194E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1962 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1978 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH1 0x35 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH1 0x37 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x34 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xFC0C546A PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1A72 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1A86 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1A9C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH1 0x36 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x36 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x37 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x82C63066 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1B8E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1BA2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1BB8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1C52 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x43757276654669204C5020746F6B656E7320646F206E6F74206D617463680000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x38 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x37 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x76D8B117 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1CFB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1D0F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1D25 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH1 0x39 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x38 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x39 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x33 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x33 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1E34 PUSH2 0x2163 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1E5B PUSH2 0x145C JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1E67 PUSH2 0x1ECF JUMP JUMPDEST SWAP1 POP PUSH2 0x1E7C DUP3 DUP3 PUSH2 0x2812 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP3 POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x36 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x34 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x36 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1F70 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1F84 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1F9A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x37 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x1FDE PUSH2 0x1DF1 JUMP JUMPDEST PUSH2 0x2050 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2059 DUP2 PUSH2 0x292B JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP1 PUSH2 0x207B JUMPI POP PUSH2 0x207A PUSH2 0x2A71 JUMP JUMPDEST JUMPDEST DUP1 PUSH2 0x2092 JUMPI POP PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO JUMPDEST PUSH2 0x20E7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2E DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2F52 PUSH1 0x2E SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO SWAP1 POP DUP1 ISZERO PUSH2 0x2137 JUMPI PUSH1 0x1 PUSH1 0x0 PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST DUP2 PUSH1 0x3A DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x215F JUMPI PUSH1 0x0 DUP1 PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x226B DUP5 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD SWAP1 POP PUSH1 0xE0 SHL DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP4 POP POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x2A88 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 EQ DUP1 PUSH2 0x236B JUMPI POP PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xDD62ED3E ADDRESS DUP6 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x232E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2342 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2358 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP EQ JUMPDEST PUSH2 0x23C0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x36 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2FAA PUSH1 0x36 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x248C DUP4 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x95EA7B3 SWAP1 POP PUSH1 0xE0 SHL DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x24 ADD DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x2A88 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x38 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x6A627842 PUSH1 0x37 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2554 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2568 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x263A DUP4 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB SWAP1 POP PUSH1 0xE0 SHL DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x24 ADD DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x2A88 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 EQ ISZERO PUSH2 0x2652 JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0x26BF JUMP JUMPDEST PUSH1 0x0 DUP3 DUP5 MUL SWAP1 POP DUP3 DUP5 DUP3 DUP2 PUSH2 0x2663 JUMPI INVALID JUMPDEST DIV EQ PUSH2 0x26BA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2F31 PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2707 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1A DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A206469766973696F6E206279207A65726F000000000000 DUP2 MSTORE POP PUSH2 0x2CD3 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x313CE567 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2758 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x276C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2782 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP SWAP1 POP PUSH1 0x12 DUP2 PUSH1 0xFF AND EQ ISZERO PUSH2 0x27AA JUMPI DUP3 SWAP2 POP POP PUSH2 0x280C JUMP JUMPDEST PUSH1 0x12 DUP2 PUSH1 0xFF AND GT ISZERO PUSH2 0x27DA JUMPI PUSH2 0x27D2 PUSH1 0x12 DUP3 SUB PUSH1 0xFF AND PUSH1 0xA EXP DUP5 PUSH2 0x26C5 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP2 POP POP PUSH2 0x280C JUMP JUMPDEST PUSH1 0x12 DUP2 PUSH1 0xFF AND LT ISZERO PUSH2 0x280A JUMPI PUSH2 0x2802 DUP2 PUSH1 0x12 SUB PUSH1 0xFF AND PUSH1 0xA EXP DUP5 PUSH2 0x263F SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP2 POP POP PUSH2 0x280C JUMP JUMPDEST POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 ADD SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x2890 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1B DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x28A5 PUSH2 0x153D JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x28B1 PUSH2 0x1E50 JUMP JUMPDEST SWAP1 POP PUSH2 0x28D8 DUP3 PUSH2 0x28CA DUP7 DUP5 PUSH2 0x263F SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x26C5 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2923 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 DUP2 MSTORE POP PUSH2 0x2D99 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x29B1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2F0B PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x33 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 PUSH1 0x33 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 ADDRESS SWAP1 POP PUSH1 0x0 DUP2 EXTCODESIZE SWAP1 POP PUSH1 0x0 DUP2 EQ SWAP3 POP POP POP SWAP1 JUMP JUMPDEST PUSH2 0x2AA7 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2E59 JUMP JUMPDEST PUSH2 0x2B19 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1F DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x5361666545524332303A2063616C6C20746F206E6F6E2D636F6E747261637400 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0x2B68 JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH1 0x20 DUP4 SUB SWAP3 POP PUSH2 0x2B45 JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x2BCA JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x2BCF JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 PUSH2 0x2C47 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 MLOAD GT ISZERO PUSH2 0x2CCD JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2C66 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x2CCC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2A DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2F80 PUSH1 0x2A SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 GT DUP3 SWAP1 PUSH2 0x2D7F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2D44 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2D29 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x2D71 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 DUP4 DUP6 DUP2 PUSH2 0x2D8B JUMPI INVALID JUMPDEST DIV SWAP1 POP DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 DUP4 GT ISZERO DUP3 SWAP1 PUSH2 0x2E46 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2E0B JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2DF0 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x2E38 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 DUP4 DUP6 SUB SWAP1 POP DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH32 0xC5D2460186F7233C927E7DB2DCC703C0E500B653CA82273B7BFAD8045D85A470 PUSH1 0x0 SHL SWAP1 POP DUP4 EXTCODEHASH SWAP2 POP DUP1 DUP3 EQ ISZERO DUP1 ISZERO PUSH2 0x2E9B JUMPI POP PUSH1 0x0 DUP1 SHL DUP3 EQ ISZERO JUMPDEST SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 SWAP1 PUSH1 0x20 DUP3 MUL DUP1 CODESIZE DUP4 CODECOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 SWAP1 PUSH1 0x20 DUP3 MUL DUP1 CODESIZE DUP4 CODECOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP POP SWAP1 JUMP INVALID 0x49 PUSH15 0x636F7272656374206465706F736974 KECCAK256 PUSH4 0x6F6E7472 PUSH2 0x6374 KECCAK256 PUSH2 0x6464 PUSH19 0x6573734F776E61626C653A206E6577206F776E PUSH6 0x722069732074 PUSH9 0x65207A65726F206164 PUSH5 0x7265737353 PUSH2 0x6665 0x4d PUSH2 0x7468 GASPRICE KECCAK256 PUSH14 0x756C7469706C69636174696F6E20 PUSH16 0x766572666C6F77436F6E747261637420 PUSH10 0x6E7374616E6365206861 PUSH20 0x20616C7265616479206265656E20696E69746961 PUSH13 0x697A6564536166654552433230 GASPRICE KECCAK256 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS KECCAK256 PUSH16 0x7065726174696F6E20646964206E6F74 KECCAK256 PUSH20 0x7563636565645361666545524332303A20617070 PUSH19 0x6F76652066726F6D206E6F6E2D7A65726F2074 PUSH16 0x206E6F6E2D7A65726F20616C6C6F7761 PUSH15 0x6365A265627A7A7231582012F905A1 DUP15 0xea SELFBALANCE 0x21 0x28 0xbb EXTCODECOPY 0x4b 0xaa 0x48 0xca 0xb5 DUP1 0xae GT RETURNDATASIZE GASPRICE 0x23 DUP9 CREATE 0x2b SWAP9 0xb2 PUSH29 0xA93D23AE64736F6C634300050C00320000000000000000000000000000 ",
							"sourceMap": "1044:7861:0:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1044:7861:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1388:16;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2612:1130;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;2612:1130:0;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;2612:1130:0;;;;;;;;;;;;;;:::i;:::-;;1208:27;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;6874:1043;;;:::i;:::-;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;6874:1043:0;;;;;;;;;;;;;;;;3941:1452;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;3941:1452:0;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;3941:1452:0;;;;;;;;;;;;;;:::i;:::-;;5482:139;;;:::i;:::-;;;;;;;;;;;;;;;;;;;8027:392;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1684:137:8;;;:::i;:::-;;1737:677:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1737:677:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1313:32;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1351:31;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;899:77:8;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1250:92;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;5965:202:0;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1241:30;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1172;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;5732:133;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1277:30;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1970:107:8;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1970:107:8;;;;;;;;;;;;;;;;;;;:::i;:::-;;1415:74:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1415:74:0;;;;;;;;;;;;;;;;;:::i;:::-;;1388:16;;;;:::o;2612:1130::-;2683:29;;:::i;:::-;2733:15;;;;;;;;;;;2715:51;;;:53;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2715:53:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2715:53:0;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;13:3;8;5:12;2:2;;;30:1;27;20:12;2:2;2715:53:0;;;;;;;;2683:85;;2784:9;2796:1;2784:13;;2779:233;2803:18;2799:1;:22;2779:233;;;2842:81;2882:12;:10;:12::i;:::-;2904:4;2911:8;2920:1;2911:11;;;;;;;;;;;2849;2861:1;2849:14;;;;;;;;;;;2842:39;;;;:81;;;;;;:::i;:::-;2937:64;2972:15;;;;;;;;;;;2989:8;2998:1;2989:11;;;;;;;;;;;2944;2956:1;2944:14;;;;;;;;;;;2937:34;;;;:64;;;;;:::i;:::-;2823:3;;;;;;;2779:233;;;;3106:15;;;;;;;;;;;3088:48;;;3137:8;3147:1;3088:61;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;3088:61:0;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3088:61:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3088:61:0;;;;3262:22;3294:15;;;;;;;;;;;3287:33;;;3329:4;3287:48;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3287:48:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3287:48:0;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3287:48:0;;;;;;;;;;;;;;;;3262:73;;3346:68;3382:15;;;;;;;;;;;3399:14;3353:15;;;;;;;;;;;3346:35;;;;:68;;;;;:::i;:::-;3439:15;;;;;;;;;;;3424:39;;;3464:14;3424:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3424:55:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3424:55:0;;;;3568:15;:13;:15::i;:::-;3593:17;3620:16;;;;;;;;;;;3613:34;;;3656:4;3613:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3613:49:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3613:49:0;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3613:49:0;;;;;;;;;;;;;;;;3593:69;;3672:62;3710:12;:10;:12::i;:::-;3724:9;3679:16;;;;;;;;;;;3672:37;;;;:62;;;;;:::i;:::-;2612:1130;;;;:::o;1208:27::-;;;;;;;;;;;;;:::o;6874:1043::-;6918:26;;:::i;:::-;6956:29;;:::i;:::-;7006:15;;;;;;;;;;;6988:51;;;:53;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6988:53:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;6988:53:0;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;13:3;8;5:12;2:2;;;30:1;27;20:12;2:2;6988:53:0;;;;;;;;6956:85;;7052:22;7077:21;:19;:21::i;:::-;7052:46;;7108:26;7144:15;;;;;;;;;;;7137:35;;;:37;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7137:37:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;7137:37:0;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;7137:37:0;;;;;;;;;;;;;;;;7108:66;;7214:1;7193:18;:22;7185:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7261:9;7273:1;7261:13;;7256:655;7280:18;7276:1;:22;7256:655;;;7354:23;7395:12;;;;;;;;;;;7380:37;;;7425:1;7380:48;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7380:48:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;7380:48:0;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;7380:48:0;;;;;;;;;;;;;;;;7354:74;;7442:13;7473:12;;;;;;;;;;;7458:34;;;7500:1;7458:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7458:45:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;7458:45:0;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;7458:45:0;;;;;;;;;;;;;;;;7442:61;;7568:15;7586:59;7626:18;7586:35;7606:14;7586:15;:19;;:35;;;;:::i;:::-;:39;;:59;;;;:::i;:::-;7568:77;;7712:14;7737:5;7729:35;;;:37;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7729:37:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;7729:37:0;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;7729:37:0;;;;;;;;;;;;;;;;7712:54;;7871:29;7895:4;7871:19;7882:7;7871:6;:10;;:19;;;;:::i;:::-;:23;;:29;;;;:::i;:::-;7857:8;7866:1;7857:11;;;;;;;;;;:43;;;;;7256:655;;;;7300:3;;;;;;;7256:655;;;;6874:1043;;;;:::o;3941:1452::-;4013:29;;:::i;:::-;4063:15;;;;;;;;;;;4045:51;;;:53;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4045:53:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4045:53:0;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;13:3;8;5:12;2:2;;;30:1;27;20:12;2:2;4045:53:0;;;;;;;;4013:85;;4175:17;4202:9;4230:1;4226:5;;4221:131;4237:18;4233:1;:22;4221:131;;;4288:53;4302:38;4312:11;4324:1;4312:14;;;;;;;;;;;4328:8;4337:1;4328:11;;;;;;;;;;;4302:9;:38::i;:::-;4288:9;:13;;:53;;;;:::i;:::-;4276:65;;4257:3;;;;;;;4221:131;;;4362:22;4387:26;4403:9;4387:15;:26::i;:::-;4362:51;;4477:17;4497:22;:20;:22::i;:::-;4477:42;;4545:1;4533:9;:13;4529:90;;;4579:29;4598:9;4579:14;:18;;:29;;;;:::i;:::-;4562:46;;4529:90;4698:15;;;;;;;;;;;4683:40;;;4724:14;4683:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4683:56:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4683:56:0;;;;4812:68;4848:15;;;;;;;;;;;4865:14;4819:15;;;;;;;;;;;4812:35;;;;:68;;;;;:::i;:::-;4908:15;;;;;;;;;;;4890:61;;;4952:8;4962:14;4890:87;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;4890:87:0;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4890:87:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4890:87:0;;;;5058:1;5054:5;;5049:338;5066:18;5061:1;:23;5049:338;;;5104:17;5131:11;5143:1;5131:14;;;;;;;;;;;5104:42;;5160:15;5178:10;:20;;;5207:4;5178:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5178:35:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;5178:35:0;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5178:35:0;;;;;;;;;;;;;;;;5160:53;;5227:14;5256:8;5265:1;5256:11;;;;;;;;;;;5245:7;:22;;5244:48;;5281:8;5290:1;5281:11;;;;;;;;;;;5244:48;;;5271:7;5244:48;5227:65;;5331:45;5355:12;:10;:12::i;:::-;5369:6;5331:10;:23;;;;:45;;;;;:::i;:::-;5049:338;;;5086:3;;;;;;;5049:338;;;3941:1452;;;;;;:::o;5482:139::-;5532:7;5573:15;;;;;;;;;;;5558:41;;;5608:4;5558:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5558:56:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;5558:56:0;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5558:56:0;;;;;;;;;;;;;;;;5551:63;;5482:139;:::o;8027:392::-;8076:7;8095:29;;:::i;:::-;8145:15;;;;;;;;;;;8127:51;;;:53;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;8127:53:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;8127:53:0;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;13:3;8;5:12;2:2;;;30:1;27;20:12;2:2;8127:53:0;;;;;;;;8095:85;;8190:26;;:::i;:::-;8219:14;:12;:14::i;:::-;8190:43;;8244:12;8271:9;8281:1;8271:11;;8266:126;8288:18;8284:1;:22;8266:126;;;8333:48;8342:38;8352:11;8364:1;8352:14;;;;;;;;;;;8368:8;8377:1;8368:11;;;;;;;;;;;8342:9;:38::i;:::-;8333:4;:8;;:48;;;;:::i;:::-;8326:55;;8308:3;;;;;;;8266:126;;;;8408:4;8401:11;;;;;8027:392;:::o;1684:137:8:-;1103:9;:7;:9::i;:::-;1095:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1782:1;1745:40;;1766:6;;;;;;;;;;;1745:40;;;;;;;;;;;;1812:1;1795:6;;:19;;;;;;;;;;;;;;;;;;1684:137::o;1737:677:0:-;1103:9:8;:7;:9::i;:::-;1095:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1892:1:0;1864:30;;:16;:30;;;;1856:77;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1962:16;1944:15;;:34;;;;;;;;;;;;;;;;;;2021:15;;;;;;;;;;;2003:40;;;:42;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2003:42:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2003:42:0;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2003:42:0;;;;;;;;;;;;;;;;1988:12;;:57;;;;;;;;;;;;;;;;;;2073:14;2055:15;;:32;;;;;;;;;;;;;;;;;;2133:15;;;;;;;;;;;2115:40;;;:42;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2115:42:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2115:42:0;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2115:42:0;;;;;;;;;;;;;;;;2097:15;;:60;;;;;;;;;;;;;;;;;;2230:15;;;;;;;;;;;2176:70;;2191:15;;;;;;;;;;;2176:40;;;:42;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2176:42:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2176:42:0;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2176:42:0;;;;;;;;;;;;;;;;:70;;;2168:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2320:15;2300:17;;:35;;;;;;;;;;;;;;;;;;2379:15;;;;;;;;;;;2364:41;;;:43;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2364:43:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2364:43:0;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2364:43:0;;;;;;;;;;;;;;;;2345:16;;:62;;;;;;;;;;;;;;;;;;1737:677;;;:::o;1313:32::-;;;;;;;;;;;;;:::o;1351:31::-;;;;;;;;;;;;;:::o;899:77:8:-;937:7;963:6;;;;;;;;;;;956:13;;899:77;:::o;1250:92::-;1290:4;1329:6;;;;;;;;;;;1313:22;;:12;:10;:12::i;:::-;:22;;;1306:29;;1250:92;:::o;5965:202:0:-;6016:7;6035:14;6052:20;:18;:20::i;:::-;6035:37;;6082:16;6101:22;:20;:22::i;:::-;6082:41;;6140:20;6153:6;6140:8;:12;;:20;;;;:::i;:::-;6133:27;;;;5965:202;:::o;1241:30::-;;;;;;;;;;;;;:::o;1172:::-;;;;;;;;;;;;;:::o;5732:133::-;5784:7;5817:15;;;;;;;;;;;5810:33;;;5852:4;5810:48;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5810:48:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;5810:48:0;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5810:48:0;;;;;;;;;;;;;;;;5803:55;;5732:133;:::o;1277:30::-;;;;;;;;;;;;;:::o;1970:107:8:-;1103:9;:7;:9::i;:::-;1095:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2042:28;2061:8;2042:18;:28::i;:::-;1970:107;:::o;1415:74:0:-;1253:12:13;;;;;;;;;;;:31;;;;1269:15;:13;:15::i;:::-;1253:31;:47;;;;1289:11;;;;;;;;;;;1288:12;1253:47;1245:106;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1358:19;1381:12;;;;;;;;;;;1380:13;1358:35;;1403:14;1399:80;;;1442:4;1427:12;;:19;;;;;;;;;;;;;;;;;;1468:4;1454:11;;:18;;;;;;;;;;;;;;;;;;1399:80;1480:2:0;1476:1;:6;;;;1497:14:13;1493:55;;;1536:5;1521:12;;:20;;;;;;;;;;;;;;;;;;1493:55;1415:74:0;;:::o;788:96:6:-;833:15;867:10;860:17;;788:96;:::o;842:202:11:-;942:95;961:5;991;:18;;;:27;;;;1020:4;1026:2;1030:5;968:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;968:68:11;;;;;;;38:4:-1;29:7;25:18;67:10;61:17;96:58;199:8;192:4;186;182:15;179:29;167:10;160:49;0:215;;;968:68:11;942:18;:95::i;:::-;842:202;;;;:::o;1050:612::-;1424:1;1415:5;:10;1414:62;;;;1474:1;1431:5;:15;;;1455:4;1462:7;1431:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1431:39:11;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1431:39:11;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1431:39:11;;;;;;;;;;;;;;;;:44;1414:62;1406:150;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1566:89;1585:5;1615;:13;;;:22;;;;1639:7;1648:5;1592:62;;;;;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;1592:62:11;;;;;;;38:4:-1;29:7;25:18;67:10;61:17;96:58;199:8;192:4;186;182:15;179:29;167:10;160:49;0:215;;;1592:62:11;1566:18;:89::i;:::-;1050:612;;;:::o;6221:107:0:-;6281:17;;;;;;;;;;;6265:39;;;6305:15;;;;;;;;;;;6265:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6265:56:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;6265:56:0;;;;6221:107::o;662:174:11:-;744:85;763:5;793;:14;;;:23;;;;818:2;822:5;770:58;;;;;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;770:58:11;;;;;;;38:4:-1;29:7;25:18;67:10;61:17;96:58;199:8;192:4;186;182:15;179:29;167:10;160:49;0:215;;;770:58:11;744:18;:85::i;:::-;662:174;;;:::o;2159:459:7:-;2217:7;2463:1;2458;:6;2454:45;;;2487:1;2480:8;;;;2454:45;2509:9;2525:1;2521;:5;2509:17;;2553:1;2548;2544;:5;;;;;;:10;2536:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2610:1;2603:8;;;2159:459;;;;;:::o;3073:130::-;3131:7;3157:39;3161:1;3164;3157:39;;;;;;;;;;;;;;;;;:3;:39::i;:::-;3150:46;;3073:130;;;;:::o;8500:403:0:-;8571:7;8590:14;8621:4;8607:28;;;:30;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;8607:30:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;8607:30:0;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;8607:30:0;;;;;;;;;;;;;;;;8590:47;;8663:2;8651:8;:14;;;8647:250;;;8688:6;8681:13;;;;;8647:250;8726:2;8715:8;:13;;;8711:186;;;8751:38;8785:2;8776:8;:11;8762:26;;8770:2;8762:26;8751:6;:10;;:38;;;;:::i;:::-;8744:45;;;;;8711:186;8821:2;8810:8;:13;;;8806:91;;;8846:40;8876:8;8871:2;:13;8857:28;;8865:2;8857:28;8846:6;:10;;:40;;;;:::i;:::-;8839:47;;;;;8806:91;8500:403;;;;;;:::o;834:176:7:-;892:7;911:9;927:1;923;:5;911:17;;951:1;946;:6;;938:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1002:1;995:8;;;834:176;;;;:::o;6525:265:0:-;6600:7;6619:16;6638:19;:17;:19::i;:::-;6619:38;;6667:18;6688:21;:19;:21::i;:::-;6667:42;;6735:48;6774:8;6735:34;6750:18;6735:10;:14;;:34;;;;:::i;:::-;:38;;:48;;;;:::i;:::-;6728:55;;;;6525:265;;;:::o;1274:134:7:-;1332:7;1358:43;1362:1;1365;1358:43;;;;;;;;;;;;;;;;;:3;:43::i;:::-;1351:50;;1274:134;;;;:::o;2178:225:8:-;2271:1;2251:22;;:8;:22;;;;2243:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2360:8;2331:38;;2352:6;;;;;;;;;;;2331:38;;;;;;;;;;;;2388:8;2379:6;;:17;;;;;;;;;;;;;;;;;;2178:225;:::o;1638:498:13:-;1685:4;2026:12;2049:4;2026:28;;2060:10;2105:4;2093:17;2087:23;;2130:1;2124:2;:7;2117:14;;;;1638:498;:::o;2666:1095:11:-;3261:27;3269:5;3261:25;;;:27::i;:::-;3253:71;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3395:12;3409:23;3444:5;3436:19;;3456:4;3436:25;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;3436:25:11;;;;;;;;;;;;;;;;;;;;;;;;14:1:-1;21;16:31;;;;75:4;69:11;64:16;;144:4;140:9;133:4;115:16;111:27;107:43;104:1;100:51;94:4;87:65;169:16;166:1;159:27;225:16;222:1;215:4;212:1;208:12;193:49;7:242;;16:31;36:4;31:9;;7:242;;3394:67:11;;;;3479:7;3471:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3558:1;3538:10;:17;:21;3534:221;;;3678:10;3667:30;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3667:30:11;;;;;;;;;;;;;;;;3659:85;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3534:221;2666:1095;;;;:::o;3718:338:7:-;3804:7;3901:1;3897;:5;3904:12;3889:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;3889:28:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3927:9;3943:1;3939;:5;;;;;;3927:17;;4048:1;4041:8;;;3718:338;;;;;:::o;1732:187::-;1818:7;1850:1;1845;:6;;1853:12;1837:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1837:29:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1876:9;1892:1;1888;:5;1876:17;;1911:1;1904:8;;;1732:187;;;;;:::o;686:610:12:-;746:4;1004:16;1030:19;1052:66;1030:88;;;;1219:7;1207:20;1195:32;;1258:11;1246:8;:23;;:42;;;;;1285:3;1273:15;;:8;:15;;1246:42;1238:51;;;;686:610;;;:::o;1044:7861:0:-;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;1044:7861:0;;;;:::o;:::-;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;1044:7861:0;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "2461600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"balanceOfAll()": "infinite",
								"curveFi_CRVMinter()": "564",
								"curveFi_CRVToken()": "476",
								"curveFi_Deposit()": "475",
								"curveFi_LPGauge()": "519",
								"curveFi_LPToken()": "564",
								"curveFi_Swap()": "521",
								"curveLPTokenBalance()": "infinite",
								"curveLPTokenStaked()": "infinite",
								"curveLPTokenUnstaked()": "infinite",
								"initialize(uint256)": "infinite",
								"isOwner()": "580",
								"multiStepDeposit(uint256[4])": "infinite",
								"multiStepWithdraw(uint256[4])": "infinite",
								"normalizedBalance()": "infinite",
								"owner()": "506",
								"renounceOwnership()": "22599",
								"setup(address,address,address)": "infinite",
								"transferOwnership(address)": "infinite",
								"x()": "429"
							},
							"internal": {
								"calculateShares(uint256)": "infinite",
								"crvTokenClaim()": "infinite",
								"normalize(address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1044,
									"end": 8905,
									"name": "PUSH",
									"value": "80"
								},
								{
									"begin": 1044,
									"end": 8905,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 1044,
									"end": 8905,
									"name": "MSTORE"
								},
								{
									"begin": 698,
									"end": 715,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 718,
									"end": 730,
									"name": "PUSH [tag]",
									"value": "5"
								},
								{
									"begin": 718,
									"end": 728,
									"name": "PUSH [tag]",
									"value": "6"
								},
								{
									"begin": 718,
									"end": 728,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 718,
									"end": 728,
									"name": "SHL"
								},
								{
									"begin": 718,
									"end": 730,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 718,
									"end": 730,
									"name": "SHR"
								},
								{
									"begin": 718,
									"end": 730,
									"name": "JUMP",
									"value": "[in]"
								},
								{
									"begin": 718,
									"end": 730,
									"name": "tag",
									"value": "5"
								},
								{
									"begin": 718,
									"end": 730,
									"name": "JUMPDEST"
								},
								{
									"begin": 698,
									"end": 730,
									"name": "SWAP1"
								},
								{
									"begin": 698,
									"end": 730,
									"name": "POP"
								},
								{
									"begin": 749,
									"end": 758,
									"name": "DUP1"
								},
								{
									"begin": 740,
									"end": 746,
									"name": "PUSH",
									"value": "33"
								},
								{
									"begin": 740,
									"end": 746,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 740,
									"end": 758,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 740,
									"end": 758,
									"name": "EXP"
								},
								{
									"begin": 740,
									"end": 758,
									"name": "DUP2"
								},
								{
									"begin": 740,
									"end": 758,
									"name": "SLOAD"
								},
								{
									"begin": 740,
									"end": 758,
									"name": "DUP2"
								},
								{
									"begin": 740,
									"end": 758,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 740,
									"end": 758,
									"name": "MUL"
								},
								{
									"begin": 740,
									"end": 758,
									"name": "NOT"
								},
								{
									"begin": 740,
									"end": 758,
									"name": "AND"
								},
								{
									"begin": 740,
									"end": 758,
									"name": "SWAP1"
								},
								{
									"begin": 740,
									"end": 758,
									"name": "DUP4"
								},
								{
									"begin": 740,
									"end": 758,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 740,
									"end": 758,
									"name": "AND"
								},
								{
									"begin": 740,
									"end": 758,
									"name": "MUL"
								},
								{
									"begin": 740,
									"end": 758,
									"name": "OR"
								},
								{
									"begin": 740,
									"end": 758,
									"name": "SWAP1"
								},
								{
									"begin": 740,
									"end": 758,
									"name": "SSTORE"
								},
								{
									"begin": 740,
									"end": 758,
									"name": "POP"
								},
								{
									"begin": 806,
									"end": 815,
									"name": "DUP1"
								},
								{
									"begin": 773,
									"end": 816,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 773,
									"end": 816,
									"name": "AND"
								},
								{
									"begin": 802,
									"end": 803,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 773,
									"end": 816,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 773,
									"end": 816,
									"name": "AND"
								},
								{
									"begin": 773,
									"end": 816,
									"name": "PUSH",
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 773,
									"end": 816,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 773,
									"end": 816,
									"name": "MLOAD"
								},
								{
									"begin": 773,
									"end": 816,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 773,
									"end": 816,
									"name": "MLOAD"
								},
								{
									"begin": 773,
									"end": 816,
									"name": "DUP1"
								},
								{
									"begin": 773,
									"end": 816,
									"name": "SWAP2"
								},
								{
									"begin": 773,
									"end": 816,
									"name": "SUB"
								},
								{
									"begin": 773,
									"end": 816,
									"name": "SWAP1"
								},
								{
									"begin": 773,
									"end": 816,
									"name": "LOG3"
								},
								{
									"begin": 664,
									"end": 823,
									"name": "POP"
								},
								{
									"begin": 1044,
									"end": 8905,
									"name": "PUSH [tag]",
									"value": "7"
								},
								{
									"begin": 1044,
									"end": 8905,
									"name": "JUMP"
								},
								{
									"begin": 788,
									"end": 884,
									"name": "tag",
									"value": "6"
								},
								{
									"begin": 788,
									"end": 884,
									"name": "JUMPDEST"
								},
								{
									"begin": 833,
									"end": 848,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 867,
									"end": 877,
									"name": "CALLER"
								},
								{
									"begin": 860,
									"end": 877,
									"name": "SWAP1"
								},
								{
									"begin": 860,
									"end": 877,
									"name": "POP"
								},
								{
									"begin": 788,
									"end": 884,
									"name": "SWAP1"
								},
								{
									"begin": 788,
									"end": 884,
									"name": "JUMP",
									"value": "[out]"
								},
								{
									"begin": 1044,
									"end": 8905,
									"name": "tag",
									"value": "7"
								},
								{
									"begin": 1044,
									"end": 8905,
									"name": "JUMPDEST"
								},
								{
									"begin": 1044,
									"end": 8905,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1044,
									"end": 8905,
									"name": "DUP1"
								},
								{
									"begin": 1044,
									"end": 8905,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1044,
									"end": 8905,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 1044,
									"end": 8905,
									"name": "CODECOPY"
								},
								{
									"begin": 1044,
									"end": 8905,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 1044,
									"end": 8905,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a265627a7a7231582012f905a18eea472128bb3c4baa48cab580ae113d3a2388f02b98b27ca93d23ae64736f6c634300050c0032",
									".code": [
										{
											"begin": 1044,
											"end": 8905,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 1044,
											"end": 8905,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1044,
											"end": 8905,
											"name": "MSTORE"
										},
										{
											"begin": 1044,
											"end": 8905,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 1044,
											"end": 8905,
											"name": "POP"
										},
										{
											"begin": 1044,
											"end": 8905,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1044,
											"end": 8905,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 1044,
											"end": 8905,
											"name": "LT"
										},
										{
											"begin": 1044,
											"end": 8905,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 1044,
											"end": 8905,
											"name": "JUMPI"
										},
										{
											"begin": 1044,
											"end": 8905,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1044,
											"end": 8905,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 1044,
											"end": 8905,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 1044,
											"end": 8905,
											"name": "SHR"
										},
										{
											"begin": 1044,
											"end": 8905,
											"name": "DUP1"
										},
										{
											"begin": 1044,
											"end": 8905,
											"name": "PUSH",
											"value": "8141D266"
										},
										{
											"begin": 1044,
											"end": 8905,
											"name": "GT"
										},
										{
											"begin": 1044,
											"end": 8905,
											"name": "PUSH [tag]",
											"value": "23"
										},
										{
											"begin": 1044,
											"end": 8905,
											"name": "JUMPI"
										},
										{
											"begin": 1044,
											"end": 8905,
											"name": "DUP1"
										},
										{
											"begin": 1044,
											"end": 8905,
											"name": "PUSH",
											"value": "BE873F50"
										},
										{
											"begin": 1044,
											"end": 8905,
											"name": "GT"
										},
										{
											"begin": 1044,
											"end": 8905,
											"name": "PUSH [tag]",
											"value": "24"
										},
										{
											"begin": 1044,
											"end": 8905,
											"name": "JUMPI"
										},
										{
											"begin": 1044,
											"end": 8905,
											"name": "DUP1"
										},
										{
											"begin": 1044,
											"end": 8905,
											"name": "PUSH",
											"value": "BE873F50"
										},
										{
											"begin": 1044,
											"end": 8905,
											"name": "EQ"
										},
										{
											"begin": 1044,
											"end": 8905,
											"name": "PUSH [tag]",
											"value": "18"
										},
										{
											"begin": 1044,
											"end": 8905,
											"name": "JUMPI"
										},
										{
											"begin": 1044,
											"end": 8905,
											"name": "DUP1"
										},
										{
											"begin": 1044,
											"end": 8905,
											"name": "PUSH",
											"value": "DFDA714A"
										},
										{
											"begin": 1044,
											"end": 8905,
											"name": "EQ"
										},
										{
											"begin": 1044,
											"end": 8905,
											"name": "PUSH [tag]",
											"value": "19"
										},
										{
											"begin": 1044,
											"end": 8905,
											"name": "JUMPI"
										},
										{
											"begin": 1044,
											"end": 8905,
											"name": "DUP1"
										},
										{
											"begin": 1044,
											"end": 8905,
											"name": "PUSH",
											"value": "E011262A"
										},
										{
											"begin": 1044,
											"end": 8905,
											"name": "EQ"
										},
										{
											"begin": 1044,
											"end": 8905,
											"name": "PUSH [tag]",
											"value": "20"
										},
										{
											"begin": 1044,
											"end": 8905,
											"name": "JUMPI"
										},
										{
											"begin": 1044,
											"end": 8905,
											"name": "DUP1"
										},
										{
											"begin": 1044,
											"end": 8905,
											"name": "PUSH",
											"value": "F2FDE38B"
										},
										{
											"begin": 1044,
											"end": 8905,
											"name": "EQ"
										},
										{
											"begin": 1044,
											"end": 8905,
											"name": "PUSH [tag]",
											"value": "21"
										},
										{
											"begin": 1044,
											"end": 8905,
											"name": "JUMPI"
										},
										{
											"begin": 1044,
											"end": 8905,
											"name": "DUP1"
										},
										{
											"begin": 1044,
											"end": 8905,
											"name": "PUSH",
											"value": "FE4B84DF"
										},
										{
											"begin": 1044,
											"end": 8905,
											"name": "EQ"
										},
										{
											"begin": 1044,
											"end": 8905,
											"name": "PUSH [tag]",
											"value": "22"
										},
										{
											"begin": 1044,
											"end": 8905,
											"name": "JUMPI"
										},
										{
											"begin": 1044,
											"end": 8905,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 1044,
											"end": 8905,
											"name": "JUMP"
										},
										{
											"begin": 1044,
											"end": 8905,
											"name": "tag",
											"value": "24"
										},
										{
											"begin": 1044,
											"end": 8905,
											"name": "JUMPDEST"
										},
										{
											"begin": 1044,
											"end": 8905,
											"name": "DUP1"
										},
										{
											"begin": 1044,
											"end": 8905,
											"name": "PUSH",
											"value": "8141D266"
										},
										{
											"begin": 1044,
											"end": 8905,
											"name": "EQ"
										},
										{
											"begin": 1044,
											"end": 8905,
											"name": "PUSH [tag]",
											"value": "13"
										},
										{
											"begin": 1044,
											"end": 8905,
											"name": "JUMPI"
										},
										{
											"begin": 1044,
											"end": 8905,
											"name": "DUP1"
										},
										{
											"begin": 1044,
											"end": 8905,
											"name": "PUSH",
											"value": "8DA5CB5B"
										},
										{
											"begin": 1044,
											"end": 8905,
											"name": "EQ"
										},
										{
											"begin": 1044,
											"end": 8905,
											"name": "PUSH [tag]",
											"value": "14"
										},
										{
											"begin": 1044,
											"end": 8905,
											"name": "JUMPI"
										},
										{
											"begin": 1044,
											"end": 8905,
											"name": "DUP1"
										},
										{
											"begin": 1044,
											"end": 8905,
											"name": "PUSH",
											"value": "8F32D59B"
										},
										{
											"begin": 1044,
											"end": 8905,
											"name": "EQ"
										},
										{
											"begin": 1044,
											"end": 8905,
											"name": "PUSH [tag]",
											"value": "15"
										},
										{
											"begin": 1044,
											"end": 8905,
											"name": "JUMPI"
										},
										{
											"begin": 1044,
											"end": 8905,
											"name": "DUP1"
										},
										{
											"begin": 1044,
											"end": 8905,
											"name": "PUSH",
											"value": "97AA80D5"
										},
										{
											"begin": 1044,
											"end": 8905,
											"name": "EQ"
										},
										{
											"begin": 1044,
											"end": 8905,
											"name": "PUSH [tag]",
											"value": "16"
										},
										{
											"begin": 1044,
											"end": 8905,
											"name": "JUMPI"
										},
										{
											"begin": 1044,
											"end": 8905,
											"name": "DUP1"
										},
										{
											"begin": 1044,
											"end": 8905,
											"name": "PUSH",
											"value": "A3477C36"
										},
										{
											"begin": 1044,
											"end": 8905,
											"name": "EQ"
										},
										{
											"begin": 1044,
											"end": 8905,
											"name": "PUSH [tag]",
											"value": "17"
										},
										{
											"begin": 1044,
											"end": 8905,
											"name": "JUMPI"
										},
										{
											"begin": 1044,
											"end": 8905,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 1044,
											"end": 8905,
											"name": "JUMP"
										},
										{
											"begin": 1044,
											"end": 8905,
											"name": "tag",
											"value": "23"
										},
										{
											"begin": 1044,
											"end": 8905,
											"name": "JUMPDEST"
										},
										{
											"begin": 1044,
											"end": 8905,
											"name": "DUP1"
										},
										{
											"begin": 1044,
											"end": 8905,
											"name": "PUSH",
											"value": "44F9C395"
										},
										{
											"begin": 1044,
											"end": 8905,
											"name": "GT"
										},
										{
											"begin": 1044,
											"end": 8905,
											"name": "PUSH [tag]",
											"value": "25"
										},
										{
											"begin": 1044,
											"end": 8905,
											"name": "JUMPI"
										},
										{
											"begin": 1044,
											"end": 8905,
											"name": "DUP1"
										},
										{
											"begin": 1044,
											"end": 8905,
											"name": "PUSH",
											"value": "44F9C395"
										},
										{
											"begin": 1044,
											"end": 8905,
											"name": "EQ"
										},
										{
											"begin": 1044,
											"end": 8905,
											"name": "PUSH [tag]",
											"value": "8"
										},
										{
											"begin": 1044,
											"end": 8905,
											"name": "JUMPI"
										},
										{
											"begin": 1044,
											"end": 8905,
											"name": "DUP1"
										},
										{
											"begin": 1044,
											"end": 8905,
											"name": "PUSH",
											"value": "628CB95E"
										},
										{
											"begin": 1044,
											"end": 8905,
											"name": "EQ"
										},
										{
											"begin": 1044,
											"end": 8905,
											"name": "PUSH [tag]",
											"value": "9"
										},
										{
											"begin": 1044,
											"end": 8905,
											"name": "JUMPI"
										},
										{
											"begin": 1044,
											"end": 8905,
											"name": "DUP1"
										},
										{
											"begin": 1044,
											"end": 8905,
											"name": "PUSH",
											"value": "715018A6"
										},
										{
											"begin": 1044,
											"end": 8905,
											"name": "EQ"
										},
										{
											"begin": 1044,
											"end": 8905,
											"name": "PUSH [tag]",
											"value": "10"
										},
										{
											"begin": 1044,
											"end": 8905,
											"name": "JUMPI"
										},
										{
											"begin": 1044,
											"end": 8905,
											"name": "DUP1"
										},
										{
											"begin": 1044,
											"end": 8905,
											"name": "PUSH",
											"value": "77B8B1C7"
										},
										{
											"begin": 1044,
											"end": 8905,
											"name": "EQ"
										},
										{
											"begin": 1044,
											"end": 8905,
											"name": "PUSH [tag]",
											"value": "11"
										},
										{
											"begin": 1044,
											"end": 8905,
											"name": "JUMPI"
										},
										{
											"begin": 1044,
											"end": 8905,
											"name": "DUP1"
										},
										{
											"begin": 1044,
											"end": 8905,
											"name": "PUSH",
											"value": "7C241146"
										},
										{
											"begin": 1044,
											"end": 8905,
											"name": "EQ"
										},
										{
											"begin": 1044,
											"end": 8905,
											"name": "PUSH [tag]",
											"value": "12"
										},
										{
											"begin": 1044,
											"end": 8905,
											"name": "JUMPI"
										},
										{
											"begin": 1044,
											"end": 8905,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 1044,
											"end": 8905,
											"name": "JUMP"
										},
										{
											"begin": 1044,
											"end": 8905,
											"name": "tag",
											"value": "25"
										},
										{
											"begin": 1044,
											"end": 8905,
											"name": "JUMPDEST"
										},
										{
											"begin": 1044,
											"end": 8905,
											"name": "DUP1"
										},
										{
											"begin": 1044,
											"end": 8905,
											"name": "PUSH",
											"value": "C55699C"
										},
										{
											"begin": 1044,
											"end": 8905,
											"name": "EQ"
										},
										{
											"begin": 1044,
											"end": 8905,
											"name": "PUSH [tag]",
											"value": "3"
										},
										{
											"begin": 1044,
											"end": 8905,
											"name": "JUMPI"
										},
										{
											"begin": 1044,
											"end": 8905,
											"name": "DUP1"
										},
										{
											"begin": 1044,
											"end": 8905,
											"name": "PUSH",
											"value": "14A19AEC"
										},
										{
											"begin": 1044,
											"end": 8905,
											"name": "EQ"
										},
										{
											"begin": 1044,
											"end": 8905,
											"name": "PUSH [tag]",
											"value": "4"
										},
										{
											"begin": 1044,
											"end": 8905,
											"name": "JUMPI"
										},
										{
											"begin": 1044,
											"end": 8905,
											"name": "DUP1"
										},
										{
											"begin": 1044,
											"end": 8905,
											"name": "PUSH",
											"value": "1C600416"
										},
										{
											"begin": 1044,
											"end": 8905,
											"name": "EQ"
										},
										{
											"begin": 1044,
											"end": 8905,
											"name": "PUSH [tag]",
											"value": "5"
										},
										{
											"begin": 1044,
											"end": 8905,
											"name": "JUMPI"
										},
										{
											"begin": 1044,
											"end": 8905,
											"name": "DUP1"
										},
										{
											"begin": 1044,
											"end": 8905,
											"name": "PUSH",
											"value": "208E509F"
										},
										{
											"begin": 1044,
											"end": 8905,
											"name": "EQ"
										},
										{
											"begin": 1044,
											"end": 8905,
											"name": "PUSH [tag]",
											"value": "6"
										},
										{
											"begin": 1044,
											"end": 8905,
											"name": "JUMPI"
										},
										{
											"begin": 1044,
											"end": 8905,
											"name": "DUP1"
										},
										{
											"begin": 1044,
											"end": 8905,
											"name": "PUSH",
											"value": "38EDA370"
										},
										{
											"begin": 1044,
											"end": 8905,
											"name": "EQ"
										},
										{
											"begin": 1044,
											"end": 8905,
											"name": "PUSH [tag]",
											"value": "7"
										},
										{
											"begin": 1044,
											"end": 8905,
											"name": "JUMPI"
										},
										{
											"begin": 1044,
											"end": 8905,
											"name": "tag",
											"value": "2"
										},
										{
											"begin": 1044,
											"end": 8905,
											"name": "JUMPDEST"
										},
										{
											"begin": 1044,
											"end": 8905,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1044,
											"end": 8905,
											"name": "DUP1"
										},
										{
											"begin": 1044,
											"end": 8905,
											"name": "REVERT"
										},
										{
											"begin": 1388,
											"end": 1404,
											"name": "tag",
											"value": "3"
										},
										{
											"begin": 1388,
											"end": 1404,
											"name": "JUMPDEST"
										},
										{
											"begin": 1388,
											"end": 1404,
											"name": "PUSH [tag]",
											"value": "26"
										},
										{
											"begin": 1388,
											"end": 1404,
											"name": "PUSH [tag]",
											"value": "27"
										},
										{
											"begin": 1388,
											"end": 1404,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1388,
											"end": 1404,
											"name": "tag",
											"value": "26"
										},
										{
											"begin": 1388,
											"end": 1404,
											"name": "JUMPDEST"
										},
										{
											"begin": 1388,
											"end": 1404,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1388,
											"end": 1404,
											"name": "MLOAD"
										},
										{
											"begin": 1388,
											"end": 1404,
											"name": "DUP1"
										},
										{
											"begin": 1388,
											"end": 1404,
											"name": "DUP3"
										},
										{
											"begin": 1388,
											"end": 1404,
											"name": "DUP2"
										},
										{
											"begin": 1388,
											"end": 1404,
											"name": "MSTORE"
										},
										{
											"begin": 1388,
											"end": 1404,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1388,
											"end": 1404,
											"name": "ADD"
										},
										{
											"begin": 1388,
											"end": 1404,
											"name": "SWAP2"
										},
										{
											"begin": 1388,
											"end": 1404,
											"name": "POP"
										},
										{
											"begin": 1388,
											"end": 1404,
											"name": "POP"
										},
										{
											"begin": 1388,
											"end": 1404,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1388,
											"end": 1404,
											"name": "MLOAD"
										},
										{
											"begin": 1388,
											"end": 1404,
											"name": "DUP1"
										},
										{
											"begin": 1388,
											"end": 1404,
											"name": "SWAP2"
										},
										{
											"begin": 1388,
											"end": 1404,
											"name": "SUB"
										},
										{
											"begin": 1388,
											"end": 1404,
											"name": "SWAP1"
										},
										{
											"begin": 1388,
											"end": 1404,
											"name": "RETURN"
										},
										{
											"begin": 2612,
											"end": 3742,
											"name": "tag",
											"value": "4"
										},
										{
											"begin": 2612,
											"end": 3742,
											"name": "JUMPDEST"
										},
										{
											"begin": 2612,
											"end": 3742,
											"name": "PUSH [tag]",
											"value": "28"
										},
										{
											"begin": 2612,
											"end": 3742,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 2612,
											"end": 3742,
											"name": "DUP1"
										},
										{
											"begin": 2612,
											"end": 3742,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 2612,
											"end": 3742,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 16,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 17,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "29"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "29"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 2612,
											"end": 3742,
											"name": "DUP2"
										},
										{
											"begin": 2612,
											"end": 3742,
											"name": "ADD"
										},
										{
											"begin": 2612,
											"end": 3742,
											"name": "SWAP1"
										},
										{
											"begin": 2612,
											"end": 3742,
											"name": "DUP1"
										},
										{
											"begin": 2612,
											"end": 3742,
											"name": "DUP1"
										},
										{
											"begin": 2612,
											"end": 3742,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 2612,
											"end": 3742,
											"name": "ADD"
										},
										{
											"begin": 2612,
											"end": 3742,
											"name": "SWAP1"
										},
										{
											"begin": 2612,
											"end": 3742,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 2612,
											"end": 3742,
											"name": "DUP1"
										},
										{
											"begin": 2612,
											"end": 3742,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2612,
											"end": 3742,
											"name": "MUL"
										},
										{
											"begin": 2612,
											"end": 3742,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2612,
											"end": 3742,
											"name": "MLOAD"
										},
										{
											"begin": 2612,
											"end": 3742,
											"name": "SWAP1"
										},
										{
											"begin": 2612,
											"end": 3742,
											"name": "DUP2"
										},
										{
											"begin": 2612,
											"end": 3742,
											"name": "ADD"
										},
										{
											"begin": 2612,
											"end": 3742,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2612,
											"end": 3742,
											"name": "MSTORE"
										},
										{
											"begin": 2612,
											"end": 3742,
											"name": "DUP1"
										},
										{
											"begin": 2612,
											"end": 3742,
											"name": "SWAP3"
										},
										{
											"begin": 2612,
											"end": 3742,
											"name": "SWAP2"
										},
										{
											"begin": 2612,
											"end": 3742,
											"name": "SWAP1"
										},
										{
											"begin": 2612,
											"end": 3742,
											"name": "DUP3"
										},
										{
											"begin": 2612,
											"end": 3742,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 2612,
											"end": 3742,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2612,
											"end": 3742,
											"name": "MUL"
										},
										{
											"begin": 30,
											"end": 33,
											"name": "DUP1"
										},
										{
											"begin": 22,
											"end": 28,
											"name": "DUP3"
										},
										{
											"begin": 14,
											"end": 20,
											"name": "DUP5"
										},
										{
											"begin": 1,
											"end": 34,
											"name": "CALLDATACOPY"
										},
										{
											"begin": 99,
											"end": 100,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 93,
											"end": 96,
											"name": "DUP2"
										},
										{
											"begin": 85,
											"end": 91,
											"name": "DUP5"
										},
										{
											"begin": 81,
											"end": 97,
											"name": "ADD"
										},
										{
											"begin": 74,
											"end": 101,
											"name": "MSTORE"
										},
										{
											"begin": 137,
											"end": 141,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 133,
											"end": 142,
											"name": "NOT"
										},
										{
											"begin": 126,
											"end": 130,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 121,
											"end": 124,
											"name": "DUP3"
										},
										{
											"begin": 117,
											"end": 131,
											"name": "ADD"
										},
										{
											"begin": 113,
											"end": 143,
											"name": "AND"
										},
										{
											"begin": 106,
											"end": 143,
											"name": "SWAP1"
										},
										{
											"begin": 106,
											"end": 143,
											"name": "POP"
										},
										{
											"begin": 169,
											"end": 172,
											"name": "DUP1"
										},
										{
											"begin": 161,
											"end": 167,
											"name": "DUP4"
										},
										{
											"begin": 157,
											"end": 173,
											"name": "ADD"
										},
										{
											"begin": 147,
											"end": 173,
											"name": "SWAP3"
										},
										{
											"begin": 147,
											"end": 173,
											"name": "POP"
										},
										{
											"begin": 2612,
											"end": 3742,
											"name": "POP"
										},
										{
											"begin": 2612,
											"end": 3742,
											"name": "POP"
										},
										{
											"begin": 2612,
											"end": 3742,
											"name": "POP"
										},
										{
											"begin": 2612,
											"end": 3742,
											"name": "POP"
										},
										{
											"begin": 2612,
											"end": 3742,
											"name": "POP"
										},
										{
											"begin": 2612,
											"end": 3742,
											"name": "SWAP2"
										},
										{
											"begin": 2612,
											"end": 3742,
											"name": "SWAP3"
										},
										{
											"begin": 2612,
											"end": 3742,
											"name": "SWAP2"
										},
										{
											"begin": 2612,
											"end": 3742,
											"name": "SWAP3"
										},
										{
											"begin": 2612,
											"end": 3742,
											"name": "SWAP1"
										},
										{
											"begin": 2612,
											"end": 3742,
											"name": "POP"
										},
										{
											"begin": 2612,
											"end": 3742,
											"name": "POP"
										},
										{
											"begin": 2612,
											"end": 3742,
											"name": "POP"
										},
										{
											"begin": 2612,
											"end": 3742,
											"name": "PUSH [tag]",
											"value": "30"
										},
										{
											"begin": 2612,
											"end": 3742,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2612,
											"end": 3742,
											"name": "tag",
											"value": "28"
										},
										{
											"begin": 2612,
											"end": 3742,
											"name": "JUMPDEST"
										},
										{
											"begin": 2612,
											"end": 3742,
											"name": "STOP"
										},
										{
											"begin": 1208,
											"end": 1235,
											"name": "tag",
											"value": "5"
										},
										{
											"begin": 1208,
											"end": 1235,
											"name": "JUMPDEST"
										},
										{
											"begin": 1208,
											"end": 1235,
											"name": "PUSH [tag]",
											"value": "31"
										},
										{
											"begin": 1208,
											"end": 1235,
											"name": "PUSH [tag]",
											"value": "32"
										},
										{
											"begin": 1208,
											"end": 1235,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1208,
											"end": 1235,
											"name": "tag",
											"value": "31"
										},
										{
											"begin": 1208,
											"end": 1235,
											"name": "JUMPDEST"
										},
										{
											"begin": 1208,
											"end": 1235,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1208,
											"end": 1235,
											"name": "MLOAD"
										},
										{
											"begin": 1208,
											"end": 1235,
											"name": "DUP1"
										},
										{
											"begin": 1208,
											"end": 1235,
											"name": "DUP3"
										},
										{
											"begin": 1208,
											"end": 1235,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1208,
											"end": 1235,
											"name": "AND"
										},
										{
											"begin": 1208,
											"end": 1235,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1208,
											"end": 1235,
											"name": "AND"
										},
										{
											"begin": 1208,
											"end": 1235,
											"name": "DUP2"
										},
										{
											"begin": 1208,
											"end": 1235,
											"name": "MSTORE"
										},
										{
											"begin": 1208,
											"end": 1235,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1208,
											"end": 1235,
											"name": "ADD"
										},
										{
											"begin": 1208,
											"end": 1235,
											"name": "SWAP2"
										},
										{
											"begin": 1208,
											"end": 1235,
											"name": "POP"
										},
										{
											"begin": 1208,
											"end": 1235,
											"name": "POP"
										},
										{
											"begin": 1208,
											"end": 1235,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1208,
											"end": 1235,
											"name": "MLOAD"
										},
										{
											"begin": 1208,
											"end": 1235,
											"name": "DUP1"
										},
										{
											"begin": 1208,
											"end": 1235,
											"name": "SWAP2"
										},
										{
											"begin": 1208,
											"end": 1235,
											"name": "SUB"
										},
										{
											"begin": 1208,
											"end": 1235,
											"name": "SWAP1"
										},
										{
											"begin": 1208,
											"end": 1235,
											"name": "RETURN"
										},
										{
											"begin": 6874,
											"end": 7917,
											"name": "tag",
											"value": "6"
										},
										{
											"begin": 6874,
											"end": 7917,
											"name": "JUMPDEST"
										},
										{
											"begin": 6874,
											"end": 7917,
											"name": "PUSH [tag]",
											"value": "33"
										},
										{
											"begin": 6874,
											"end": 7917,
											"name": "PUSH [tag]",
											"value": "34"
										},
										{
											"begin": 6874,
											"end": 7917,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 6874,
											"end": 7917,
											"name": "tag",
											"value": "33"
										},
										{
											"begin": 6874,
											"end": 7917,
											"name": "JUMPDEST"
										},
										{
											"begin": 6874,
											"end": 7917,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6874,
											"end": 7917,
											"name": "MLOAD"
										},
										{
											"begin": 6874,
											"end": 7917,
											"name": "DUP1"
										},
										{
											"begin": 6874,
											"end": 7917,
											"name": "DUP3"
										},
										{
											"begin": 6874,
											"end": 7917,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 6874,
											"end": 7917,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6874,
											"end": 7917,
											"name": "MUL"
										},
										{
											"begin": 6874,
											"end": 7917,
											"name": "DUP1"
										},
										{
											"begin": 6874,
											"end": 7917,
											"name": "DUP4"
										},
										{
											"begin": 6874,
											"end": 7917,
											"name": "DUP4"
										},
										{
											"begin": 23,
											"end": 24,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "35"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP4"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "DUP2"
										},
										{
											"begin": 27,
											"end": 37,
											"name": "LT"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "37"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI"
										},
										{
											"begin": 99,
											"end": 100,
											"name": "DUP1"
										},
										{
											"begin": 94,
											"end": 97,
											"name": "DUP3"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 84,
											"end": 102,
											"name": "MLOAD"
										},
										{
											"begin": 80,
											"end": 81,
											"name": "DUP2"
										},
										{
											"begin": 75,
											"end": 78,
											"name": "DUP5"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "ADD"
										},
										{
											"begin": 64,
											"end": 103,
											"name": "MSTORE"
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 49,
											"end": 50,
											"name": "DUP2"
										},
										{
											"begin": 45,
											"end": 55,
											"name": "ADD"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "SWAP1"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "POP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "35"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "37"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "POP"
										},
										{
											"begin": 6874,
											"end": 7917,
											"name": "POP"
										},
										{
											"begin": 6874,
											"end": 7917,
											"name": "POP"
										},
										{
											"begin": 6874,
											"end": 7917,
											"name": "POP"
										},
										{
											"begin": 6874,
											"end": 7917,
											"name": "SWAP1"
										},
										{
											"begin": 6874,
											"end": 7917,
											"name": "POP"
										},
										{
											"begin": 6874,
											"end": 7917,
											"name": "ADD"
										},
										{
											"begin": 6874,
											"end": 7917,
											"name": "SWAP2"
										},
										{
											"begin": 6874,
											"end": 7917,
											"name": "POP"
										},
										{
											"begin": 6874,
											"end": 7917,
											"name": "POP"
										},
										{
											"begin": 6874,
											"end": 7917,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6874,
											"end": 7917,
											"name": "MLOAD"
										},
										{
											"begin": 6874,
											"end": 7917,
											"name": "DUP1"
										},
										{
											"begin": 6874,
											"end": 7917,
											"name": "SWAP2"
										},
										{
											"begin": 6874,
											"end": 7917,
											"name": "SUB"
										},
										{
											"begin": 6874,
											"end": 7917,
											"name": "SWAP1"
										},
										{
											"begin": 6874,
											"end": 7917,
											"name": "RETURN"
										},
										{
											"begin": 3941,
											"end": 5393,
											"name": "tag",
											"value": "7"
										},
										{
											"begin": 3941,
											"end": 5393,
											"name": "JUMPDEST"
										},
										{
											"begin": 3941,
											"end": 5393,
											"name": "PUSH [tag]",
											"value": "38"
										},
										{
											"begin": 3941,
											"end": 5393,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 3941,
											"end": 5393,
											"name": "DUP1"
										},
										{
											"begin": 3941,
											"end": 5393,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 3941,
											"end": 5393,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 16,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 17,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "39"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "39"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 3941,
											"end": 5393,
											"name": "DUP2"
										},
										{
											"begin": 3941,
											"end": 5393,
											"name": "ADD"
										},
										{
											"begin": 3941,
											"end": 5393,
											"name": "SWAP1"
										},
										{
											"begin": 3941,
											"end": 5393,
											"name": "DUP1"
										},
										{
											"begin": 3941,
											"end": 5393,
											"name": "DUP1"
										},
										{
											"begin": 3941,
											"end": 5393,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 3941,
											"end": 5393,
											"name": "ADD"
										},
										{
											"begin": 3941,
											"end": 5393,
											"name": "SWAP1"
										},
										{
											"begin": 3941,
											"end": 5393,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 3941,
											"end": 5393,
											"name": "DUP1"
										},
										{
											"begin": 3941,
											"end": 5393,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3941,
											"end": 5393,
											"name": "MUL"
										},
										{
											"begin": 3941,
											"end": 5393,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3941,
											"end": 5393,
											"name": "MLOAD"
										},
										{
											"begin": 3941,
											"end": 5393,
											"name": "SWAP1"
										},
										{
											"begin": 3941,
											"end": 5393,
											"name": "DUP2"
										},
										{
											"begin": 3941,
											"end": 5393,
											"name": "ADD"
										},
										{
											"begin": 3941,
											"end": 5393,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3941,
											"end": 5393,
											"name": "MSTORE"
										},
										{
											"begin": 3941,
											"end": 5393,
											"name": "DUP1"
										},
										{
											"begin": 3941,
											"end": 5393,
											"name": "SWAP3"
										},
										{
											"begin": 3941,
											"end": 5393,
											"name": "SWAP2"
										},
										{
											"begin": 3941,
											"end": 5393,
											"name": "SWAP1"
										},
										{
											"begin": 3941,
											"end": 5393,
											"name": "DUP3"
										},
										{
											"begin": 3941,
											"end": 5393,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 3941,
											"end": 5393,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3941,
											"end": 5393,
											"name": "MUL"
										},
										{
											"begin": 30,
											"end": 33,
											"name": "DUP1"
										},
										{
											"begin": 22,
											"end": 28,
											"name": "DUP3"
										},
										{
											"begin": 14,
											"end": 20,
											"name": "DUP5"
										},
										{
											"begin": 1,
											"end": 34,
											"name": "CALLDATACOPY"
										},
										{
											"begin": 99,
											"end": 100,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 93,
											"end": 96,
											"name": "DUP2"
										},
										{
											"begin": 85,
											"end": 91,
											"name": "DUP5"
										},
										{
											"begin": 81,
											"end": 97,
											"name": "ADD"
										},
										{
											"begin": 74,
											"end": 101,
											"name": "MSTORE"
										},
										{
											"begin": 137,
											"end": 141,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 133,
											"end": 142,
											"name": "NOT"
										},
										{
											"begin": 126,
											"end": 130,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 121,
											"end": 124,
											"name": "DUP3"
										},
										{
											"begin": 117,
											"end": 131,
											"name": "ADD"
										},
										{
											"begin": 113,
											"end": 143,
											"name": "AND"
										},
										{
											"begin": 106,
											"end": 143,
											"name": "SWAP1"
										},
										{
											"begin": 106,
											"end": 143,
											"name": "POP"
										},
										{
											"begin": 169,
											"end": 172,
											"name": "DUP1"
										},
										{
											"begin": 161,
											"end": 167,
											"name": "DUP4"
										},
										{
											"begin": 157,
											"end": 173,
											"name": "ADD"
										},
										{
											"begin": 147,
											"end": 173,
											"name": "SWAP3"
										},
										{
											"begin": 147,
											"end": 173,
											"name": "POP"
										},
										{
											"begin": 3941,
											"end": 5393,
											"name": "POP"
										},
										{
											"begin": 3941,
											"end": 5393,
											"name": "POP"
										},
										{
											"begin": 3941,
											"end": 5393,
											"name": "POP"
										},
										{
											"begin": 3941,
											"end": 5393,
											"name": "POP"
										},
										{
											"begin": 3941,
											"end": 5393,
											"name": "POP"
										},
										{
											"begin": 3941,
											"end": 5393,
											"name": "SWAP2"
										},
										{
											"begin": 3941,
											"end": 5393,
											"name": "SWAP3"
										},
										{
											"begin": 3941,
											"end": 5393,
											"name": "SWAP2"
										},
										{
											"begin": 3941,
											"end": 5393,
											"name": "SWAP3"
										},
										{
											"begin": 3941,
											"end": 5393,
											"name": "SWAP1"
										},
										{
											"begin": 3941,
											"end": 5393,
											"name": "POP"
										},
										{
											"begin": 3941,
											"end": 5393,
											"name": "POP"
										},
										{
											"begin": 3941,
											"end": 5393,
											"name": "POP"
										},
										{
											"begin": 3941,
											"end": 5393,
											"name": "PUSH [tag]",
											"value": "40"
										},
										{
											"begin": 3941,
											"end": 5393,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3941,
											"end": 5393,
											"name": "tag",
											"value": "38"
										},
										{
											"begin": 3941,
											"end": 5393,
											"name": "JUMPDEST"
										},
										{
											"begin": 3941,
											"end": 5393,
											"name": "STOP"
										},
										{
											"begin": 5482,
											"end": 5621,
											"name": "tag",
											"value": "8"
										},
										{
											"begin": 5482,
											"end": 5621,
											"name": "JUMPDEST"
										},
										{
											"begin": 5482,
											"end": 5621,
											"name": "PUSH [tag]",
											"value": "41"
										},
										{
											"begin": 5482,
											"end": 5621,
											"name": "PUSH [tag]",
											"value": "42"
										},
										{
											"begin": 5482,
											"end": 5621,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 5482,
											"end": 5621,
											"name": "tag",
											"value": "41"
										},
										{
											"begin": 5482,
											"end": 5621,
											"name": "JUMPDEST"
										},
										{
											"begin": 5482,
											"end": 5621,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5482,
											"end": 5621,
											"name": "MLOAD"
										},
										{
											"begin": 5482,
											"end": 5621,
											"name": "DUP1"
										},
										{
											"begin": 5482,
											"end": 5621,
											"name": "DUP3"
										},
										{
											"begin": 5482,
											"end": 5621,
											"name": "DUP2"
										},
										{
											"begin": 5482,
											"end": 5621,
											"name": "MSTORE"
										},
										{
											"begin": 5482,
											"end": 5621,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5482,
											"end": 5621,
											"name": "ADD"
										},
										{
											"begin": 5482,
											"end": 5621,
											"name": "SWAP2"
										},
										{
											"begin": 5482,
											"end": 5621,
											"name": "POP"
										},
										{
											"begin": 5482,
											"end": 5621,
											"name": "POP"
										},
										{
											"begin": 5482,
											"end": 5621,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5482,
											"end": 5621,
											"name": "MLOAD"
										},
										{
											"begin": 5482,
											"end": 5621,
											"name": "DUP1"
										},
										{
											"begin": 5482,
											"end": 5621,
											"name": "SWAP2"
										},
										{
											"begin": 5482,
											"end": 5621,
											"name": "SUB"
										},
										{
											"begin": 5482,
											"end": 5621,
											"name": "SWAP1"
										},
										{
											"begin": 5482,
											"end": 5621,
											"name": "RETURN"
										},
										{
											"begin": 8027,
											"end": 8419,
											"name": "tag",
											"value": "9"
										},
										{
											"begin": 8027,
											"end": 8419,
											"name": "JUMPDEST"
										},
										{
											"begin": 8027,
											"end": 8419,
											"name": "PUSH [tag]",
											"value": "43"
										},
										{
											"begin": 8027,
											"end": 8419,
											"name": "PUSH [tag]",
											"value": "44"
										},
										{
											"begin": 8027,
											"end": 8419,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 8027,
											"end": 8419,
											"name": "tag",
											"value": "43"
										},
										{
											"begin": 8027,
											"end": 8419,
											"name": "JUMPDEST"
										},
										{
											"begin": 8027,
											"end": 8419,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8027,
											"end": 8419,
											"name": "MLOAD"
										},
										{
											"begin": 8027,
											"end": 8419,
											"name": "DUP1"
										},
										{
											"begin": 8027,
											"end": 8419,
											"name": "DUP3"
										},
										{
											"begin": 8027,
											"end": 8419,
											"name": "DUP2"
										},
										{
											"begin": 8027,
											"end": 8419,
											"name": "MSTORE"
										},
										{
											"begin": 8027,
											"end": 8419,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8027,
											"end": 8419,
											"name": "ADD"
										},
										{
											"begin": 8027,
											"end": 8419,
											"name": "SWAP2"
										},
										{
											"begin": 8027,
											"end": 8419,
											"name": "POP"
										},
										{
											"begin": 8027,
											"end": 8419,
											"name": "POP"
										},
										{
											"begin": 8027,
											"end": 8419,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8027,
											"end": 8419,
											"name": "MLOAD"
										},
										{
											"begin": 8027,
											"end": 8419,
											"name": "DUP1"
										},
										{
											"begin": 8027,
											"end": 8419,
											"name": "SWAP2"
										},
										{
											"begin": 8027,
											"end": 8419,
											"name": "SUB"
										},
										{
											"begin": 8027,
											"end": 8419,
											"name": "SWAP1"
										},
										{
											"begin": 8027,
											"end": 8419,
											"name": "RETURN"
										},
										{
											"begin": 1684,
											"end": 1821,
											"name": "tag",
											"value": "10"
										},
										{
											"begin": 1684,
											"end": 1821,
											"name": "JUMPDEST"
										},
										{
											"begin": 1684,
											"end": 1821,
											"name": "PUSH [tag]",
											"value": "45"
										},
										{
											"begin": 1684,
											"end": 1821,
											"name": "PUSH [tag]",
											"value": "46"
										},
										{
											"begin": 1684,
											"end": 1821,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1684,
											"end": 1821,
											"name": "tag",
											"value": "45"
										},
										{
											"begin": 1684,
											"end": 1821,
											"name": "JUMPDEST"
										},
										{
											"begin": 1684,
											"end": 1821,
											"name": "STOP"
										},
										{
											"begin": 1737,
											"end": 2414,
											"name": "tag",
											"value": "11"
										},
										{
											"begin": 1737,
											"end": 2414,
											"name": "JUMPDEST"
										},
										{
											"begin": 1737,
											"end": 2414,
											"name": "PUSH [tag]",
											"value": "47"
										},
										{
											"begin": 1737,
											"end": 2414,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1737,
											"end": 2414,
											"name": "DUP1"
										},
										{
											"begin": 1737,
											"end": 2414,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 1737,
											"end": 2414,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "48"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "48"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 1737,
											"end": 2414,
											"name": "DUP2"
										},
										{
											"begin": 1737,
											"end": 2414,
											"name": "ADD"
										},
										{
											"begin": 1737,
											"end": 2414,
											"name": "SWAP1"
										},
										{
											"begin": 1737,
											"end": 2414,
											"name": "DUP1"
										},
										{
											"begin": 1737,
											"end": 2414,
											"name": "DUP1"
										},
										{
											"begin": 1737,
											"end": 2414,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 1737,
											"end": 2414,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1737,
											"end": 2414,
											"name": "AND"
										},
										{
											"begin": 1737,
											"end": 2414,
											"name": "SWAP1"
										},
										{
											"begin": 1737,
											"end": 2414,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1737,
											"end": 2414,
											"name": "ADD"
										},
										{
											"begin": 1737,
											"end": 2414,
											"name": "SWAP1"
										},
										{
											"begin": 1737,
											"end": 2414,
											"name": "SWAP3"
										},
										{
											"begin": 1737,
											"end": 2414,
											"name": "SWAP2"
										},
										{
											"begin": 1737,
											"end": 2414,
											"name": "SWAP1"
										},
										{
											"begin": 1737,
											"end": 2414,
											"name": "DUP1"
										},
										{
											"begin": 1737,
											"end": 2414,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 1737,
											"end": 2414,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1737,
											"end": 2414,
											"name": "AND"
										},
										{
											"begin": 1737,
											"end": 2414,
											"name": "SWAP1"
										},
										{
											"begin": 1737,
											"end": 2414,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1737,
											"end": 2414,
											"name": "ADD"
										},
										{
											"begin": 1737,
											"end": 2414,
											"name": "SWAP1"
										},
										{
											"begin": 1737,
											"end": 2414,
											"name": "SWAP3"
										},
										{
											"begin": 1737,
											"end": 2414,
											"name": "SWAP2"
										},
										{
											"begin": 1737,
											"end": 2414,
											"name": "SWAP1"
										},
										{
											"begin": 1737,
											"end": 2414,
											"name": "DUP1"
										},
										{
											"begin": 1737,
											"end": 2414,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 1737,
											"end": 2414,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1737,
											"end": 2414,
											"name": "AND"
										},
										{
											"begin": 1737,
											"end": 2414,
											"name": "SWAP1"
										},
										{
											"begin": 1737,
											"end": 2414,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1737,
											"end": 2414,
											"name": "ADD"
										},
										{
											"begin": 1737,
											"end": 2414,
											"name": "SWAP1"
										},
										{
											"begin": 1737,
											"end": 2414,
											"name": "SWAP3"
										},
										{
											"begin": 1737,
											"end": 2414,
											"name": "SWAP2"
										},
										{
											"begin": 1737,
											"end": 2414,
											"name": "SWAP1"
										},
										{
											"begin": 1737,
											"end": 2414,
											"name": "POP"
										},
										{
											"begin": 1737,
											"end": 2414,
											"name": "POP"
										},
										{
											"begin": 1737,
											"end": 2414,
											"name": "POP"
										},
										{
											"begin": 1737,
											"end": 2414,
											"name": "PUSH [tag]",
											"value": "49"
										},
										{
											"begin": 1737,
											"end": 2414,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1737,
											"end": 2414,
											"name": "tag",
											"value": "47"
										},
										{
											"begin": 1737,
											"end": 2414,
											"name": "JUMPDEST"
										},
										{
											"begin": 1737,
											"end": 2414,
											"name": "STOP"
										},
										{
											"begin": 1313,
											"end": 1345,
											"name": "tag",
											"value": "12"
										},
										{
											"begin": 1313,
											"end": 1345,
											"name": "JUMPDEST"
										},
										{
											"begin": 1313,
											"end": 1345,
											"name": "PUSH [tag]",
											"value": "50"
										},
										{
											"begin": 1313,
											"end": 1345,
											"name": "PUSH [tag]",
											"value": "51"
										},
										{
											"begin": 1313,
											"end": 1345,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1313,
											"end": 1345,
											"name": "tag",
											"value": "50"
										},
										{
											"begin": 1313,
											"end": 1345,
											"name": "JUMPDEST"
										},
										{
											"begin": 1313,
											"end": 1345,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1313,
											"end": 1345,
											"name": "MLOAD"
										},
										{
											"begin": 1313,
											"end": 1345,
											"name": "DUP1"
										},
										{
											"begin": 1313,
											"end": 1345,
											"name": "DUP3"
										},
										{
											"begin": 1313,
											"end": 1345,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1313,
											"end": 1345,
											"name": "AND"
										},
										{
											"begin": 1313,
											"end": 1345,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1313,
											"end": 1345,
											"name": "AND"
										},
										{
											"begin": 1313,
											"end": 1345,
											"name": "DUP2"
										},
										{
											"begin": 1313,
											"end": 1345,
											"name": "MSTORE"
										},
										{
											"begin": 1313,
											"end": 1345,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1313,
											"end": 1345,
											"name": "ADD"
										},
										{
											"begin": 1313,
											"end": 1345,
											"name": "SWAP2"
										},
										{
											"begin": 1313,
											"end": 1345,
											"name": "POP"
										},
										{
											"begin": 1313,
											"end": 1345,
											"name": "POP"
										},
										{
											"begin": 1313,
											"end": 1345,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1313,
											"end": 1345,
											"name": "MLOAD"
										},
										{
											"begin": 1313,
											"end": 1345,
											"name": "DUP1"
										},
										{
											"begin": 1313,
											"end": 1345,
											"name": "SWAP2"
										},
										{
											"begin": 1313,
											"end": 1345,
											"name": "SUB"
										},
										{
											"begin": 1313,
											"end": 1345,
											"name": "SWAP1"
										},
										{
											"begin": 1313,
											"end": 1345,
											"name": "RETURN"
										},
										{
											"begin": 1351,
											"end": 1382,
											"name": "tag",
											"value": "13"
										},
										{
											"begin": 1351,
											"end": 1382,
											"name": "JUMPDEST"
										},
										{
											"begin": 1351,
											"end": 1382,
											"name": "PUSH [tag]",
											"value": "52"
										},
										{
											"begin": 1351,
											"end": 1382,
											"name": "PUSH [tag]",
											"value": "53"
										},
										{
											"begin": 1351,
											"end": 1382,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1351,
											"end": 1382,
											"name": "tag",
											"value": "52"
										},
										{
											"begin": 1351,
											"end": 1382,
											"name": "JUMPDEST"
										},
										{
											"begin": 1351,
											"end": 1382,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1351,
											"end": 1382,
											"name": "MLOAD"
										},
										{
											"begin": 1351,
											"end": 1382,
											"name": "DUP1"
										},
										{
											"begin": 1351,
											"end": 1382,
											"name": "DUP3"
										},
										{
											"begin": 1351,
											"end": 1382,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1351,
											"end": 1382,
											"name": "AND"
										},
										{
											"begin": 1351,
											"end": 1382,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1351,
											"end": 1382,
											"name": "AND"
										},
										{
											"begin": 1351,
											"end": 1382,
											"name": "DUP2"
										},
										{
											"begin": 1351,
											"end": 1382,
											"name": "MSTORE"
										},
										{
											"begin": 1351,
											"end": 1382,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1351,
											"end": 1382,
											"name": "ADD"
										},
										{
											"begin": 1351,
											"end": 1382,
											"name": "SWAP2"
										},
										{
											"begin": 1351,
											"end": 1382,
											"name": "POP"
										},
										{
											"begin": 1351,
											"end": 1382,
											"name": "POP"
										},
										{
											"begin": 1351,
											"end": 1382,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1351,
											"end": 1382,
											"name": "MLOAD"
										},
										{
											"begin": 1351,
											"end": 1382,
											"name": "DUP1"
										},
										{
											"begin": 1351,
											"end": 1382,
											"name": "SWAP2"
										},
										{
											"begin": 1351,
											"end": 1382,
											"name": "SUB"
										},
										{
											"begin": 1351,
											"end": 1382,
											"name": "SWAP1"
										},
										{
											"begin": 1351,
											"end": 1382,
											"name": "RETURN"
										},
										{
											"begin": 899,
											"end": 976,
											"name": "tag",
											"value": "14"
										},
										{
											"begin": 899,
											"end": 976,
											"name": "JUMPDEST"
										},
										{
											"begin": 899,
											"end": 976,
											"name": "PUSH [tag]",
											"value": "54"
										},
										{
											"begin": 899,
											"end": 976,
											"name": "PUSH [tag]",
											"value": "55"
										},
										{
											"begin": 899,
											"end": 976,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 899,
											"end": 976,
											"name": "tag",
											"value": "54"
										},
										{
											"begin": 899,
											"end": 976,
											"name": "JUMPDEST"
										},
										{
											"begin": 899,
											"end": 976,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 899,
											"end": 976,
											"name": "MLOAD"
										},
										{
											"begin": 899,
											"end": 976,
											"name": "DUP1"
										},
										{
											"begin": 899,
											"end": 976,
											"name": "DUP3"
										},
										{
											"begin": 899,
											"end": 976,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 899,
											"end": 976,
											"name": "AND"
										},
										{
											"begin": 899,
											"end": 976,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 899,
											"end": 976,
											"name": "AND"
										},
										{
											"begin": 899,
											"end": 976,
											"name": "DUP2"
										},
										{
											"begin": 899,
											"end": 976,
											"name": "MSTORE"
										},
										{
											"begin": 899,
											"end": 976,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 899,
											"end": 976,
											"name": "ADD"
										},
										{
											"begin": 899,
											"end": 976,
											"name": "SWAP2"
										},
										{
											"begin": 899,
											"end": 976,
											"name": "POP"
										},
										{
											"begin": 899,
											"end": 976,
											"name": "POP"
										},
										{
											"begin": 899,
											"end": 976,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 899,
											"end": 976,
											"name": "MLOAD"
										},
										{
											"begin": 899,
											"end": 976,
											"name": "DUP1"
										},
										{
											"begin": 899,
											"end": 976,
											"name": "SWAP2"
										},
										{
											"begin": 899,
											"end": 976,
											"name": "SUB"
										},
										{
											"begin": 899,
											"end": 976,
											"name": "SWAP1"
										},
										{
											"begin": 899,
											"end": 976,
											"name": "RETURN"
										},
										{
											"begin": 1250,
											"end": 1342,
											"name": "tag",
											"value": "15"
										},
										{
											"begin": 1250,
											"end": 1342,
											"name": "JUMPDEST"
										},
										{
											"begin": 1250,
											"end": 1342,
											"name": "PUSH [tag]",
											"value": "56"
										},
										{
											"begin": 1250,
											"end": 1342,
											"name": "PUSH [tag]",
											"value": "57"
										},
										{
											"begin": 1250,
											"end": 1342,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1250,
											"end": 1342,
											"name": "tag",
											"value": "56"
										},
										{
											"begin": 1250,
											"end": 1342,
											"name": "JUMPDEST"
										},
										{
											"begin": 1250,
											"end": 1342,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1250,
											"end": 1342,
											"name": "MLOAD"
										},
										{
											"begin": 1250,
											"end": 1342,
											"name": "DUP1"
										},
										{
											"begin": 1250,
											"end": 1342,
											"name": "DUP3"
										},
										{
											"begin": 1250,
											"end": 1342,
											"name": "ISZERO"
										},
										{
											"begin": 1250,
											"end": 1342,
											"name": "ISZERO"
										},
										{
											"begin": 1250,
											"end": 1342,
											"name": "ISZERO"
										},
										{
											"begin": 1250,
											"end": 1342,
											"name": "ISZERO"
										},
										{
											"begin": 1250,
											"end": 1342,
											"name": "DUP2"
										},
										{
											"begin": 1250,
											"end": 1342,
											"name": "MSTORE"
										},
										{
											"begin": 1250,
											"end": 1342,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1250,
											"end": 1342,
											"name": "ADD"
										},
										{
											"begin": 1250,
											"end": 1342,
											"name": "SWAP2"
										},
										{
											"begin": 1250,
											"end": 1342,
											"name": "POP"
										},
										{
											"begin": 1250,
											"end": 1342,
											"name": "POP"
										},
										{
											"begin": 1250,
											"end": 1342,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1250,
											"end": 1342,
											"name": "MLOAD"
										},
										{
											"begin": 1250,
											"end": 1342,
											"name": "DUP1"
										},
										{
											"begin": 1250,
											"end": 1342,
											"name": "SWAP2"
										},
										{
											"begin": 1250,
											"end": 1342,
											"name": "SUB"
										},
										{
											"begin": 1250,
											"end": 1342,
											"name": "SWAP1"
										},
										{
											"begin": 1250,
											"end": 1342,
											"name": "RETURN"
										},
										{
											"begin": 5965,
											"end": 6167,
											"name": "tag",
											"value": "16"
										},
										{
											"begin": 5965,
											"end": 6167,
											"name": "JUMPDEST"
										},
										{
											"begin": 5965,
											"end": 6167,
											"name": "PUSH [tag]",
											"value": "58"
										},
										{
											"begin": 5965,
											"end": 6167,
											"name": "PUSH [tag]",
											"value": "59"
										},
										{
											"begin": 5965,
											"end": 6167,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 5965,
											"end": 6167,
											"name": "tag",
											"value": "58"
										},
										{
											"begin": 5965,
											"end": 6167,
											"name": "JUMPDEST"
										},
										{
											"begin": 5965,
											"end": 6167,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5965,
											"end": 6167,
											"name": "MLOAD"
										},
										{
											"begin": 5965,
											"end": 6167,
											"name": "DUP1"
										},
										{
											"begin": 5965,
											"end": 6167,
											"name": "DUP3"
										},
										{
											"begin": 5965,
											"end": 6167,
											"name": "DUP2"
										},
										{
											"begin": 5965,
											"end": 6167,
											"name": "MSTORE"
										},
										{
											"begin": 5965,
											"end": 6167,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5965,
											"end": 6167,
											"name": "ADD"
										},
										{
											"begin": 5965,
											"end": 6167,
											"name": "SWAP2"
										},
										{
											"begin": 5965,
											"end": 6167,
											"name": "POP"
										},
										{
											"begin": 5965,
											"end": 6167,
											"name": "POP"
										},
										{
											"begin": 5965,
											"end": 6167,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5965,
											"end": 6167,
											"name": "MLOAD"
										},
										{
											"begin": 5965,
											"end": 6167,
											"name": "DUP1"
										},
										{
											"begin": 5965,
											"end": 6167,
											"name": "SWAP2"
										},
										{
											"begin": 5965,
											"end": 6167,
											"name": "SUB"
										},
										{
											"begin": 5965,
											"end": 6167,
											"name": "SWAP1"
										},
										{
											"begin": 5965,
											"end": 6167,
											"name": "RETURN"
										},
										{
											"begin": 1241,
											"end": 1271,
											"name": "tag",
											"value": "17"
										},
										{
											"begin": 1241,
											"end": 1271,
											"name": "JUMPDEST"
										},
										{
											"begin": 1241,
											"end": 1271,
											"name": "PUSH [tag]",
											"value": "60"
										},
										{
											"begin": 1241,
											"end": 1271,
											"name": "PUSH [tag]",
											"value": "61"
										},
										{
											"begin": 1241,
											"end": 1271,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1241,
											"end": 1271,
											"name": "tag",
											"value": "60"
										},
										{
											"begin": 1241,
											"end": 1271,
											"name": "JUMPDEST"
										},
										{
											"begin": 1241,
											"end": 1271,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1241,
											"end": 1271,
											"name": "MLOAD"
										},
										{
											"begin": 1241,
											"end": 1271,
											"name": "DUP1"
										},
										{
											"begin": 1241,
											"end": 1271,
											"name": "DUP3"
										},
										{
											"begin": 1241,
											"end": 1271,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1241,
											"end": 1271,
											"name": "AND"
										},
										{
											"begin": 1241,
											"end": 1271,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1241,
											"end": 1271,
											"name": "AND"
										},
										{
											"begin": 1241,
											"end": 1271,
											"name": "DUP2"
										},
										{
											"begin": 1241,
											"end": 1271,
											"name": "MSTORE"
										},
										{
											"begin": 1241,
											"end": 1271,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1241,
											"end": 1271,
											"name": "ADD"
										},
										{
											"begin": 1241,
											"end": 1271,
											"name": "SWAP2"
										},
										{
											"begin": 1241,
											"end": 1271,
											"name": "POP"
										},
										{
											"begin": 1241,
											"end": 1271,
											"name": "POP"
										},
										{
											"begin": 1241,
											"end": 1271,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1241,
											"end": 1271,
											"name": "MLOAD"
										},
										{
											"begin": 1241,
											"end": 1271,
											"name": "DUP1"
										},
										{
											"begin": 1241,
											"end": 1271,
											"name": "SWAP2"
										},
										{
											"begin": 1241,
											"end": 1271,
											"name": "SUB"
										},
										{
											"begin": 1241,
											"end": 1271,
											"name": "SWAP1"
										},
										{
											"begin": 1241,
											"end": 1271,
											"name": "RETURN"
										},
										{
											"begin": 1172,
											"end": 1202,
											"name": "tag",
											"value": "18"
										},
										{
											"begin": 1172,
											"end": 1202,
											"name": "JUMPDEST"
										},
										{
											"begin": 1172,
											"end": 1202,
											"name": "PUSH [tag]",
											"value": "62"
										},
										{
											"begin": 1172,
											"end": 1202,
											"name": "PUSH [tag]",
											"value": "63"
										},
										{
											"begin": 1172,
											"end": 1202,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1172,
											"end": 1202,
											"name": "tag",
											"value": "62"
										},
										{
											"begin": 1172,
											"end": 1202,
											"name": "JUMPDEST"
										},
										{
											"begin": 1172,
											"end": 1202,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1172,
											"end": 1202,
											"name": "MLOAD"
										},
										{
											"begin": 1172,
											"end": 1202,
											"name": "DUP1"
										},
										{
											"begin": 1172,
											"end": 1202,
											"name": "DUP3"
										},
										{
											"begin": 1172,
											"end": 1202,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1172,
											"end": 1202,
											"name": "AND"
										},
										{
											"begin": 1172,
											"end": 1202,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1172,
											"end": 1202,
											"name": "AND"
										},
										{
											"begin": 1172,
											"end": 1202,
											"name": "DUP2"
										},
										{
											"begin": 1172,
											"end": 1202,
											"name": "MSTORE"
										},
										{
											"begin": 1172,
											"end": 1202,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1172,
											"end": 1202,
											"name": "ADD"
										},
										{
											"begin": 1172,
											"end": 1202,
											"name": "SWAP2"
										},
										{
											"begin": 1172,
											"end": 1202,
											"name": "POP"
										},
										{
											"begin": 1172,
											"end": 1202,
											"name": "POP"
										},
										{
											"begin": 1172,
											"end": 1202,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1172,
											"end": 1202,
											"name": "MLOAD"
										},
										{
											"begin": 1172,
											"end": 1202,
											"name": "DUP1"
										},
										{
											"begin": 1172,
											"end": 1202,
											"name": "SWAP2"
										},
										{
											"begin": 1172,
											"end": 1202,
											"name": "SUB"
										},
										{
											"begin": 1172,
											"end": 1202,
											"name": "SWAP1"
										},
										{
											"begin": 1172,
											"end": 1202,
											"name": "RETURN"
										},
										{
											"begin": 5732,
											"end": 5865,
											"name": "tag",
											"value": "19"
										},
										{
											"begin": 5732,
											"end": 5865,
											"name": "JUMPDEST"
										},
										{
											"begin": 5732,
											"end": 5865,
											"name": "PUSH [tag]",
											"value": "64"
										},
										{
											"begin": 5732,
											"end": 5865,
											"name": "PUSH [tag]",
											"value": "65"
										},
										{
											"begin": 5732,
											"end": 5865,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 5732,
											"end": 5865,
											"name": "tag",
											"value": "64"
										},
										{
											"begin": 5732,
											"end": 5865,
											"name": "JUMPDEST"
										},
										{
											"begin": 5732,
											"end": 5865,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5732,
											"end": 5865,
											"name": "MLOAD"
										},
										{
											"begin": 5732,
											"end": 5865,
											"name": "DUP1"
										},
										{
											"begin": 5732,
											"end": 5865,
											"name": "DUP3"
										},
										{
											"begin": 5732,
											"end": 5865,
											"name": "DUP2"
										},
										{
											"begin": 5732,
											"end": 5865,
											"name": "MSTORE"
										},
										{
											"begin": 5732,
											"end": 5865,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5732,
											"end": 5865,
											"name": "ADD"
										},
										{
											"begin": 5732,
											"end": 5865,
											"name": "SWAP2"
										},
										{
											"begin": 5732,
											"end": 5865,
											"name": "POP"
										},
										{
											"begin": 5732,
											"end": 5865,
											"name": "POP"
										},
										{
											"begin": 5732,
											"end": 5865,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5732,
											"end": 5865,
											"name": "MLOAD"
										},
										{
											"begin": 5732,
											"end": 5865,
											"name": "DUP1"
										},
										{
											"begin": 5732,
											"end": 5865,
											"name": "SWAP2"
										},
										{
											"begin": 5732,
											"end": 5865,
											"name": "SUB"
										},
										{
											"begin": 5732,
											"end": 5865,
											"name": "SWAP1"
										},
										{
											"begin": 5732,
											"end": 5865,
											"name": "RETURN"
										},
										{
											"begin": 1277,
											"end": 1307,
											"name": "tag",
											"value": "20"
										},
										{
											"begin": 1277,
											"end": 1307,
											"name": "JUMPDEST"
										},
										{
											"begin": 1277,
											"end": 1307,
											"name": "PUSH [tag]",
											"value": "66"
										},
										{
											"begin": 1277,
											"end": 1307,
											"name": "PUSH [tag]",
											"value": "67"
										},
										{
											"begin": 1277,
											"end": 1307,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1277,
											"end": 1307,
											"name": "tag",
											"value": "66"
										},
										{
											"begin": 1277,
											"end": 1307,
											"name": "JUMPDEST"
										},
										{
											"begin": 1277,
											"end": 1307,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1277,
											"end": 1307,
											"name": "MLOAD"
										},
										{
											"begin": 1277,
											"end": 1307,
											"name": "DUP1"
										},
										{
											"begin": 1277,
											"end": 1307,
											"name": "DUP3"
										},
										{
											"begin": 1277,
											"end": 1307,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1277,
											"end": 1307,
											"name": "AND"
										},
										{
											"begin": 1277,
											"end": 1307,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1277,
											"end": 1307,
											"name": "AND"
										},
										{
											"begin": 1277,
											"end": 1307,
											"name": "DUP2"
										},
										{
											"begin": 1277,
											"end": 1307,
											"name": "MSTORE"
										},
										{
											"begin": 1277,
											"end": 1307,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1277,
											"end": 1307,
											"name": "ADD"
										},
										{
											"begin": 1277,
											"end": 1307,
											"name": "SWAP2"
										},
										{
											"begin": 1277,
											"end": 1307,
											"name": "POP"
										},
										{
											"begin": 1277,
											"end": 1307,
											"name": "POP"
										},
										{
											"begin": 1277,
											"end": 1307,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1277,
											"end": 1307,
											"name": "MLOAD"
										},
										{
											"begin": 1277,
											"end": 1307,
											"name": "DUP1"
										},
										{
											"begin": 1277,
											"end": 1307,
											"name": "SWAP2"
										},
										{
											"begin": 1277,
											"end": 1307,
											"name": "SUB"
										},
										{
											"begin": 1277,
											"end": 1307,
											"name": "SWAP1"
										},
										{
											"begin": 1277,
											"end": 1307,
											"name": "RETURN"
										},
										{
											"begin": 1970,
											"end": 2077,
											"name": "tag",
											"value": "21"
										},
										{
											"begin": 1970,
											"end": 2077,
											"name": "JUMPDEST"
										},
										{
											"begin": 1970,
											"end": 2077,
											"name": "PUSH [tag]",
											"value": "68"
										},
										{
											"begin": 1970,
											"end": 2077,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1970,
											"end": 2077,
											"name": "DUP1"
										},
										{
											"begin": 1970,
											"end": 2077,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 1970,
											"end": 2077,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "69"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "69"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 1970,
											"end": 2077,
											"name": "DUP2"
										},
										{
											"begin": 1970,
											"end": 2077,
											"name": "ADD"
										},
										{
											"begin": 1970,
											"end": 2077,
											"name": "SWAP1"
										},
										{
											"begin": 1970,
											"end": 2077,
											"name": "DUP1"
										},
										{
											"begin": 1970,
											"end": 2077,
											"name": "DUP1"
										},
										{
											"begin": 1970,
											"end": 2077,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 1970,
											"end": 2077,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1970,
											"end": 2077,
											"name": "AND"
										},
										{
											"begin": 1970,
											"end": 2077,
											"name": "SWAP1"
										},
										{
											"begin": 1970,
											"end": 2077,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1970,
											"end": 2077,
											"name": "ADD"
										},
										{
											"begin": 1970,
											"end": 2077,
											"name": "SWAP1"
										},
										{
											"begin": 1970,
											"end": 2077,
											"name": "SWAP3"
										},
										{
											"begin": 1970,
											"end": 2077,
											"name": "SWAP2"
										},
										{
											"begin": 1970,
											"end": 2077,
											"name": "SWAP1"
										},
										{
											"begin": 1970,
											"end": 2077,
											"name": "POP"
										},
										{
											"begin": 1970,
											"end": 2077,
											"name": "POP"
										},
										{
											"begin": 1970,
											"end": 2077,
											"name": "POP"
										},
										{
											"begin": 1970,
											"end": 2077,
											"name": "PUSH [tag]",
											"value": "70"
										},
										{
											"begin": 1970,
											"end": 2077,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1970,
											"end": 2077,
											"name": "tag",
											"value": "68"
										},
										{
											"begin": 1970,
											"end": 2077,
											"name": "JUMPDEST"
										},
										{
											"begin": 1970,
											"end": 2077,
											"name": "STOP"
										},
										{
											"begin": 1415,
											"end": 1489,
											"name": "tag",
											"value": "22"
										},
										{
											"begin": 1415,
											"end": 1489,
											"name": "JUMPDEST"
										},
										{
											"begin": 1415,
											"end": 1489,
											"name": "PUSH [tag]",
											"value": "71"
										},
										{
											"begin": 1415,
											"end": 1489,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1415,
											"end": 1489,
											"name": "DUP1"
										},
										{
											"begin": 1415,
											"end": 1489,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 1415,
											"end": 1489,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "72"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "72"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 1415,
											"end": 1489,
											"name": "DUP2"
										},
										{
											"begin": 1415,
											"end": 1489,
											"name": "ADD"
										},
										{
											"begin": 1415,
											"end": 1489,
											"name": "SWAP1"
										},
										{
											"begin": 1415,
											"end": 1489,
											"name": "DUP1"
										},
										{
											"begin": 1415,
											"end": 1489,
											"name": "DUP1"
										},
										{
											"begin": 1415,
											"end": 1489,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 1415,
											"end": 1489,
											"name": "SWAP1"
										},
										{
											"begin": 1415,
											"end": 1489,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1415,
											"end": 1489,
											"name": "ADD"
										},
										{
											"begin": 1415,
											"end": 1489,
											"name": "SWAP1"
										},
										{
											"begin": 1415,
											"end": 1489,
											"name": "SWAP3"
										},
										{
											"begin": 1415,
											"end": 1489,
											"name": "SWAP2"
										},
										{
											"begin": 1415,
											"end": 1489,
											"name": "SWAP1"
										},
										{
											"begin": 1415,
											"end": 1489,
											"name": "POP"
										},
										{
											"begin": 1415,
											"end": 1489,
											"name": "POP"
										},
										{
											"begin": 1415,
											"end": 1489,
											"name": "POP"
										},
										{
											"begin": 1415,
											"end": 1489,
											"name": "PUSH [tag]",
											"value": "73"
										},
										{
											"begin": 1415,
											"end": 1489,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1415,
											"end": 1489,
											"name": "tag",
											"value": "71"
										},
										{
											"begin": 1415,
											"end": 1489,
											"name": "JUMPDEST"
										},
										{
											"begin": 1415,
											"end": 1489,
											"name": "STOP"
										},
										{
											"begin": 1388,
											"end": 1404,
											"name": "tag",
											"value": "27"
										},
										{
											"begin": 1388,
											"end": 1404,
											"name": "JUMPDEST"
										},
										{
											"begin": 1388,
											"end": 1404,
											"name": "PUSH",
											"value": "3A"
										},
										{
											"begin": 1388,
											"end": 1404,
											"name": "SLOAD"
										},
										{
											"begin": 1388,
											"end": 1404,
											"name": "DUP2"
										},
										{
											"begin": 1388,
											"end": 1404,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 2612,
											"end": 3742,
											"name": "tag",
											"value": "30"
										},
										{
											"begin": 2612,
											"end": 3742,
											"name": "JUMPDEST"
										},
										{
											"begin": 2683,
											"end": 2712,
											"name": "PUSH [tag]",
											"value": "75"
										},
										{
											"begin": 2683,
											"end": 2712,
											"name": "PUSH [tag]",
											"value": "76"
										},
										{
											"begin": 2683,
											"end": 2712,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2683,
											"end": 2712,
											"name": "tag",
											"value": "75"
										},
										{
											"begin": 2683,
											"end": 2712,
											"name": "JUMPDEST"
										},
										{
											"begin": 2733,
											"end": 2748,
											"name": "PUSH",
											"value": "34"
										},
										{
											"begin": 2733,
											"end": 2748,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2733,
											"end": 2748,
											"name": "SWAP1"
										},
										{
											"begin": 2733,
											"end": 2748,
											"name": "SLOAD"
										},
										{
											"begin": 2733,
											"end": 2748,
											"name": "SWAP1"
										},
										{
											"begin": 2733,
											"end": 2748,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 2733,
											"end": 2748,
											"name": "EXP"
										},
										{
											"begin": 2733,
											"end": 2748,
											"name": "SWAP1"
										},
										{
											"begin": 2733,
											"end": 2748,
											"name": "DIV"
										},
										{
											"begin": 2733,
											"end": 2748,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2733,
											"end": 2748,
											"name": "AND"
										},
										{
											"begin": 2715,
											"end": 2766,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2715,
											"end": 2766,
											"name": "AND"
										},
										{
											"begin": 2715,
											"end": 2766,
											"name": "PUSH",
											"value": "FB6D3A89"
										},
										{
											"begin": 2715,
											"end": 2768,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2715,
											"end": 2768,
											"name": "MLOAD"
										},
										{
											"begin": 2715,
											"end": 2768,
											"name": "DUP2"
										},
										{
											"begin": 2715,
											"end": 2768,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 2715,
											"end": 2768,
											"name": "AND"
										},
										{
											"begin": 2715,
											"end": 2768,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 2715,
											"end": 2768,
											"name": "SHL"
										},
										{
											"begin": 2715,
											"end": 2768,
											"name": "DUP2"
										},
										{
											"begin": 2715,
											"end": 2768,
											"name": "MSTORE"
										},
										{
											"begin": 2715,
											"end": 2768,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 2715,
											"end": 2768,
											"name": "ADD"
										},
										{
											"begin": 2715,
											"end": 2768,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 2715,
											"end": 2768,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2715,
											"end": 2768,
											"name": "MLOAD"
										},
										{
											"begin": 2715,
											"end": 2768,
											"name": "DUP1"
										},
										{
											"begin": 2715,
											"end": 2768,
											"name": "DUP4"
										},
										{
											"begin": 2715,
											"end": 2768,
											"name": "SUB"
										},
										{
											"begin": 2715,
											"end": 2768,
											"name": "DUP2"
										},
										{
											"begin": 2715,
											"end": 2768,
											"name": "DUP7"
										},
										{
											"begin": 2715,
											"end": 2768,
											"name": "DUP1"
										},
										{
											"begin": 2715,
											"end": 2768,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 2715,
											"end": 2768,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "77"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "77"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 2715,
											"end": 2768,
											"name": "POP"
										},
										{
											"begin": 2715,
											"end": 2768,
											"name": "GAS"
										},
										{
											"begin": 2715,
											"end": 2768,
											"name": "STATICCALL"
										},
										{
											"begin": 2715,
											"end": 2768,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "78"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "78"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 2715,
											"end": 2768,
											"name": "POP"
										},
										{
											"begin": 2715,
											"end": 2768,
											"name": "POP"
										},
										{
											"begin": 2715,
											"end": 2768,
											"name": "POP"
										},
										{
											"begin": 2715,
											"end": 2768,
											"name": "POP"
										},
										{
											"begin": 2715,
											"end": 2768,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2715,
											"end": 2768,
											"name": "MLOAD"
										},
										{
											"begin": 2715,
											"end": 2768,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 101,
											"end": 105,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 97,
											"end": 106,
											"name": "NOT"
										},
										{
											"begin": 90,
											"end": 94,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 84,
											"end": 88,
											"name": "DUP3"
										},
										{
											"begin": 80,
											"end": 95,
											"name": "ADD"
										},
										{
											"begin": 76,
											"end": 107,
											"name": "AND"
										},
										{
											"begin": 69,
											"end": 74,
											"name": "DUP3"
										},
										{
											"begin": 65,
											"end": 108,
											"name": "ADD"
										},
										{
											"begin": 126,
											"end": 132,
											"name": "DUP1"
										},
										{
											"begin": 120,
											"end": 124,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 113,
											"end": 133,
											"name": "MSTORE"
										},
										{
											"begin": 0,
											"end": 138,
											"name": "POP"
										},
										{
											"begin": 13,
											"end": 16,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 17,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "79"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "79"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 2715,
											"end": 2768,
											"name": "DUP2"
										},
										{
											"begin": 2715,
											"end": 2768,
											"name": "ADD"
										},
										{
											"begin": 2715,
											"end": 2768,
											"name": "SWAP1"
										},
										{
											"begin": 2715,
											"end": 2768,
											"name": "DUP1"
										},
										{
											"begin": 2715,
											"end": 2768,
											"name": "SWAP2"
										},
										{
											"begin": 2715,
											"end": 2768,
											"name": "SWAP1"
										},
										{
											"begin": 2715,
											"end": 2768,
											"name": "POP"
										},
										{
											"begin": 2715,
											"end": 2768,
											"name": "POP"
										},
										{
											"begin": 2683,
											"end": 2768,
											"name": "SWAP1"
										},
										{
											"begin": 2683,
											"end": 2768,
											"name": "POP"
										},
										{
											"begin": 2784,
											"end": 2793,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2796,
											"end": 2797,
											"name": "DUP1"
										},
										{
											"begin": 2784,
											"end": 2797,
											"name": "SWAP1"
										},
										{
											"begin": 2784,
											"end": 2797,
											"name": "POP"
										},
										{
											"begin": 2779,
											"end": 3012,
											"name": "tag",
											"value": "80"
										},
										{
											"begin": 2779,
											"end": 3012,
											"name": "JUMPDEST"
										},
										{
											"begin": 2803,
											"end": 2821,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 2799,
											"end": 2800,
											"name": "DUP2"
										},
										{
											"begin": 2799,
											"end": 2821,
											"name": "LT"
										},
										{
											"begin": 2779,
											"end": 3012,
											"name": "ISZERO"
										},
										{
											"begin": 2779,
											"end": 3012,
											"name": "PUSH [tag]",
											"value": "81"
										},
										{
											"begin": 2779,
											"end": 3012,
											"name": "JUMPI"
										},
										{
											"begin": 2842,
											"end": 2923,
											"name": "PUSH [tag]",
											"value": "83"
										},
										{
											"begin": 2882,
											"end": 2894,
											"name": "PUSH [tag]",
											"value": "84"
										},
										{
											"begin": 2882,
											"end": 2892,
											"name": "PUSH [tag]",
											"value": "85"
										},
										{
											"begin": 2882,
											"end": 2894,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2882,
											"end": 2894,
											"name": "tag",
											"value": "84"
										},
										{
											"begin": 2882,
											"end": 2894,
											"name": "JUMPDEST"
										},
										{
											"begin": 2904,
											"end": 2908,
											"name": "ADDRESS"
										},
										{
											"begin": 2911,
											"end": 2919,
											"name": "DUP6"
										},
										{
											"begin": 2920,
											"end": 2921,
											"name": "DUP5"
										},
										{
											"begin": 2911,
											"end": 2922,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 2911,
											"end": 2922,
											"name": "DUP2"
										},
										{
											"begin": 2911,
											"end": 2922,
											"name": "LT"
										},
										{
											"begin": 2911,
											"end": 2922,
											"name": "PUSH [tag]",
											"value": "86"
										},
										{
											"begin": 2911,
											"end": 2922,
											"name": "JUMPI"
										},
										{
											"begin": 2911,
											"end": 2922,
											"name": "INVALID"
										},
										{
											"begin": 2911,
											"end": 2922,
											"name": "tag",
											"value": "86"
										},
										{
											"begin": 2911,
											"end": 2922,
											"name": "JUMPDEST"
										},
										{
											"begin": 2911,
											"end": 2922,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2911,
											"end": 2922,
											"name": "MUL"
										},
										{
											"begin": 2911,
											"end": 2922,
											"name": "ADD"
										},
										{
											"begin": 2911,
											"end": 2922,
											"name": "MLOAD"
										},
										{
											"begin": 2849,
											"end": 2860,
											"name": "DUP6"
										},
										{
											"begin": 2861,
											"end": 2862,
											"name": "DUP6"
										},
										{
											"begin": 2849,
											"end": 2863,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 2849,
											"end": 2863,
											"name": "DUP2"
										},
										{
											"begin": 2849,
											"end": 2863,
											"name": "LT"
										},
										{
											"begin": 2849,
											"end": 2863,
											"name": "PUSH [tag]",
											"value": "87"
										},
										{
											"begin": 2849,
											"end": 2863,
											"name": "JUMPI"
										},
										{
											"begin": 2849,
											"end": 2863,
											"name": "INVALID"
										},
										{
											"begin": 2849,
											"end": 2863,
											"name": "tag",
											"value": "87"
										},
										{
											"begin": 2849,
											"end": 2863,
											"name": "JUMPDEST"
										},
										{
											"begin": 2849,
											"end": 2863,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2849,
											"end": 2863,
											"name": "MUL"
										},
										{
											"begin": 2849,
											"end": 2863,
											"name": "ADD"
										},
										{
											"begin": 2849,
											"end": 2863,
											"name": "MLOAD"
										},
										{
											"begin": 2842,
											"end": 2881,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2842,
											"end": 2881,
											"name": "AND"
										},
										{
											"begin": 2842,
											"end": 2881,
											"name": "PUSH [tag]",
											"value": "88"
										},
										{
											"begin": 2842,
											"end": 2881,
											"name": "SWAP1"
										},
										{
											"begin": 2842,
											"end": 2923,
											"name": "SWAP4"
										},
										{
											"begin": 2842,
											"end": 2923,
											"name": "SWAP3"
										},
										{
											"begin": 2842,
											"end": 2923,
											"name": "SWAP2"
										},
										{
											"begin": 2842,
											"end": 2923,
											"name": "SWAP1"
										},
										{
											"begin": 2842,
											"end": 2923,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 2842,
											"end": 2923,
											"name": "AND"
										},
										{
											"begin": 2842,
											"end": 2923,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2842,
											"end": 2923,
											"name": "tag",
											"value": "83"
										},
										{
											"begin": 2842,
											"end": 2923,
											"name": "JUMPDEST"
										},
										{
											"begin": 2937,
											"end": 3001,
											"name": "PUSH [tag]",
											"value": "89"
										},
										{
											"begin": 2972,
											"end": 2987,
											"name": "PUSH",
											"value": "34"
										},
										{
											"begin": 2972,
											"end": 2987,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2972,
											"end": 2987,
											"name": "SWAP1"
										},
										{
											"begin": 2972,
											"end": 2987,
											"name": "SLOAD"
										},
										{
											"begin": 2972,
											"end": 2987,
											"name": "SWAP1"
										},
										{
											"begin": 2972,
											"end": 2987,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 2972,
											"end": 2987,
											"name": "EXP"
										},
										{
											"begin": 2972,
											"end": 2987,
											"name": "SWAP1"
										},
										{
											"begin": 2972,
											"end": 2987,
											"name": "DIV"
										},
										{
											"begin": 2972,
											"end": 2987,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2972,
											"end": 2987,
											"name": "AND"
										},
										{
											"begin": 2989,
											"end": 2997,
											"name": "DUP5"
										},
										{
											"begin": 2998,
											"end": 2999,
											"name": "DUP4"
										},
										{
											"begin": 2989,
											"end": 3000,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 2989,
											"end": 3000,
											"name": "DUP2"
										},
										{
											"begin": 2989,
											"end": 3000,
											"name": "LT"
										},
										{
											"begin": 2989,
											"end": 3000,
											"name": "PUSH [tag]",
											"value": "90"
										},
										{
											"begin": 2989,
											"end": 3000,
											"name": "JUMPI"
										},
										{
											"begin": 2989,
											"end": 3000,
											"name": "INVALID"
										},
										{
											"begin": 2989,
											"end": 3000,
											"name": "tag",
											"value": "90"
										},
										{
											"begin": 2989,
											"end": 3000,
											"name": "JUMPDEST"
										},
										{
											"begin": 2989,
											"end": 3000,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2989,
											"end": 3000,
											"name": "MUL"
										},
										{
											"begin": 2989,
											"end": 3000,
											"name": "ADD"
										},
										{
											"begin": 2989,
											"end": 3000,
											"name": "MLOAD"
										},
										{
											"begin": 2944,
											"end": 2955,
											"name": "DUP5"
										},
										{
											"begin": 2956,
											"end": 2957,
											"name": "DUP5"
										},
										{
											"begin": 2944,
											"end": 2958,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 2944,
											"end": 2958,
											"name": "DUP2"
										},
										{
											"begin": 2944,
											"end": 2958,
											"name": "LT"
										},
										{
											"begin": 2944,
											"end": 2958,
											"name": "PUSH [tag]",
											"value": "91"
										},
										{
											"begin": 2944,
											"end": 2958,
											"name": "JUMPI"
										},
										{
											"begin": 2944,
											"end": 2958,
											"name": "INVALID"
										},
										{
											"begin": 2944,
											"end": 2958,
											"name": "tag",
											"value": "91"
										},
										{
											"begin": 2944,
											"end": 2958,
											"name": "JUMPDEST"
										},
										{
											"begin": 2944,
											"end": 2958,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2944,
											"end": 2958,
											"name": "MUL"
										},
										{
											"begin": 2944,
											"end": 2958,
											"name": "ADD"
										},
										{
											"begin": 2944,
											"end": 2958,
											"name": "MLOAD"
										},
										{
											"begin": 2937,
											"end": 2971,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2937,
											"end": 2971,
											"name": "AND"
										},
										{
											"begin": 2937,
											"end": 2971,
											"name": "PUSH [tag]",
											"value": "92"
										},
										{
											"begin": 2937,
											"end": 2971,
											"name": "SWAP1"
										},
										{
											"begin": 2937,
											"end": 3001,
											"name": "SWAP3"
										},
										{
											"begin": 2937,
											"end": 3001,
											"name": "SWAP2"
										},
										{
											"begin": 2937,
											"end": 3001,
											"name": "SWAP1"
										},
										{
											"begin": 2937,
											"end": 3001,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 2937,
											"end": 3001,
											"name": "AND"
										},
										{
											"begin": 2937,
											"end": 3001,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2937,
											"end": 3001,
											"name": "tag",
											"value": "89"
										},
										{
											"begin": 2937,
											"end": 3001,
											"name": "JUMPDEST"
										},
										{
											"begin": 2823,
											"end": 2826,
											"name": "DUP1"
										},
										{
											"begin": 2823,
											"end": 2826,
											"name": "DUP1"
										},
										{
											"begin": 2823,
											"end": 2826,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2823,
											"end": 2826,
											"name": "ADD"
										},
										{
											"begin": 2823,
											"end": 2826,
											"name": "SWAP2"
										},
										{
											"begin": 2823,
											"end": 2826,
											"name": "POP"
										},
										{
											"begin": 2823,
											"end": 2826,
											"name": "POP"
										},
										{
											"begin": 2779,
											"end": 3012,
											"name": "PUSH [tag]",
											"value": "80"
										},
										{
											"begin": 2779,
											"end": 3012,
											"name": "JUMP"
										},
										{
											"begin": 2779,
											"end": 3012,
											"name": "tag",
											"value": "81"
										},
										{
											"begin": 2779,
											"end": 3012,
											"name": "JUMPDEST"
										},
										{
											"begin": 2779,
											"end": 3012,
											"name": "POP"
										},
										{
											"begin": 3106,
											"end": 3121,
											"name": "PUSH",
											"value": "34"
										},
										{
											"begin": 3106,
											"end": 3121,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3106,
											"end": 3121,
											"name": "SWAP1"
										},
										{
											"begin": 3106,
											"end": 3121,
											"name": "SLOAD"
										},
										{
											"begin": 3106,
											"end": 3121,
											"name": "SWAP1"
										},
										{
											"begin": 3106,
											"end": 3121,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 3106,
											"end": 3121,
											"name": "EXP"
										},
										{
											"begin": 3106,
											"end": 3121,
											"name": "SWAP1"
										},
										{
											"begin": 3106,
											"end": 3121,
											"name": "DIV"
										},
										{
											"begin": 3106,
											"end": 3121,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3106,
											"end": 3121,
											"name": "AND"
										},
										{
											"begin": 3088,
											"end": 3136,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3088,
											"end": 3136,
											"name": "AND"
										},
										{
											"begin": 3088,
											"end": 3136,
											"name": "PUSH",
											"value": "29B2F34"
										},
										{
											"begin": 3137,
											"end": 3145,
											"name": "DUP4"
										},
										{
											"begin": 3147,
											"end": 3148,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3088,
											"end": 3149,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3088,
											"end": 3149,
											"name": "MLOAD"
										},
										{
											"begin": 3088,
											"end": 3149,
											"name": "DUP4"
										},
										{
											"begin": 3088,
											"end": 3149,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 3088,
											"end": 3149,
											"name": "AND"
										},
										{
											"begin": 3088,
											"end": 3149,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 3088,
											"end": 3149,
											"name": "SHL"
										},
										{
											"begin": 3088,
											"end": 3149,
											"name": "DUP2"
										},
										{
											"begin": 3088,
											"end": 3149,
											"name": "MSTORE"
										},
										{
											"begin": 3088,
											"end": 3149,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 3088,
											"end": 3149,
											"name": "ADD"
										},
										{
											"begin": 3088,
											"end": 3149,
											"name": "DUP1"
										},
										{
											"begin": 3088,
											"end": 3149,
											"name": "DUP4"
										},
										{
											"begin": 3088,
											"end": 3149,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 3088,
											"end": 3149,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3088,
											"end": 3149,
											"name": "MUL"
										},
										{
											"begin": 3088,
											"end": 3149,
											"name": "DUP1"
										},
										{
											"begin": 3088,
											"end": 3149,
											"name": "DUP4"
										},
										{
											"begin": 3088,
											"end": 3149,
											"name": "DUP4"
										},
										{
											"begin": 23,
											"end": 24,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "93"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP4"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "DUP2"
										},
										{
											"begin": 27,
											"end": 37,
											"name": "LT"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "95"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI"
										},
										{
											"begin": 99,
											"end": 100,
											"name": "DUP1"
										},
										{
											"begin": 94,
											"end": 97,
											"name": "DUP3"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 84,
											"end": 102,
											"name": "MLOAD"
										},
										{
											"begin": 80,
											"end": 81,
											"name": "DUP2"
										},
										{
											"begin": 75,
											"end": 78,
											"name": "DUP5"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "ADD"
										},
										{
											"begin": 64,
											"end": 103,
											"name": "MSTORE"
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 49,
											"end": 50,
											"name": "DUP2"
										},
										{
											"begin": 45,
											"end": 55,
											"name": "ADD"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "SWAP1"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "POP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "93"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "95"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "POP"
										},
										{
											"begin": 3088,
											"end": 3149,
											"name": "POP"
										},
										{
											"begin": 3088,
											"end": 3149,
											"name": "POP"
										},
										{
											"begin": 3088,
											"end": 3149,
											"name": "POP"
										},
										{
											"begin": 3088,
											"end": 3149,
											"name": "SWAP1"
										},
										{
											"begin": 3088,
											"end": 3149,
											"name": "POP"
										},
										{
											"begin": 3088,
											"end": 3149,
											"name": "ADD"
										},
										{
											"begin": 3088,
											"end": 3149,
											"name": "DUP3"
										},
										{
											"begin": 3088,
											"end": 3149,
											"name": "DUP2"
										},
										{
											"begin": 3088,
											"end": 3149,
											"name": "MSTORE"
										},
										{
											"begin": 3088,
											"end": 3149,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3088,
											"end": 3149,
											"name": "ADD"
										},
										{
											"begin": 3088,
											"end": 3149,
											"name": "SWAP3"
										},
										{
											"begin": 3088,
											"end": 3149,
											"name": "POP"
										},
										{
											"begin": 3088,
											"end": 3149,
											"name": "POP"
										},
										{
											"begin": 3088,
											"end": 3149,
											"name": "POP"
										},
										{
											"begin": 3088,
											"end": 3149,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3088,
											"end": 3149,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3088,
											"end": 3149,
											"name": "MLOAD"
										},
										{
											"begin": 3088,
											"end": 3149,
											"name": "DUP1"
										},
										{
											"begin": 3088,
											"end": 3149,
											"name": "DUP4"
										},
										{
											"begin": 3088,
											"end": 3149,
											"name": "SUB"
										},
										{
											"begin": 3088,
											"end": 3149,
											"name": "DUP2"
										},
										{
											"begin": 3088,
											"end": 3149,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3088,
											"end": 3149,
											"name": "DUP8"
										},
										{
											"begin": 3088,
											"end": 3149,
											"name": "DUP1"
										},
										{
											"begin": 3088,
											"end": 3149,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 3088,
											"end": 3149,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "96"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "96"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 3088,
											"end": 3149,
											"name": "POP"
										},
										{
											"begin": 3088,
											"end": 3149,
											"name": "GAS"
										},
										{
											"begin": 3088,
											"end": 3149,
											"name": "CALL"
										},
										{
											"begin": 3088,
											"end": 3149,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "97"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "97"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 3088,
											"end": 3149,
											"name": "POP"
										},
										{
											"begin": 3088,
											"end": 3149,
											"name": "POP"
										},
										{
											"begin": 3088,
											"end": 3149,
											"name": "POP"
										},
										{
											"begin": 3088,
											"end": 3149,
											"name": "POP"
										},
										{
											"begin": 3262,
											"end": 3284,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3294,
											"end": 3309,
											"name": "PUSH",
											"value": "36"
										},
										{
											"begin": 3294,
											"end": 3309,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3294,
											"end": 3309,
											"name": "SWAP1"
										},
										{
											"begin": 3294,
											"end": 3309,
											"name": "SLOAD"
										},
										{
											"begin": 3294,
											"end": 3309,
											"name": "SWAP1"
										},
										{
											"begin": 3294,
											"end": 3309,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 3294,
											"end": 3309,
											"name": "EXP"
										},
										{
											"begin": 3294,
											"end": 3309,
											"name": "SWAP1"
										},
										{
											"begin": 3294,
											"end": 3309,
											"name": "DIV"
										},
										{
											"begin": 3294,
											"end": 3309,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3294,
											"end": 3309,
											"name": "AND"
										},
										{
											"begin": 3287,
											"end": 3320,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3287,
											"end": 3320,
											"name": "AND"
										},
										{
											"begin": 3287,
											"end": 3320,
											"name": "PUSH",
											"value": "70A08231"
										},
										{
											"begin": 3329,
											"end": 3333,
											"name": "ADDRESS"
										},
										{
											"begin": 3287,
											"end": 3335,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3287,
											"end": 3335,
											"name": "MLOAD"
										},
										{
											"begin": 3287,
											"end": 3335,
											"name": "DUP3"
										},
										{
											"begin": 3287,
											"end": 3335,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 3287,
											"end": 3335,
											"name": "AND"
										},
										{
											"begin": 3287,
											"end": 3335,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 3287,
											"end": 3335,
											"name": "SHL"
										},
										{
											"begin": 3287,
											"end": 3335,
											"name": "DUP2"
										},
										{
											"begin": 3287,
											"end": 3335,
											"name": "MSTORE"
										},
										{
											"begin": 3287,
											"end": 3335,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 3287,
											"end": 3335,
											"name": "ADD"
										},
										{
											"begin": 3287,
											"end": 3335,
											"name": "DUP1"
										},
										{
											"begin": 3287,
											"end": 3335,
											"name": "DUP3"
										},
										{
											"begin": 3287,
											"end": 3335,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3287,
											"end": 3335,
											"name": "AND"
										},
										{
											"begin": 3287,
											"end": 3335,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3287,
											"end": 3335,
											"name": "AND"
										},
										{
											"begin": 3287,
											"end": 3335,
											"name": "DUP2"
										},
										{
											"begin": 3287,
											"end": 3335,
											"name": "MSTORE"
										},
										{
											"begin": 3287,
											"end": 3335,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3287,
											"end": 3335,
											"name": "ADD"
										},
										{
											"begin": 3287,
											"end": 3335,
											"name": "SWAP2"
										},
										{
											"begin": 3287,
											"end": 3335,
											"name": "POP"
										},
										{
											"begin": 3287,
											"end": 3335,
											"name": "POP"
										},
										{
											"begin": 3287,
											"end": 3335,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3287,
											"end": 3335,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3287,
											"end": 3335,
											"name": "MLOAD"
										},
										{
											"begin": 3287,
											"end": 3335,
											"name": "DUP1"
										},
										{
											"begin": 3287,
											"end": 3335,
											"name": "DUP4"
										},
										{
											"begin": 3287,
											"end": 3335,
											"name": "SUB"
										},
										{
											"begin": 3287,
											"end": 3335,
											"name": "DUP2"
										},
										{
											"begin": 3287,
											"end": 3335,
											"name": "DUP7"
										},
										{
											"begin": 3287,
											"end": 3335,
											"name": "DUP1"
										},
										{
											"begin": 3287,
											"end": 3335,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 3287,
											"end": 3335,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "98"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "98"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 3287,
											"end": 3335,
											"name": "POP"
										},
										{
											"begin": 3287,
											"end": 3335,
											"name": "GAS"
										},
										{
											"begin": 3287,
											"end": 3335,
											"name": "STATICCALL"
										},
										{
											"begin": 3287,
											"end": 3335,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "99"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "99"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 3287,
											"end": 3335,
											"name": "POP"
										},
										{
											"begin": 3287,
											"end": 3335,
											"name": "POP"
										},
										{
											"begin": 3287,
											"end": 3335,
											"name": "POP"
										},
										{
											"begin": 3287,
											"end": 3335,
											"name": "POP"
										},
										{
											"begin": 3287,
											"end": 3335,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3287,
											"end": 3335,
											"name": "MLOAD"
										},
										{
											"begin": 3287,
											"end": 3335,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "100"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "100"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 3287,
											"end": 3335,
											"name": "DUP2"
										},
										{
											"begin": 3287,
											"end": 3335,
											"name": "ADD"
										},
										{
											"begin": 3287,
											"end": 3335,
											"name": "SWAP1"
										},
										{
											"begin": 3287,
											"end": 3335,
											"name": "DUP1"
										},
										{
											"begin": 3287,
											"end": 3335,
											"name": "DUP1"
										},
										{
											"begin": 3287,
											"end": 3335,
											"name": "MLOAD"
										},
										{
											"begin": 3287,
											"end": 3335,
											"name": "SWAP1"
										},
										{
											"begin": 3287,
											"end": 3335,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3287,
											"end": 3335,
											"name": "ADD"
										},
										{
											"begin": 3287,
											"end": 3335,
											"name": "SWAP1"
										},
										{
											"begin": 3287,
											"end": 3335,
											"name": "SWAP3"
										},
										{
											"begin": 3287,
											"end": 3335,
											"name": "SWAP2"
										},
										{
											"begin": 3287,
											"end": 3335,
											"name": "SWAP1"
										},
										{
											"begin": 3287,
											"end": 3335,
											"name": "POP"
										},
										{
											"begin": 3287,
											"end": 3335,
											"name": "POP"
										},
										{
											"begin": 3287,
											"end": 3335,
											"name": "POP"
										},
										{
											"begin": 3262,
											"end": 3335,
											"name": "SWAP1"
										},
										{
											"begin": 3262,
											"end": 3335,
											"name": "POP"
										},
										{
											"begin": 3346,
											"end": 3414,
											"name": "PUSH [tag]",
											"value": "101"
										},
										{
											"begin": 3382,
											"end": 3397,
											"name": "PUSH",
											"value": "37"
										},
										{
											"begin": 3382,
											"end": 3397,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3382,
											"end": 3397,
											"name": "SWAP1"
										},
										{
											"begin": 3382,
											"end": 3397,
											"name": "SLOAD"
										},
										{
											"begin": 3382,
											"end": 3397,
											"name": "SWAP1"
										},
										{
											"begin": 3382,
											"end": 3397,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 3382,
											"end": 3397,
											"name": "EXP"
										},
										{
											"begin": 3382,
											"end": 3397,
											"name": "SWAP1"
										},
										{
											"begin": 3382,
											"end": 3397,
											"name": "DIV"
										},
										{
											"begin": 3382,
											"end": 3397,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3382,
											"end": 3397,
											"name": "AND"
										},
										{
											"begin": 3399,
											"end": 3413,
											"name": "DUP3"
										},
										{
											"begin": 3353,
											"end": 3368,
											"name": "PUSH",
											"value": "36"
										},
										{
											"begin": 3353,
											"end": 3368,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3353,
											"end": 3368,
											"name": "SWAP1"
										},
										{
											"begin": 3353,
											"end": 3368,
											"name": "SLOAD"
										},
										{
											"begin": 3353,
											"end": 3368,
											"name": "SWAP1"
										},
										{
											"begin": 3353,
											"end": 3368,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 3353,
											"end": 3368,
											"name": "EXP"
										},
										{
											"begin": 3353,
											"end": 3368,
											"name": "SWAP1"
										},
										{
											"begin": 3353,
											"end": 3368,
											"name": "DIV"
										},
										{
											"begin": 3353,
											"end": 3368,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3353,
											"end": 3368,
											"name": "AND"
										},
										{
											"begin": 3346,
											"end": 3381,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3346,
											"end": 3381,
											"name": "AND"
										},
										{
											"begin": 3346,
											"end": 3381,
											"name": "PUSH [tag]",
											"value": "92"
										},
										{
											"begin": 3346,
											"end": 3381,
											"name": "SWAP1"
										},
										{
											"begin": 3346,
											"end": 3414,
											"name": "SWAP3"
										},
										{
											"begin": 3346,
											"end": 3414,
											"name": "SWAP2"
										},
										{
											"begin": 3346,
											"end": 3414,
											"name": "SWAP1"
										},
										{
											"begin": 3346,
											"end": 3414,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 3346,
											"end": 3414,
											"name": "AND"
										},
										{
											"begin": 3346,
											"end": 3414,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3346,
											"end": 3414,
											"name": "tag",
											"value": "101"
										},
										{
											"begin": 3346,
											"end": 3414,
											"name": "JUMPDEST"
										},
										{
											"begin": 3439,
											"end": 3454,
											"name": "PUSH",
											"value": "37"
										},
										{
											"begin": 3439,
											"end": 3454,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3439,
											"end": 3454,
											"name": "SWAP1"
										},
										{
											"begin": 3439,
											"end": 3454,
											"name": "SLOAD"
										},
										{
											"begin": 3439,
											"end": 3454,
											"name": "SWAP1"
										},
										{
											"begin": 3439,
											"end": 3454,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 3439,
											"end": 3454,
											"name": "EXP"
										},
										{
											"begin": 3439,
											"end": 3454,
											"name": "SWAP1"
										},
										{
											"begin": 3439,
											"end": 3454,
											"name": "DIV"
										},
										{
											"begin": 3439,
											"end": 3454,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3439,
											"end": 3454,
											"name": "AND"
										},
										{
											"begin": 3424,
											"end": 3463,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3424,
											"end": 3463,
											"name": "AND"
										},
										{
											"begin": 3424,
											"end": 3463,
											"name": "PUSH",
											"value": "B6B55F25"
										},
										{
											"begin": 3464,
											"end": 3478,
											"name": "DUP3"
										},
										{
											"begin": 3424,
											"end": 3479,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3424,
											"end": 3479,
											"name": "MLOAD"
										},
										{
											"begin": 3424,
											"end": 3479,
											"name": "DUP3"
										},
										{
											"begin": 3424,
											"end": 3479,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 3424,
											"end": 3479,
											"name": "AND"
										},
										{
											"begin": 3424,
											"end": 3479,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 3424,
											"end": 3479,
											"name": "SHL"
										},
										{
											"begin": 3424,
											"end": 3479,
											"name": "DUP2"
										},
										{
											"begin": 3424,
											"end": 3479,
											"name": "MSTORE"
										},
										{
											"begin": 3424,
											"end": 3479,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 3424,
											"end": 3479,
											"name": "ADD"
										},
										{
											"begin": 3424,
											"end": 3479,
											"name": "DUP1"
										},
										{
											"begin": 3424,
											"end": 3479,
											"name": "DUP3"
										},
										{
											"begin": 3424,
											"end": 3479,
											"name": "DUP2"
										},
										{
											"begin": 3424,
											"end": 3479,
											"name": "MSTORE"
										},
										{
											"begin": 3424,
											"end": 3479,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3424,
											"end": 3479,
											"name": "ADD"
										},
										{
											"begin": 3424,
											"end": 3479,
											"name": "SWAP2"
										},
										{
											"begin": 3424,
											"end": 3479,
											"name": "POP"
										},
										{
											"begin": 3424,
											"end": 3479,
											"name": "POP"
										},
										{
											"begin": 3424,
											"end": 3479,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3424,
											"end": 3479,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3424,
											"end": 3479,
											"name": "MLOAD"
										},
										{
											"begin": 3424,
											"end": 3479,
											"name": "DUP1"
										},
										{
											"begin": 3424,
											"end": 3479,
											"name": "DUP4"
										},
										{
											"begin": 3424,
											"end": 3479,
											"name": "SUB"
										},
										{
											"begin": 3424,
											"end": 3479,
											"name": "DUP2"
										},
										{
											"begin": 3424,
											"end": 3479,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3424,
											"end": 3479,
											"name": "DUP8"
										},
										{
											"begin": 3424,
											"end": 3479,
											"name": "DUP1"
										},
										{
											"begin": 3424,
											"end": 3479,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 3424,
											"end": 3479,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "102"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "102"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 3424,
											"end": 3479,
											"name": "POP"
										},
										{
											"begin": 3424,
											"end": 3479,
											"name": "GAS"
										},
										{
											"begin": 3424,
											"end": 3479,
											"name": "CALL"
										},
										{
											"begin": 3424,
											"end": 3479,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "103"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "103"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 3424,
											"end": 3479,
											"name": "POP"
										},
										{
											"begin": 3424,
											"end": 3479,
											"name": "POP"
										},
										{
											"begin": 3424,
											"end": 3479,
											"name": "POP"
										},
										{
											"begin": 3424,
											"end": 3479,
											"name": "POP"
										},
										{
											"begin": 3568,
											"end": 3583,
											"name": "PUSH [tag]",
											"value": "104"
										},
										{
											"begin": 3568,
											"end": 3581,
											"name": "PUSH [tag]",
											"value": "105"
										},
										{
											"begin": 3568,
											"end": 3583,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3568,
											"end": 3583,
											"name": "tag",
											"value": "104"
										},
										{
											"begin": 3568,
											"end": 3583,
											"name": "JUMPDEST"
										},
										{
											"begin": 3593,
											"end": 3610,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3620,
											"end": 3636,
											"name": "PUSH",
											"value": "39"
										},
										{
											"begin": 3620,
											"end": 3636,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3620,
											"end": 3636,
											"name": "SWAP1"
										},
										{
											"begin": 3620,
											"end": 3636,
											"name": "SLOAD"
										},
										{
											"begin": 3620,
											"end": 3636,
											"name": "SWAP1"
										},
										{
											"begin": 3620,
											"end": 3636,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 3620,
											"end": 3636,
											"name": "EXP"
										},
										{
											"begin": 3620,
											"end": 3636,
											"name": "SWAP1"
										},
										{
											"begin": 3620,
											"end": 3636,
											"name": "DIV"
										},
										{
											"begin": 3620,
											"end": 3636,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3620,
											"end": 3636,
											"name": "AND"
										},
										{
											"begin": 3613,
											"end": 3647,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3613,
											"end": 3647,
											"name": "AND"
										},
										{
											"begin": 3613,
											"end": 3647,
											"name": "PUSH",
											"value": "70A08231"
										},
										{
											"begin": 3656,
											"end": 3660,
											"name": "ADDRESS"
										},
										{
											"begin": 3613,
											"end": 3662,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3613,
											"end": 3662,
											"name": "MLOAD"
										},
										{
											"begin": 3613,
											"end": 3662,
											"name": "DUP3"
										},
										{
											"begin": 3613,
											"end": 3662,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 3613,
											"end": 3662,
											"name": "AND"
										},
										{
											"begin": 3613,
											"end": 3662,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 3613,
											"end": 3662,
											"name": "SHL"
										},
										{
											"begin": 3613,
											"end": 3662,
											"name": "DUP2"
										},
										{
											"begin": 3613,
											"end": 3662,
											"name": "MSTORE"
										},
										{
											"begin": 3613,
											"end": 3662,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 3613,
											"end": 3662,
											"name": "ADD"
										},
										{
											"begin": 3613,
											"end": 3662,
											"name": "DUP1"
										},
										{
											"begin": 3613,
											"end": 3662,
											"name": "DUP3"
										},
										{
											"begin": 3613,
											"end": 3662,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3613,
											"end": 3662,
											"name": "AND"
										},
										{
											"begin": 3613,
											"end": 3662,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3613,
											"end": 3662,
											"name": "AND"
										},
										{
											"begin": 3613,
											"end": 3662,
											"name": "DUP2"
										},
										{
											"begin": 3613,
											"end": 3662,
											"name": "MSTORE"
										},
										{
											"begin": 3613,
											"end": 3662,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3613,
											"end": 3662,
											"name": "ADD"
										},
										{
											"begin": 3613,
											"end": 3662,
											"name": "SWAP2"
										},
										{
											"begin": 3613,
											"end": 3662,
											"name": "POP"
										},
										{
											"begin": 3613,
											"end": 3662,
											"name": "POP"
										},
										{
											"begin": 3613,
											"end": 3662,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3613,
											"end": 3662,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3613,
											"end": 3662,
											"name": "MLOAD"
										},
										{
											"begin": 3613,
											"end": 3662,
											"name": "DUP1"
										},
										{
											"begin": 3613,
											"end": 3662,
											"name": "DUP4"
										},
										{
											"begin": 3613,
											"end": 3662,
											"name": "SUB"
										},
										{
											"begin": 3613,
											"end": 3662,
											"name": "DUP2"
										},
										{
											"begin": 3613,
											"end": 3662,
											"name": "DUP7"
										},
										{
											"begin": 3613,
											"end": 3662,
											"name": "DUP1"
										},
										{
											"begin": 3613,
											"end": 3662,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 3613,
											"end": 3662,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "106"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "106"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 3613,
											"end": 3662,
											"name": "POP"
										},
										{
											"begin": 3613,
											"end": 3662,
											"name": "GAS"
										},
										{
											"begin": 3613,
											"end": 3662,
											"name": "STATICCALL"
										},
										{
											"begin": 3613,
											"end": 3662,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "107"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "107"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 3613,
											"end": 3662,
											"name": "POP"
										},
										{
											"begin": 3613,
											"end": 3662,
											"name": "POP"
										},
										{
											"begin": 3613,
											"end": 3662,
											"name": "POP"
										},
										{
											"begin": 3613,
											"end": 3662,
											"name": "POP"
										},
										{
											"begin": 3613,
											"end": 3662,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3613,
											"end": 3662,
											"name": "MLOAD"
										},
										{
											"begin": 3613,
											"end": 3662,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "108"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "108"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 3613,
											"end": 3662,
											"name": "DUP2"
										},
										{
											"begin": 3613,
											"end": 3662,
											"name": "ADD"
										},
										{
											"begin": 3613,
											"end": 3662,
											"name": "SWAP1"
										},
										{
											"begin": 3613,
											"end": 3662,
											"name": "DUP1"
										},
										{
											"begin": 3613,
											"end": 3662,
											"name": "DUP1"
										},
										{
											"begin": 3613,
											"end": 3662,
											"name": "MLOAD"
										},
										{
											"begin": 3613,
											"end": 3662,
											"name": "SWAP1"
										},
										{
											"begin": 3613,
											"end": 3662,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3613,
											"end": 3662,
											"name": "ADD"
										},
										{
											"begin": 3613,
											"end": 3662,
											"name": "SWAP1"
										},
										{
											"begin": 3613,
											"end": 3662,
											"name": "SWAP3"
										},
										{
											"begin": 3613,
											"end": 3662,
											"name": "SWAP2"
										},
										{
											"begin": 3613,
											"end": 3662,
											"name": "SWAP1"
										},
										{
											"begin": 3613,
											"end": 3662,
											"name": "POP"
										},
										{
											"begin": 3613,
											"end": 3662,
											"name": "POP"
										},
										{
											"begin": 3613,
											"end": 3662,
											"name": "POP"
										},
										{
											"begin": 3593,
											"end": 3662,
											"name": "SWAP1"
										},
										{
											"begin": 3593,
											"end": 3662,
											"name": "POP"
										},
										{
											"begin": 3672,
											"end": 3734,
											"name": "PUSH [tag]",
											"value": "109"
										},
										{
											"begin": 3710,
											"end": 3722,
											"name": "PUSH [tag]",
											"value": "110"
										},
										{
											"begin": 3710,
											"end": 3720,
											"name": "PUSH [tag]",
											"value": "85"
										},
										{
											"begin": 3710,
											"end": 3722,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3710,
											"end": 3722,
											"name": "tag",
											"value": "110"
										},
										{
											"begin": 3710,
											"end": 3722,
											"name": "JUMPDEST"
										},
										{
											"begin": 3724,
											"end": 3733,
											"name": "DUP3"
										},
										{
											"begin": 3679,
											"end": 3695,
											"name": "PUSH",
											"value": "39"
										},
										{
											"begin": 3679,
											"end": 3695,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3679,
											"end": 3695,
											"name": "SWAP1"
										},
										{
											"begin": 3679,
											"end": 3695,
											"name": "SLOAD"
										},
										{
											"begin": 3679,
											"end": 3695,
											"name": "SWAP1"
										},
										{
											"begin": 3679,
											"end": 3695,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 3679,
											"end": 3695,
											"name": "EXP"
										},
										{
											"begin": 3679,
											"end": 3695,
											"name": "SWAP1"
										},
										{
											"begin": 3679,
											"end": 3695,
											"name": "DIV"
										},
										{
											"begin": 3679,
											"end": 3695,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3679,
											"end": 3695,
											"name": "AND"
										},
										{
											"begin": 3672,
											"end": 3709,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3672,
											"end": 3709,
											"name": "AND"
										},
										{
											"begin": 3672,
											"end": 3709,
											"name": "PUSH [tag]",
											"value": "111"
										},
										{
											"begin": 3672,
											"end": 3709,
											"name": "SWAP1"
										},
										{
											"begin": 3672,
											"end": 3734,
											"name": "SWAP3"
										},
										{
											"begin": 3672,
											"end": 3734,
											"name": "SWAP2"
										},
										{
											"begin": 3672,
											"end": 3734,
											"name": "SWAP1"
										},
										{
											"begin": 3672,
											"end": 3734,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 3672,
											"end": 3734,
											"name": "AND"
										},
										{
											"begin": 3672,
											"end": 3734,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3672,
											"end": 3734,
											"name": "tag",
											"value": "109"
										},
										{
											"begin": 3672,
											"end": 3734,
											"name": "JUMPDEST"
										},
										{
											"begin": 2612,
											"end": 3742,
											"name": "POP"
										},
										{
											"begin": 2612,
											"end": 3742,
											"name": "POP"
										},
										{
											"begin": 2612,
											"end": 3742,
											"name": "POP"
										},
										{
											"begin": 2612,
											"end": 3742,
											"name": "POP"
										},
										{
											"begin": 2612,
											"end": 3742,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1208,
											"end": 1235,
											"name": "tag",
											"value": "32"
										},
										{
											"begin": 1208,
											"end": 1235,
											"name": "JUMPDEST"
										},
										{
											"begin": 1208,
											"end": 1235,
											"name": "PUSH",
											"value": "35"
										},
										{
											"begin": 1208,
											"end": 1235,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1208,
											"end": 1235,
											"name": "SWAP1"
										},
										{
											"begin": 1208,
											"end": 1235,
											"name": "SLOAD"
										},
										{
											"begin": 1208,
											"end": 1235,
											"name": "SWAP1"
										},
										{
											"begin": 1208,
											"end": 1235,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1208,
											"end": 1235,
											"name": "EXP"
										},
										{
											"begin": 1208,
											"end": 1235,
											"name": "SWAP1"
										},
										{
											"begin": 1208,
											"end": 1235,
											"name": "DIV"
										},
										{
											"begin": 1208,
											"end": 1235,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1208,
											"end": 1235,
											"name": "AND"
										},
										{
											"begin": 1208,
											"end": 1235,
											"name": "DUP2"
										},
										{
											"begin": 1208,
											"end": 1235,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 6874,
											"end": 7917,
											"name": "tag",
											"value": "34"
										},
										{
											"begin": 6874,
											"end": 7917,
											"name": "JUMPDEST"
										},
										{
											"begin": 6918,
											"end": 6944,
											"name": "PUSH [tag]",
											"value": "112"
										},
										{
											"begin": 6918,
											"end": 6944,
											"name": "PUSH [tag]",
											"value": "113"
										},
										{
											"begin": 6918,
											"end": 6944,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 6918,
											"end": 6944,
											"name": "tag",
											"value": "112"
										},
										{
											"begin": 6918,
											"end": 6944,
											"name": "JUMPDEST"
										},
										{
											"begin": 6956,
											"end": 6985,
											"name": "PUSH [tag]",
											"value": "115"
										},
										{
											"begin": 6956,
											"end": 6985,
											"name": "PUSH [tag]",
											"value": "76"
										},
										{
											"begin": 6956,
											"end": 6985,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 6956,
											"end": 6985,
											"name": "tag",
											"value": "115"
										},
										{
											"begin": 6956,
											"end": 6985,
											"name": "JUMPDEST"
										},
										{
											"begin": 7006,
											"end": 7021,
											"name": "PUSH",
											"value": "34"
										},
										{
											"begin": 7006,
											"end": 7021,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7006,
											"end": 7021,
											"name": "SWAP1"
										},
										{
											"begin": 7006,
											"end": 7021,
											"name": "SLOAD"
										},
										{
											"begin": 7006,
											"end": 7021,
											"name": "SWAP1"
										},
										{
											"begin": 7006,
											"end": 7021,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 7006,
											"end": 7021,
											"name": "EXP"
										},
										{
											"begin": 7006,
											"end": 7021,
											"name": "SWAP1"
										},
										{
											"begin": 7006,
											"end": 7021,
											"name": "DIV"
										},
										{
											"begin": 7006,
											"end": 7021,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7006,
											"end": 7021,
											"name": "AND"
										},
										{
											"begin": 6988,
											"end": 7039,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6988,
											"end": 7039,
											"name": "AND"
										},
										{
											"begin": 6988,
											"end": 7039,
											"name": "PUSH",
											"value": "FB6D3A89"
										},
										{
											"begin": 6988,
											"end": 7041,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6988,
											"end": 7041,
											"name": "MLOAD"
										},
										{
											"begin": 6988,
											"end": 7041,
											"name": "DUP2"
										},
										{
											"begin": 6988,
											"end": 7041,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 6988,
											"end": 7041,
											"name": "AND"
										},
										{
											"begin": 6988,
											"end": 7041,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 6988,
											"end": 7041,
											"name": "SHL"
										},
										{
											"begin": 6988,
											"end": 7041,
											"name": "DUP2"
										},
										{
											"begin": 6988,
											"end": 7041,
											"name": "MSTORE"
										},
										{
											"begin": 6988,
											"end": 7041,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 6988,
											"end": 7041,
											"name": "ADD"
										},
										{
											"begin": 6988,
											"end": 7041,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 6988,
											"end": 7041,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6988,
											"end": 7041,
											"name": "MLOAD"
										},
										{
											"begin": 6988,
											"end": 7041,
											"name": "DUP1"
										},
										{
											"begin": 6988,
											"end": 7041,
											"name": "DUP4"
										},
										{
											"begin": 6988,
											"end": 7041,
											"name": "SUB"
										},
										{
											"begin": 6988,
											"end": 7041,
											"name": "DUP2"
										},
										{
											"begin": 6988,
											"end": 7041,
											"name": "DUP7"
										},
										{
											"begin": 6988,
											"end": 7041,
											"name": "DUP1"
										},
										{
											"begin": 6988,
											"end": 7041,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 6988,
											"end": 7041,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "116"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "116"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 6988,
											"end": 7041,
											"name": "POP"
										},
										{
											"begin": 6988,
											"end": 7041,
											"name": "GAS"
										},
										{
											"begin": 6988,
											"end": 7041,
											"name": "STATICCALL"
										},
										{
											"begin": 6988,
											"end": 7041,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "117"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "117"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 6988,
											"end": 7041,
											"name": "POP"
										},
										{
											"begin": 6988,
											"end": 7041,
											"name": "POP"
										},
										{
											"begin": 6988,
											"end": 7041,
											"name": "POP"
										},
										{
											"begin": 6988,
											"end": 7041,
											"name": "POP"
										},
										{
											"begin": 6988,
											"end": 7041,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6988,
											"end": 7041,
											"name": "MLOAD"
										},
										{
											"begin": 6988,
											"end": 7041,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 101,
											"end": 105,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 97,
											"end": 106,
											"name": "NOT"
										},
										{
											"begin": 90,
											"end": 94,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 84,
											"end": 88,
											"name": "DUP3"
										},
										{
											"begin": 80,
											"end": 95,
											"name": "ADD"
										},
										{
											"begin": 76,
											"end": 107,
											"name": "AND"
										},
										{
											"begin": 69,
											"end": 74,
											"name": "DUP3"
										},
										{
											"begin": 65,
											"end": 108,
											"name": "ADD"
										},
										{
											"begin": 126,
											"end": 132,
											"name": "DUP1"
										},
										{
											"begin": 120,
											"end": 124,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 113,
											"end": 133,
											"name": "MSTORE"
										},
										{
											"begin": 0,
											"end": 138,
											"name": "POP"
										},
										{
											"begin": 13,
											"end": 16,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 17,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "118"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "118"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 6988,
											"end": 7041,
											"name": "DUP2"
										},
										{
											"begin": 6988,
											"end": 7041,
											"name": "ADD"
										},
										{
											"begin": 6988,
											"end": 7041,
											"name": "SWAP1"
										},
										{
											"begin": 6988,
											"end": 7041,
											"name": "DUP1"
										},
										{
											"begin": 6988,
											"end": 7041,
											"name": "SWAP2"
										},
										{
											"begin": 6988,
											"end": 7041,
											"name": "SWAP1"
										},
										{
											"begin": 6988,
											"end": 7041,
											"name": "POP"
										},
										{
											"begin": 6988,
											"end": 7041,
											"name": "POP"
										},
										{
											"begin": 6956,
											"end": 7041,
											"name": "SWAP1"
										},
										{
											"begin": 6956,
											"end": 7041,
											"name": "POP"
										},
										{
											"begin": 7052,
											"end": 7074,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7077,
											"end": 7098,
											"name": "PUSH [tag]",
											"value": "119"
										},
										{
											"begin": 7077,
											"end": 7096,
											"name": "PUSH [tag]",
											"value": "59"
										},
										{
											"begin": 7077,
											"end": 7098,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 7077,
											"end": 7098,
											"name": "tag",
											"value": "119"
										},
										{
											"begin": 7077,
											"end": 7098,
											"name": "JUMPDEST"
										},
										{
											"begin": 7052,
											"end": 7098,
											"name": "SWAP1"
										},
										{
											"begin": 7052,
											"end": 7098,
											"name": "POP"
										},
										{
											"begin": 7108,
											"end": 7134,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7144,
											"end": 7159,
											"name": "PUSH",
											"value": "36"
										},
										{
											"begin": 7144,
											"end": 7159,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7144,
											"end": 7159,
											"name": "SWAP1"
										},
										{
											"begin": 7144,
											"end": 7159,
											"name": "SLOAD"
										},
										{
											"begin": 7144,
											"end": 7159,
											"name": "SWAP1"
										},
										{
											"begin": 7144,
											"end": 7159,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 7144,
											"end": 7159,
											"name": "EXP"
										},
										{
											"begin": 7144,
											"end": 7159,
											"name": "SWAP1"
										},
										{
											"begin": 7144,
											"end": 7159,
											"name": "DIV"
										},
										{
											"begin": 7144,
											"end": 7159,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7144,
											"end": 7159,
											"name": "AND"
										},
										{
											"begin": 7137,
											"end": 7172,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7137,
											"end": 7172,
											"name": "AND"
										},
										{
											"begin": 7137,
											"end": 7172,
											"name": "PUSH",
											"value": "18160DDD"
										},
										{
											"begin": 7137,
											"end": 7174,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7137,
											"end": 7174,
											"name": "MLOAD"
										},
										{
											"begin": 7137,
											"end": 7174,
											"name": "DUP2"
										},
										{
											"begin": 7137,
											"end": 7174,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 7137,
											"end": 7174,
											"name": "AND"
										},
										{
											"begin": 7137,
											"end": 7174,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 7137,
											"end": 7174,
											"name": "SHL"
										},
										{
											"begin": 7137,
											"end": 7174,
											"name": "DUP2"
										},
										{
											"begin": 7137,
											"end": 7174,
											"name": "MSTORE"
										},
										{
											"begin": 7137,
											"end": 7174,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 7137,
											"end": 7174,
											"name": "ADD"
										},
										{
											"begin": 7137,
											"end": 7174,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7137,
											"end": 7174,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7137,
											"end": 7174,
											"name": "MLOAD"
										},
										{
											"begin": 7137,
											"end": 7174,
											"name": "DUP1"
										},
										{
											"begin": 7137,
											"end": 7174,
											"name": "DUP4"
										},
										{
											"begin": 7137,
											"end": 7174,
											"name": "SUB"
										},
										{
											"begin": 7137,
											"end": 7174,
											"name": "DUP2"
										},
										{
											"begin": 7137,
											"end": 7174,
											"name": "DUP7"
										},
										{
											"begin": 7137,
											"end": 7174,
											"name": "DUP1"
										},
										{
											"begin": 7137,
											"end": 7174,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 7137,
											"end": 7174,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "120"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "120"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 7137,
											"end": 7174,
											"name": "POP"
										},
										{
											"begin": 7137,
											"end": 7174,
											"name": "GAS"
										},
										{
											"begin": 7137,
											"end": 7174,
											"name": "STATICCALL"
										},
										{
											"begin": 7137,
											"end": 7174,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "121"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "121"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 7137,
											"end": 7174,
											"name": "POP"
										},
										{
											"begin": 7137,
											"end": 7174,
											"name": "POP"
										},
										{
											"begin": 7137,
											"end": 7174,
											"name": "POP"
										},
										{
											"begin": 7137,
											"end": 7174,
											"name": "POP"
										},
										{
											"begin": 7137,
											"end": 7174,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7137,
											"end": 7174,
											"name": "MLOAD"
										},
										{
											"begin": 7137,
											"end": 7174,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "122"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "122"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 7137,
											"end": 7174,
											"name": "DUP2"
										},
										{
											"begin": 7137,
											"end": 7174,
											"name": "ADD"
										},
										{
											"begin": 7137,
											"end": 7174,
											"name": "SWAP1"
										},
										{
											"begin": 7137,
											"end": 7174,
											"name": "DUP1"
										},
										{
											"begin": 7137,
											"end": 7174,
											"name": "DUP1"
										},
										{
											"begin": 7137,
											"end": 7174,
											"name": "MLOAD"
										},
										{
											"begin": 7137,
											"end": 7174,
											"name": "SWAP1"
										},
										{
											"begin": 7137,
											"end": 7174,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7137,
											"end": 7174,
											"name": "ADD"
										},
										{
											"begin": 7137,
											"end": 7174,
											"name": "SWAP1"
										},
										{
											"begin": 7137,
											"end": 7174,
											"name": "SWAP3"
										},
										{
											"begin": 7137,
											"end": 7174,
											"name": "SWAP2"
										},
										{
											"begin": 7137,
											"end": 7174,
											"name": "SWAP1"
										},
										{
											"begin": 7137,
											"end": 7174,
											"name": "POP"
										},
										{
											"begin": 7137,
											"end": 7174,
											"name": "POP"
										},
										{
											"begin": 7137,
											"end": 7174,
											"name": "POP"
										},
										{
											"begin": 7108,
											"end": 7174,
											"name": "SWAP1"
										},
										{
											"begin": 7108,
											"end": 7174,
											"name": "POP"
										},
										{
											"begin": 7214,
											"end": 7215,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7193,
											"end": 7211,
											"name": "DUP2"
										},
										{
											"begin": 7193,
											"end": 7215,
											"name": "GT"
										},
										{
											"begin": 7185,
											"end": 7245,
											"name": "PUSH [tag]",
											"value": "123"
										},
										{
											"begin": 7185,
											"end": 7245,
											"name": "JUMPI"
										},
										{
											"begin": 7185,
											"end": 7245,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7185,
											"end": 7245,
											"name": "MLOAD"
										},
										{
											"begin": 7185,
											"end": 7245,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7185,
											"end": 7245,
											"name": "DUP2"
										},
										{
											"begin": 7185,
											"end": 7245,
											"name": "MSTORE"
										},
										{
											"begin": 7185,
											"end": 7245,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 7185,
											"end": 7245,
											"name": "ADD"
										},
										{
											"begin": 7185,
											"end": 7245,
											"name": "DUP1"
										},
										{
											"begin": 7185,
											"end": 7245,
											"name": "DUP1"
										},
										{
											"begin": 7185,
											"end": 7245,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7185,
											"end": 7245,
											"name": "ADD"
										},
										{
											"begin": 7185,
											"end": 7245,
											"name": "DUP3"
										},
										{
											"begin": 7185,
											"end": 7245,
											"name": "DUP2"
										},
										{
											"begin": 7185,
											"end": 7245,
											"name": "SUB"
										},
										{
											"begin": 7185,
											"end": 7245,
											"name": "DUP3"
										},
										{
											"begin": 7185,
											"end": 7245,
											"name": "MSTORE"
										},
										{
											"begin": 7185,
											"end": 7245,
											"name": "PUSH",
											"value": "19"
										},
										{
											"begin": 7185,
											"end": 7245,
											"name": "DUP2"
										},
										{
											"begin": 7185,
											"end": 7245,
											"name": "MSTORE"
										},
										{
											"begin": 7185,
											"end": 7245,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7185,
											"end": 7245,
											"name": "ADD"
										},
										{
											"begin": 7185,
											"end": 7245,
											"name": "DUP1"
										},
										{
											"begin": 7185,
											"end": 7245,
											"name": "PUSH",
											"value": "4E6F204375727665204C5020746F6B656E73206D696E74656400000000000000"
										},
										{
											"begin": 7185,
											"end": 7245,
											"name": "DUP2"
										},
										{
											"begin": 7185,
											"end": 7245,
											"name": "MSTORE"
										},
										{
											"begin": 7185,
											"end": 7245,
											"name": "POP"
										},
										{
											"begin": 7185,
											"end": 7245,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7185,
											"end": 7245,
											"name": "ADD"
										},
										{
											"begin": 7185,
											"end": 7245,
											"name": "SWAP2"
										},
										{
											"begin": 7185,
											"end": 7245,
											"name": "POP"
										},
										{
											"begin": 7185,
											"end": 7245,
											"name": "POP"
										},
										{
											"begin": 7185,
											"end": 7245,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7185,
											"end": 7245,
											"name": "MLOAD"
										},
										{
											"begin": 7185,
											"end": 7245,
											"name": "DUP1"
										},
										{
											"begin": 7185,
											"end": 7245,
											"name": "SWAP2"
										},
										{
											"begin": 7185,
											"end": 7245,
											"name": "SUB"
										},
										{
											"begin": 7185,
											"end": 7245,
											"name": "SWAP1"
										},
										{
											"begin": 7185,
											"end": 7245,
											"name": "REVERT"
										},
										{
											"begin": 7185,
											"end": 7245,
											"name": "tag",
											"value": "123"
										},
										{
											"begin": 7185,
											"end": 7245,
											"name": "JUMPDEST"
										},
										{
											"begin": 7261,
											"end": 7270,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7273,
											"end": 7274,
											"name": "DUP1"
										},
										{
											"begin": 7261,
											"end": 7274,
											"name": "SWAP1"
										},
										{
											"begin": 7261,
											"end": 7274,
											"name": "POP"
										},
										{
											"begin": 7256,
											"end": 7911,
											"name": "tag",
											"value": "124"
										},
										{
											"begin": 7256,
											"end": 7911,
											"name": "JUMPDEST"
										},
										{
											"begin": 7280,
											"end": 7298,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 7276,
											"end": 7277,
											"name": "DUP2"
										},
										{
											"begin": 7276,
											"end": 7298,
											"name": "LT"
										},
										{
											"begin": 7256,
											"end": 7911,
											"name": "ISZERO"
										},
										{
											"begin": 7256,
											"end": 7911,
											"name": "PUSH [tag]",
											"value": "125"
										},
										{
											"begin": 7256,
											"end": 7911,
											"name": "JUMPI"
										},
										{
											"begin": 7354,
											"end": 7377,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7395,
											"end": 7407,
											"name": "PUSH",
											"value": "35"
										},
										{
											"begin": 7395,
											"end": 7407,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7395,
											"end": 7407,
											"name": "SWAP1"
										},
										{
											"begin": 7395,
											"end": 7407,
											"name": "SLOAD"
										},
										{
											"begin": 7395,
											"end": 7407,
											"name": "SWAP1"
										},
										{
											"begin": 7395,
											"end": 7407,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 7395,
											"end": 7407,
											"name": "EXP"
										},
										{
											"begin": 7395,
											"end": 7407,
											"name": "SWAP1"
										},
										{
											"begin": 7395,
											"end": 7407,
											"name": "DIV"
										},
										{
											"begin": 7395,
											"end": 7407,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7395,
											"end": 7407,
											"name": "AND"
										},
										{
											"begin": 7380,
											"end": 7417,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7380,
											"end": 7417,
											"name": "AND"
										},
										{
											"begin": 7380,
											"end": 7417,
											"name": "PUSH",
											"value": "65A80D8"
										},
										{
											"begin": 7425,
											"end": 7426,
											"name": "DUP4"
										},
										{
											"begin": 7380,
											"end": 7428,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7380,
											"end": 7428,
											"name": "MLOAD"
										},
										{
											"begin": 7380,
											"end": 7428,
											"name": "DUP3"
										},
										{
											"begin": 7380,
											"end": 7428,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 7380,
											"end": 7428,
											"name": "AND"
										},
										{
											"begin": 7380,
											"end": 7428,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 7380,
											"end": 7428,
											"name": "SHL"
										},
										{
											"begin": 7380,
											"end": 7428,
											"name": "DUP2"
										},
										{
											"begin": 7380,
											"end": 7428,
											"name": "MSTORE"
										},
										{
											"begin": 7380,
											"end": 7428,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 7380,
											"end": 7428,
											"name": "ADD"
										},
										{
											"begin": 7380,
											"end": 7428,
											"name": "DUP1"
										},
										{
											"begin": 7380,
											"end": 7428,
											"name": "DUP3"
										},
										{
											"begin": 7380,
											"end": 7428,
											"name": "PUSH",
											"value": "F"
										},
										{
											"begin": 7380,
											"end": 7428,
											"name": "SIGNEXTEND"
										},
										{
											"begin": 7380,
											"end": 7428,
											"name": "PUSH",
											"value": "F"
										},
										{
											"begin": 7380,
											"end": 7428,
											"name": "SIGNEXTEND"
										},
										{
											"begin": 7380,
											"end": 7428,
											"name": "DUP2"
										},
										{
											"begin": 7380,
											"end": 7428,
											"name": "MSTORE"
										},
										{
											"begin": 7380,
											"end": 7428,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7380,
											"end": 7428,
											"name": "ADD"
										},
										{
											"begin": 7380,
											"end": 7428,
											"name": "SWAP2"
										},
										{
											"begin": 7380,
											"end": 7428,
											"name": "POP"
										},
										{
											"begin": 7380,
											"end": 7428,
											"name": "POP"
										},
										{
											"begin": 7380,
											"end": 7428,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7380,
											"end": 7428,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7380,
											"end": 7428,
											"name": "MLOAD"
										},
										{
											"begin": 7380,
											"end": 7428,
											"name": "DUP1"
										},
										{
											"begin": 7380,
											"end": 7428,
											"name": "DUP4"
										},
										{
											"begin": 7380,
											"end": 7428,
											"name": "SUB"
										},
										{
											"begin": 7380,
											"end": 7428,
											"name": "DUP2"
										},
										{
											"begin": 7380,
											"end": 7428,
											"name": "DUP7"
										},
										{
											"begin": 7380,
											"end": 7428,
											"name": "DUP1"
										},
										{
											"begin": 7380,
											"end": 7428,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 7380,
											"end": 7428,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "127"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "127"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 7380,
											"end": 7428,
											"name": "POP"
										},
										{
											"begin": 7380,
											"end": 7428,
											"name": "GAS"
										},
										{
											"begin": 7380,
											"end": 7428,
											"name": "STATICCALL"
										},
										{
											"begin": 7380,
											"end": 7428,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "128"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "128"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 7380,
											"end": 7428,
											"name": "POP"
										},
										{
											"begin": 7380,
											"end": 7428,
											"name": "POP"
										},
										{
											"begin": 7380,
											"end": 7428,
											"name": "POP"
										},
										{
											"begin": 7380,
											"end": 7428,
											"name": "POP"
										},
										{
											"begin": 7380,
											"end": 7428,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7380,
											"end": 7428,
											"name": "MLOAD"
										},
										{
											"begin": 7380,
											"end": 7428,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "129"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "129"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 7380,
											"end": 7428,
											"name": "DUP2"
										},
										{
											"begin": 7380,
											"end": 7428,
											"name": "ADD"
										},
										{
											"begin": 7380,
											"end": 7428,
											"name": "SWAP1"
										},
										{
											"begin": 7380,
											"end": 7428,
											"name": "DUP1"
										},
										{
											"begin": 7380,
											"end": 7428,
											"name": "DUP1"
										},
										{
											"begin": 7380,
											"end": 7428,
											"name": "MLOAD"
										},
										{
											"begin": 7380,
											"end": 7428,
											"name": "SWAP1"
										},
										{
											"begin": 7380,
											"end": 7428,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7380,
											"end": 7428,
											"name": "ADD"
										},
										{
											"begin": 7380,
											"end": 7428,
											"name": "SWAP1"
										},
										{
											"begin": 7380,
											"end": 7428,
											"name": "SWAP3"
										},
										{
											"begin": 7380,
											"end": 7428,
											"name": "SWAP2"
										},
										{
											"begin": 7380,
											"end": 7428,
											"name": "SWAP1"
										},
										{
											"begin": 7380,
											"end": 7428,
											"name": "POP"
										},
										{
											"begin": 7380,
											"end": 7428,
											"name": "POP"
										},
										{
											"begin": 7380,
											"end": 7428,
											"name": "POP"
										},
										{
											"begin": 7354,
											"end": 7428,
											"name": "SWAP1"
										},
										{
											"begin": 7354,
											"end": 7428,
											"name": "POP"
										},
										{
											"begin": 7442,
											"end": 7455,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7473,
											"end": 7485,
											"name": "PUSH",
											"value": "35"
										},
										{
											"begin": 7473,
											"end": 7485,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7473,
											"end": 7485,
											"name": "SWAP1"
										},
										{
											"begin": 7473,
											"end": 7485,
											"name": "SLOAD"
										},
										{
											"begin": 7473,
											"end": 7485,
											"name": "SWAP1"
										},
										{
											"begin": 7473,
											"end": 7485,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 7473,
											"end": 7485,
											"name": "EXP"
										},
										{
											"begin": 7473,
											"end": 7485,
											"name": "SWAP1"
										},
										{
											"begin": 7473,
											"end": 7485,
											"name": "DIV"
										},
										{
											"begin": 7473,
											"end": 7485,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7473,
											"end": 7485,
											"name": "AND"
										},
										{
											"begin": 7458,
											"end": 7492,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7458,
											"end": 7492,
											"name": "AND"
										},
										{
											"begin": 7458,
											"end": 7492,
											"name": "PUSH",
											"value": "23746EB8"
										},
										{
											"begin": 7500,
											"end": 7501,
											"name": "DUP5"
										},
										{
											"begin": 7458,
											"end": 7503,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7458,
											"end": 7503,
											"name": "MLOAD"
										},
										{
											"begin": 7458,
											"end": 7503,
											"name": "DUP3"
										},
										{
											"begin": 7458,
											"end": 7503,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 7458,
											"end": 7503,
											"name": "AND"
										},
										{
											"begin": 7458,
											"end": 7503,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 7458,
											"end": 7503,
											"name": "SHL"
										},
										{
											"begin": 7458,
											"end": 7503,
											"name": "DUP2"
										},
										{
											"begin": 7458,
											"end": 7503,
											"name": "MSTORE"
										},
										{
											"begin": 7458,
											"end": 7503,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 7458,
											"end": 7503,
											"name": "ADD"
										},
										{
											"begin": 7458,
											"end": 7503,
											"name": "DUP1"
										},
										{
											"begin": 7458,
											"end": 7503,
											"name": "DUP3"
										},
										{
											"begin": 7458,
											"end": 7503,
											"name": "PUSH",
											"value": "F"
										},
										{
											"begin": 7458,
											"end": 7503,
											"name": "SIGNEXTEND"
										},
										{
											"begin": 7458,
											"end": 7503,
											"name": "PUSH",
											"value": "F"
										},
										{
											"begin": 7458,
											"end": 7503,
											"name": "SIGNEXTEND"
										},
										{
											"begin": 7458,
											"end": 7503,
											"name": "DUP2"
										},
										{
											"begin": 7458,
											"end": 7503,
											"name": "MSTORE"
										},
										{
											"begin": 7458,
											"end": 7503,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7458,
											"end": 7503,
											"name": "ADD"
										},
										{
											"begin": 7458,
											"end": 7503,
											"name": "SWAP2"
										},
										{
											"begin": 7458,
											"end": 7503,
											"name": "POP"
										},
										{
											"begin": 7458,
											"end": 7503,
											"name": "POP"
										},
										{
											"begin": 7458,
											"end": 7503,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7458,
											"end": 7503,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7458,
											"end": 7503,
											"name": "MLOAD"
										},
										{
											"begin": 7458,
											"end": 7503,
											"name": "DUP1"
										},
										{
											"begin": 7458,
											"end": 7503,
											"name": "DUP4"
										},
										{
											"begin": 7458,
											"end": 7503,
											"name": "SUB"
										},
										{
											"begin": 7458,
											"end": 7503,
											"name": "DUP2"
										},
										{
											"begin": 7458,
											"end": 7503,
											"name": "DUP7"
										},
										{
											"begin": 7458,
											"end": 7503,
											"name": "DUP1"
										},
										{
											"begin": 7458,
											"end": 7503,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 7458,
											"end": 7503,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "130"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "130"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 7458,
											"end": 7503,
											"name": "POP"
										},
										{
											"begin": 7458,
											"end": 7503,
											"name": "GAS"
										},
										{
											"begin": 7458,
											"end": 7503,
											"name": "STATICCALL"
										},
										{
											"begin": 7458,
											"end": 7503,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "131"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "131"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 7458,
											"end": 7503,
											"name": "POP"
										},
										{
											"begin": 7458,
											"end": 7503,
											"name": "POP"
										},
										{
											"begin": 7458,
											"end": 7503,
											"name": "POP"
										},
										{
											"begin": 7458,
											"end": 7503,
											"name": "POP"
										},
										{
											"begin": 7458,
											"end": 7503,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7458,
											"end": 7503,
											"name": "MLOAD"
										},
										{
											"begin": 7458,
											"end": 7503,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "132"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "132"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 7458,
											"end": 7503,
											"name": "DUP2"
										},
										{
											"begin": 7458,
											"end": 7503,
											"name": "ADD"
										},
										{
											"begin": 7458,
											"end": 7503,
											"name": "SWAP1"
										},
										{
											"begin": 7458,
											"end": 7503,
											"name": "DUP1"
										},
										{
											"begin": 7458,
											"end": 7503,
											"name": "DUP1"
										},
										{
											"begin": 7458,
											"end": 7503,
											"name": "MLOAD"
										},
										{
											"begin": 7458,
											"end": 7503,
											"name": "SWAP1"
										},
										{
											"begin": 7458,
											"end": 7503,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7458,
											"end": 7503,
											"name": "ADD"
										},
										{
											"begin": 7458,
											"end": 7503,
											"name": "SWAP1"
										},
										{
											"begin": 7458,
											"end": 7503,
											"name": "SWAP3"
										},
										{
											"begin": 7458,
											"end": 7503,
											"name": "SWAP2"
										},
										{
											"begin": 7458,
											"end": 7503,
											"name": "SWAP1"
										},
										{
											"begin": 7458,
											"end": 7503,
											"name": "POP"
										},
										{
											"begin": 7458,
											"end": 7503,
											"name": "POP"
										},
										{
											"begin": 7458,
											"end": 7503,
											"name": "POP"
										},
										{
											"begin": 7442,
											"end": 7503,
											"name": "SWAP1"
										},
										{
											"begin": 7442,
											"end": 7503,
											"name": "POP"
										},
										{
											"begin": 7568,
											"end": 7583,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7586,
											"end": 7645,
											"name": "PUSH [tag]",
											"value": "133"
										},
										{
											"begin": 7626,
											"end": 7644,
											"name": "DUP6"
										},
										{
											"begin": 7586,
											"end": 7621,
											"name": "PUSH [tag]",
											"value": "134"
										},
										{
											"begin": 7606,
											"end": 7620,
											"name": "DUP9"
										},
										{
											"begin": 7586,
											"end": 7601,
											"name": "DUP7"
										},
										{
											"begin": 7586,
											"end": 7605,
											"name": "PUSH [tag]",
											"value": "135"
										},
										{
											"begin": 7586,
											"end": 7605,
											"name": "SWAP1"
										},
										{
											"begin": 7586,
											"end": 7621,
											"name": "SWAP2"
										},
										{
											"begin": 7586,
											"end": 7621,
											"name": "SWAP1"
										},
										{
											"begin": 7586,
											"end": 7621,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 7586,
											"end": 7621,
											"name": "AND"
										},
										{
											"begin": 7586,
											"end": 7621,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 7586,
											"end": 7621,
											"name": "tag",
											"value": "134"
										},
										{
											"begin": 7586,
											"end": 7621,
											"name": "JUMPDEST"
										},
										{
											"begin": 7586,
											"end": 7625,
											"name": "PUSH [tag]",
											"value": "136"
										},
										{
											"begin": 7586,
											"end": 7625,
											"name": "SWAP1"
										},
										{
											"begin": 7586,
											"end": 7645,
											"name": "SWAP2"
										},
										{
											"begin": 7586,
											"end": 7645,
											"name": "SWAP1"
										},
										{
											"begin": 7586,
											"end": 7645,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 7586,
											"end": 7645,
											"name": "AND"
										},
										{
											"begin": 7586,
											"end": 7645,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 7586,
											"end": 7645,
											"name": "tag",
											"value": "133"
										},
										{
											"begin": 7586,
											"end": 7645,
											"name": "JUMPDEST"
										},
										{
											"begin": 7568,
											"end": 7645,
											"name": "SWAP1"
										},
										{
											"begin": 7568,
											"end": 7645,
											"name": "POP"
										},
										{
											"begin": 7712,
											"end": 7726,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7737,
											"end": 7742,
											"name": "DUP3"
										},
										{
											"begin": 7729,
											"end": 7764,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7729,
											"end": 7764,
											"name": "AND"
										},
										{
											"begin": 7729,
											"end": 7764,
											"name": "PUSH",
											"value": "77C7B8FC"
										},
										{
											"begin": 7729,
											"end": 7766,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7729,
											"end": 7766,
											"name": "MLOAD"
										},
										{
											"begin": 7729,
											"end": 7766,
											"name": "DUP2"
										},
										{
											"begin": 7729,
											"end": 7766,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 7729,
											"end": 7766,
											"name": "AND"
										},
										{
											"begin": 7729,
											"end": 7766,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 7729,
											"end": 7766,
											"name": "SHL"
										},
										{
											"begin": 7729,
											"end": 7766,
											"name": "DUP2"
										},
										{
											"begin": 7729,
											"end": 7766,
											"name": "MSTORE"
										},
										{
											"begin": 7729,
											"end": 7766,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 7729,
											"end": 7766,
											"name": "ADD"
										},
										{
											"begin": 7729,
											"end": 7766,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7729,
											"end": 7766,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7729,
											"end": 7766,
											"name": "MLOAD"
										},
										{
											"begin": 7729,
											"end": 7766,
											"name": "DUP1"
										},
										{
											"begin": 7729,
											"end": 7766,
											"name": "DUP4"
										},
										{
											"begin": 7729,
											"end": 7766,
											"name": "SUB"
										},
										{
											"begin": 7729,
											"end": 7766,
											"name": "DUP2"
										},
										{
											"begin": 7729,
											"end": 7766,
											"name": "DUP7"
										},
										{
											"begin": 7729,
											"end": 7766,
											"name": "DUP1"
										},
										{
											"begin": 7729,
											"end": 7766,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 7729,
											"end": 7766,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "137"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "137"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 7729,
											"end": 7766,
											"name": "POP"
										},
										{
											"begin": 7729,
											"end": 7766,
											"name": "GAS"
										},
										{
											"begin": 7729,
											"end": 7766,
											"name": "STATICCALL"
										},
										{
											"begin": 7729,
											"end": 7766,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "138"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "138"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 7729,
											"end": 7766,
											"name": "POP"
										},
										{
											"begin": 7729,
											"end": 7766,
											"name": "POP"
										},
										{
											"begin": 7729,
											"end": 7766,
											"name": "POP"
										},
										{
											"begin": 7729,
											"end": 7766,
											"name": "POP"
										},
										{
											"begin": 7729,
											"end": 7766,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7729,
											"end": 7766,
											"name": "MLOAD"
										},
										{
											"begin": 7729,
											"end": 7766,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "139"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "139"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 7729,
											"end": 7766,
											"name": "DUP2"
										},
										{
											"begin": 7729,
											"end": 7766,
											"name": "ADD"
										},
										{
											"begin": 7729,
											"end": 7766,
											"name": "SWAP1"
										},
										{
											"begin": 7729,
											"end": 7766,
											"name": "DUP1"
										},
										{
											"begin": 7729,
											"end": 7766,
											"name": "DUP1"
										},
										{
											"begin": 7729,
											"end": 7766,
											"name": "MLOAD"
										},
										{
											"begin": 7729,
											"end": 7766,
											"name": "SWAP1"
										},
										{
											"begin": 7729,
											"end": 7766,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7729,
											"end": 7766,
											"name": "ADD"
										},
										{
											"begin": 7729,
											"end": 7766,
											"name": "SWAP1"
										},
										{
											"begin": 7729,
											"end": 7766,
											"name": "SWAP3"
										},
										{
											"begin": 7729,
											"end": 7766,
											"name": "SWAP2"
										},
										{
											"begin": 7729,
											"end": 7766,
											"name": "SWAP1"
										},
										{
											"begin": 7729,
											"end": 7766,
											"name": "POP"
										},
										{
											"begin": 7729,
											"end": 7766,
											"name": "POP"
										},
										{
											"begin": 7729,
											"end": 7766,
											"name": "POP"
										},
										{
											"begin": 7712,
											"end": 7766,
											"name": "SWAP1"
										},
										{
											"begin": 7712,
											"end": 7766,
											"name": "POP"
										},
										{
											"begin": 7871,
											"end": 7900,
											"name": "PUSH [tag]",
											"value": "140"
										},
										{
											"begin": 7895,
											"end": 7899,
											"name": "PUSH",
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 7871,
											"end": 7890,
											"name": "PUSH [tag]",
											"value": "141"
										},
										{
											"begin": 7882,
											"end": 7889,
											"name": "DUP5"
										},
										{
											"begin": 7871,
											"end": 7877,
											"name": "DUP5"
										},
										{
											"begin": 7871,
											"end": 7881,
											"name": "PUSH [tag]",
											"value": "135"
										},
										{
											"begin": 7871,
											"end": 7881,
											"name": "SWAP1"
										},
										{
											"begin": 7871,
											"end": 7890,
											"name": "SWAP2"
										},
										{
											"begin": 7871,
											"end": 7890,
											"name": "SWAP1"
										},
										{
											"begin": 7871,
											"end": 7890,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 7871,
											"end": 7890,
											"name": "AND"
										},
										{
											"begin": 7871,
											"end": 7890,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 7871,
											"end": 7890,
											"name": "tag",
											"value": "141"
										},
										{
											"begin": 7871,
											"end": 7890,
											"name": "JUMPDEST"
										},
										{
											"begin": 7871,
											"end": 7894,
											"name": "PUSH [tag]",
											"value": "136"
										},
										{
											"begin": 7871,
											"end": 7894,
											"name": "SWAP1"
										},
										{
											"begin": 7871,
											"end": 7900,
											"name": "SWAP2"
										},
										{
											"begin": 7871,
											"end": 7900,
											"name": "SWAP1"
										},
										{
											"begin": 7871,
											"end": 7900,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 7871,
											"end": 7900,
											"name": "AND"
										},
										{
											"begin": 7871,
											"end": 7900,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 7871,
											"end": 7900,
											"name": "tag",
											"value": "140"
										},
										{
											"begin": 7871,
											"end": 7900,
											"name": "JUMPDEST"
										},
										{
											"begin": 7857,
											"end": 7865,
											"name": "DUP10"
										},
										{
											"begin": 7866,
											"end": 7867,
											"name": "DUP7"
										},
										{
											"begin": 7857,
											"end": 7868,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 7857,
											"end": 7868,
											"name": "DUP2"
										},
										{
											"begin": 7857,
											"end": 7868,
											"name": "LT"
										},
										{
											"begin": 7857,
											"end": 7868,
											"name": "PUSH [tag]",
											"value": "142"
										},
										{
											"begin": 7857,
											"end": 7868,
											"name": "JUMPI"
										},
										{
											"begin": 7857,
											"end": 7868,
											"name": "INVALID"
										},
										{
											"begin": 7857,
											"end": 7868,
											"name": "tag",
											"value": "142"
										},
										{
											"begin": 7857,
											"end": 7868,
											"name": "JUMPDEST"
										},
										{
											"begin": 7857,
											"end": 7868,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7857,
											"end": 7868,
											"name": "MUL"
										},
										{
											"begin": 7857,
											"end": 7868,
											"name": "ADD"
										},
										{
											"begin": 7857,
											"end": 7900,
											"name": "DUP2"
										},
										{
											"begin": 7857,
											"end": 7900,
											"name": "DUP2"
										},
										{
											"begin": 7857,
											"end": 7900,
											"name": "MSTORE"
										},
										{
											"begin": 7857,
											"end": 7900,
											"name": "POP"
										},
										{
											"begin": 7857,
											"end": 7900,
											"name": "POP"
										},
										{
											"begin": 7256,
											"end": 7911,
											"name": "POP"
										},
										{
											"begin": 7256,
											"end": 7911,
											"name": "POP"
										},
										{
											"begin": 7256,
											"end": 7911,
											"name": "POP"
										},
										{
											"begin": 7256,
											"end": 7911,
											"name": "POP"
										},
										{
											"begin": 7300,
											"end": 7303,
											"name": "DUP1"
										},
										{
											"begin": 7300,
											"end": 7303,
											"name": "DUP1"
										},
										{
											"begin": 7300,
											"end": 7303,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 7300,
											"end": 7303,
											"name": "ADD"
										},
										{
											"begin": 7300,
											"end": 7303,
											"name": "SWAP2"
										},
										{
											"begin": 7300,
											"end": 7303,
											"name": "POP"
										},
										{
											"begin": 7300,
											"end": 7303,
											"name": "POP"
										},
										{
											"begin": 7256,
											"end": 7911,
											"name": "PUSH [tag]",
											"value": "124"
										},
										{
											"begin": 7256,
											"end": 7911,
											"name": "JUMP"
										},
										{
											"begin": 7256,
											"end": 7911,
											"name": "tag",
											"value": "125"
										},
										{
											"begin": 7256,
											"end": 7911,
											"name": "JUMPDEST"
										},
										{
											"begin": 7256,
											"end": 7911,
											"name": "POP"
										},
										{
											"begin": 6874,
											"end": 7917,
											"name": "POP"
										},
										{
											"begin": 6874,
											"end": 7917,
											"name": "POP"
										},
										{
											"begin": 6874,
											"end": 7917,
											"name": "POP"
										},
										{
											"begin": 6874,
											"end": 7917,
											"name": "SWAP1"
										},
										{
											"begin": 6874,
											"end": 7917,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 3941,
											"end": 5393,
											"name": "tag",
											"value": "40"
										},
										{
											"begin": 3941,
											"end": 5393,
											"name": "JUMPDEST"
										},
										{
											"begin": 4013,
											"end": 4042,
											"name": "PUSH [tag]",
											"value": "144"
										},
										{
											"begin": 4013,
											"end": 4042,
											"name": "PUSH [tag]",
											"value": "76"
										},
										{
											"begin": 4013,
											"end": 4042,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4013,
											"end": 4042,
											"name": "tag",
											"value": "144"
										},
										{
											"begin": 4013,
											"end": 4042,
											"name": "JUMPDEST"
										},
										{
											"begin": 4063,
											"end": 4078,
											"name": "PUSH",
											"value": "34"
										},
										{
											"begin": 4063,
											"end": 4078,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4063,
											"end": 4078,
											"name": "SWAP1"
										},
										{
											"begin": 4063,
											"end": 4078,
											"name": "SLOAD"
										},
										{
											"begin": 4063,
											"end": 4078,
											"name": "SWAP1"
										},
										{
											"begin": 4063,
											"end": 4078,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 4063,
											"end": 4078,
											"name": "EXP"
										},
										{
											"begin": 4063,
											"end": 4078,
											"name": "SWAP1"
										},
										{
											"begin": 4063,
											"end": 4078,
											"name": "DIV"
										},
										{
											"begin": 4063,
											"end": 4078,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4063,
											"end": 4078,
											"name": "AND"
										},
										{
											"begin": 4045,
											"end": 4096,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4045,
											"end": 4096,
											"name": "AND"
										},
										{
											"begin": 4045,
											"end": 4096,
											"name": "PUSH",
											"value": "FB6D3A89"
										},
										{
											"begin": 4045,
											"end": 4098,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4045,
											"end": 4098,
											"name": "MLOAD"
										},
										{
											"begin": 4045,
											"end": 4098,
											"name": "DUP2"
										},
										{
											"begin": 4045,
											"end": 4098,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 4045,
											"end": 4098,
											"name": "AND"
										},
										{
											"begin": 4045,
											"end": 4098,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 4045,
											"end": 4098,
											"name": "SHL"
										},
										{
											"begin": 4045,
											"end": 4098,
											"name": "DUP2"
										},
										{
											"begin": 4045,
											"end": 4098,
											"name": "MSTORE"
										},
										{
											"begin": 4045,
											"end": 4098,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 4045,
											"end": 4098,
											"name": "ADD"
										},
										{
											"begin": 4045,
											"end": 4098,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 4045,
											"end": 4098,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4045,
											"end": 4098,
											"name": "MLOAD"
										},
										{
											"begin": 4045,
											"end": 4098,
											"name": "DUP1"
										},
										{
											"begin": 4045,
											"end": 4098,
											"name": "DUP4"
										},
										{
											"begin": 4045,
											"end": 4098,
											"name": "SUB"
										},
										{
											"begin": 4045,
											"end": 4098,
											"name": "DUP2"
										},
										{
											"begin": 4045,
											"end": 4098,
											"name": "DUP7"
										},
										{
											"begin": 4045,
											"end": 4098,
											"name": "DUP1"
										},
										{
											"begin": 4045,
											"end": 4098,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 4045,
											"end": 4098,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "145"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "145"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 4045,
											"end": 4098,
											"name": "POP"
										},
										{
											"begin": 4045,
											"end": 4098,
											"name": "GAS"
										},
										{
											"begin": 4045,
											"end": 4098,
											"name": "STATICCALL"
										},
										{
											"begin": 4045,
											"end": 4098,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "146"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "146"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 4045,
											"end": 4098,
											"name": "POP"
										},
										{
											"begin": 4045,
											"end": 4098,
											"name": "POP"
										},
										{
											"begin": 4045,
											"end": 4098,
											"name": "POP"
										},
										{
											"begin": 4045,
											"end": 4098,
											"name": "POP"
										},
										{
											"begin": 4045,
											"end": 4098,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4045,
											"end": 4098,
											"name": "MLOAD"
										},
										{
											"begin": 4045,
											"end": 4098,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 101,
											"end": 105,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 97,
											"end": 106,
											"name": "NOT"
										},
										{
											"begin": 90,
											"end": 94,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 84,
											"end": 88,
											"name": "DUP3"
										},
										{
											"begin": 80,
											"end": 95,
											"name": "ADD"
										},
										{
											"begin": 76,
											"end": 107,
											"name": "AND"
										},
										{
											"begin": 69,
											"end": 74,
											"name": "DUP3"
										},
										{
											"begin": 65,
											"end": 108,
											"name": "ADD"
										},
										{
											"begin": 126,
											"end": 132,
											"name": "DUP1"
										},
										{
											"begin": 120,
											"end": 124,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 113,
											"end": 133,
											"name": "MSTORE"
										},
										{
											"begin": 0,
											"end": 138,
											"name": "POP"
										},
										{
											"begin": 13,
											"end": 16,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 17,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "147"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "147"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 4045,
											"end": 4098,
											"name": "DUP2"
										},
										{
											"begin": 4045,
											"end": 4098,
											"name": "ADD"
										},
										{
											"begin": 4045,
											"end": 4098,
											"name": "SWAP1"
										},
										{
											"begin": 4045,
											"end": 4098,
											"name": "DUP1"
										},
										{
											"begin": 4045,
											"end": 4098,
											"name": "SWAP2"
										},
										{
											"begin": 4045,
											"end": 4098,
											"name": "SWAP1"
										},
										{
											"begin": 4045,
											"end": 4098,
											"name": "POP"
										},
										{
											"begin": 4045,
											"end": 4098,
											"name": "POP"
										},
										{
											"begin": 4013,
											"end": 4098,
											"name": "SWAP1"
										},
										{
											"begin": 4013,
											"end": 4098,
											"name": "POP"
										},
										{
											"begin": 4175,
											"end": 4192,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4202,
											"end": 4211,
											"name": "DUP1"
										},
										{
											"begin": 4230,
											"end": 4231,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4226,
											"end": 4231,
											"name": "SWAP1"
										},
										{
											"begin": 4226,
											"end": 4231,
											"name": "POP"
										},
										{
											"begin": 4221,
											"end": 4352,
											"name": "tag",
											"value": "148"
										},
										{
											"begin": 4221,
											"end": 4352,
											"name": "JUMPDEST"
										},
										{
											"begin": 4237,
											"end": 4255,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 4233,
											"end": 4234,
											"name": "DUP2"
										},
										{
											"begin": 4233,
											"end": 4255,
											"name": "LT"
										},
										{
											"begin": 4221,
											"end": 4352,
											"name": "ISZERO"
										},
										{
											"begin": 4221,
											"end": 4352,
											"name": "PUSH [tag]",
											"value": "149"
										},
										{
											"begin": 4221,
											"end": 4352,
											"name": "JUMPI"
										},
										{
											"begin": 4288,
											"end": 4341,
											"name": "PUSH [tag]",
											"value": "151"
										},
										{
											"begin": 4302,
											"end": 4340,
											"name": "PUSH [tag]",
											"value": "152"
										},
										{
											"begin": 4312,
											"end": 4323,
											"name": "DUP5"
										},
										{
											"begin": 4324,
											"end": 4325,
											"name": "DUP4"
										},
										{
											"begin": 4312,
											"end": 4326,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 4312,
											"end": 4326,
											"name": "DUP2"
										},
										{
											"begin": 4312,
											"end": 4326,
											"name": "LT"
										},
										{
											"begin": 4312,
											"end": 4326,
											"name": "PUSH [tag]",
											"value": "153"
										},
										{
											"begin": 4312,
											"end": 4326,
											"name": "JUMPI"
										},
										{
											"begin": 4312,
											"end": 4326,
											"name": "INVALID"
										},
										{
											"begin": 4312,
											"end": 4326,
											"name": "tag",
											"value": "153"
										},
										{
											"begin": 4312,
											"end": 4326,
											"name": "JUMPDEST"
										},
										{
											"begin": 4312,
											"end": 4326,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4312,
											"end": 4326,
											"name": "MUL"
										},
										{
											"begin": 4312,
											"end": 4326,
											"name": "ADD"
										},
										{
											"begin": 4312,
											"end": 4326,
											"name": "MLOAD"
										},
										{
											"begin": 4328,
											"end": 4336,
											"name": "DUP7"
										},
										{
											"begin": 4337,
											"end": 4338,
											"name": "DUP5"
										},
										{
											"begin": 4328,
											"end": 4339,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 4328,
											"end": 4339,
											"name": "DUP2"
										},
										{
											"begin": 4328,
											"end": 4339,
											"name": "LT"
										},
										{
											"begin": 4328,
											"end": 4339,
											"name": "PUSH [tag]",
											"value": "154"
										},
										{
											"begin": 4328,
											"end": 4339,
											"name": "JUMPI"
										},
										{
											"begin": 4328,
											"end": 4339,
											"name": "INVALID"
										},
										{
											"begin": 4328,
											"end": 4339,
											"name": "tag",
											"value": "154"
										},
										{
											"begin": 4328,
											"end": 4339,
											"name": "JUMPDEST"
										},
										{
											"begin": 4328,
											"end": 4339,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4328,
											"end": 4339,
											"name": "MUL"
										},
										{
											"begin": 4328,
											"end": 4339,
											"name": "ADD"
										},
										{
											"begin": 4328,
											"end": 4339,
											"name": "MLOAD"
										},
										{
											"begin": 4302,
											"end": 4311,
											"name": "PUSH [tag]",
											"value": "155"
										},
										{
											"begin": 4302,
											"end": 4340,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4302,
											"end": 4340,
											"name": "tag",
											"value": "152"
										},
										{
											"begin": 4302,
											"end": 4340,
											"name": "JUMPDEST"
										},
										{
											"begin": 4288,
											"end": 4297,
											"name": "DUP4"
										},
										{
											"begin": 4288,
											"end": 4301,
											"name": "PUSH [tag]",
											"value": "156"
										},
										{
											"begin": 4288,
											"end": 4301,
											"name": "SWAP1"
										},
										{
											"begin": 4288,
											"end": 4341,
											"name": "SWAP2"
										},
										{
											"begin": 4288,
											"end": 4341,
											"name": "SWAP1"
										},
										{
											"begin": 4288,
											"end": 4341,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 4288,
											"end": 4341,
											"name": "AND"
										},
										{
											"begin": 4288,
											"end": 4341,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4288,
											"end": 4341,
											"name": "tag",
											"value": "151"
										},
										{
											"begin": 4288,
											"end": 4341,
											"name": "JUMPDEST"
										},
										{
											"begin": 4276,
											"end": 4341,
											"name": "SWAP2"
										},
										{
											"begin": 4276,
											"end": 4341,
											"name": "POP"
										},
										{
											"begin": 4257,
											"end": 4260,
											"name": "DUP1"
										},
										{
											"begin": 4257,
											"end": 4260,
											"name": "DUP1"
										},
										{
											"begin": 4257,
											"end": 4260,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 4257,
											"end": 4260,
											"name": "ADD"
										},
										{
											"begin": 4257,
											"end": 4260,
											"name": "SWAP2"
										},
										{
											"begin": 4257,
											"end": 4260,
											"name": "POP"
										},
										{
											"begin": 4257,
											"end": 4260,
											"name": "POP"
										},
										{
											"begin": 4221,
											"end": 4352,
											"name": "PUSH [tag]",
											"value": "148"
										},
										{
											"begin": 4221,
											"end": 4352,
											"name": "JUMP"
										},
										{
											"begin": 4221,
											"end": 4352,
											"name": "tag",
											"value": "149"
										},
										{
											"begin": 4221,
											"end": 4352,
											"name": "JUMPDEST"
										},
										{
											"begin": 4362,
											"end": 4384,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4387,
											"end": 4413,
											"name": "PUSH [tag]",
											"value": "157"
										},
										{
											"begin": 4403,
											"end": 4412,
											"name": "DUP4"
										},
										{
											"begin": 4387,
											"end": 4402,
											"name": "PUSH [tag]",
											"value": "158"
										},
										{
											"begin": 4387,
											"end": 4413,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4387,
											"end": 4413,
											"name": "tag",
											"value": "157"
										},
										{
											"begin": 4387,
											"end": 4413,
											"name": "JUMPDEST"
										},
										{
											"begin": 4362,
											"end": 4413,
											"name": "SWAP1"
										},
										{
											"begin": 4362,
											"end": 4413,
											"name": "POP"
										},
										{
											"begin": 4477,
											"end": 4494,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4497,
											"end": 4519,
											"name": "PUSH [tag]",
											"value": "159"
										},
										{
											"begin": 4497,
											"end": 4517,
											"name": "PUSH [tag]",
											"value": "65"
										},
										{
											"begin": 4497,
											"end": 4519,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4497,
											"end": 4519,
											"name": "tag",
											"value": "159"
										},
										{
											"begin": 4497,
											"end": 4519,
											"name": "JUMPDEST"
										},
										{
											"begin": 4477,
											"end": 4519,
											"name": "SWAP1"
										},
										{
											"begin": 4477,
											"end": 4519,
											"name": "POP"
										},
										{
											"begin": 4545,
											"end": 4546,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4533,
											"end": 4542,
											"name": "DUP2"
										},
										{
											"begin": 4533,
											"end": 4546,
											"name": "GT"
										},
										{
											"begin": 4529,
											"end": 4619,
											"name": "ISZERO"
										},
										{
											"begin": 4529,
											"end": 4619,
											"name": "PUSH [tag]",
											"value": "160"
										},
										{
											"begin": 4529,
											"end": 4619,
											"name": "JUMPI"
										},
										{
											"begin": 4579,
											"end": 4608,
											"name": "PUSH [tag]",
											"value": "161"
										},
										{
											"begin": 4598,
											"end": 4607,
											"name": "DUP2"
										},
										{
											"begin": 4579,
											"end": 4593,
											"name": "DUP4"
										},
										{
											"begin": 4579,
											"end": 4597,
											"name": "PUSH [tag]",
											"value": "162"
										},
										{
											"begin": 4579,
											"end": 4597,
											"name": "SWAP1"
										},
										{
											"begin": 4579,
											"end": 4608,
											"name": "SWAP2"
										},
										{
											"begin": 4579,
											"end": 4608,
											"name": "SWAP1"
										},
										{
											"begin": 4579,
											"end": 4608,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 4579,
											"end": 4608,
											"name": "AND"
										},
										{
											"begin": 4579,
											"end": 4608,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4579,
											"end": 4608,
											"name": "tag",
											"value": "161"
										},
										{
											"begin": 4579,
											"end": 4608,
											"name": "JUMPDEST"
										},
										{
											"begin": 4562,
											"end": 4608,
											"name": "SWAP2"
										},
										{
											"begin": 4562,
											"end": 4608,
											"name": "POP"
										},
										{
											"begin": 4529,
											"end": 4619,
											"name": "tag",
											"value": "160"
										},
										{
											"begin": 4529,
											"end": 4619,
											"name": "JUMPDEST"
										},
										{
											"begin": 4698,
											"end": 4713,
											"name": "PUSH",
											"value": "37"
										},
										{
											"begin": 4698,
											"end": 4713,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4698,
											"end": 4713,
											"name": "SWAP1"
										},
										{
											"begin": 4698,
											"end": 4713,
											"name": "SLOAD"
										},
										{
											"begin": 4698,
											"end": 4713,
											"name": "SWAP1"
										},
										{
											"begin": 4698,
											"end": 4713,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 4698,
											"end": 4713,
											"name": "EXP"
										},
										{
											"begin": 4698,
											"end": 4713,
											"name": "SWAP1"
										},
										{
											"begin": 4698,
											"end": 4713,
											"name": "DIV"
										},
										{
											"begin": 4698,
											"end": 4713,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4698,
											"end": 4713,
											"name": "AND"
										},
										{
											"begin": 4683,
											"end": 4723,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4683,
											"end": 4723,
											"name": "AND"
										},
										{
											"begin": 4683,
											"end": 4723,
											"name": "PUSH",
											"value": "2E1A7D4D"
										},
										{
											"begin": 4724,
											"end": 4738,
											"name": "DUP4"
										},
										{
											"begin": 4683,
											"end": 4739,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4683,
											"end": 4739,
											"name": "MLOAD"
										},
										{
											"begin": 4683,
											"end": 4739,
											"name": "DUP3"
										},
										{
											"begin": 4683,
											"end": 4739,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 4683,
											"end": 4739,
											"name": "AND"
										},
										{
											"begin": 4683,
											"end": 4739,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 4683,
											"end": 4739,
											"name": "SHL"
										},
										{
											"begin": 4683,
											"end": 4739,
											"name": "DUP2"
										},
										{
											"begin": 4683,
											"end": 4739,
											"name": "MSTORE"
										},
										{
											"begin": 4683,
											"end": 4739,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 4683,
											"end": 4739,
											"name": "ADD"
										},
										{
											"begin": 4683,
											"end": 4739,
											"name": "DUP1"
										},
										{
											"begin": 4683,
											"end": 4739,
											"name": "DUP3"
										},
										{
											"begin": 4683,
											"end": 4739,
											"name": "DUP2"
										},
										{
											"begin": 4683,
											"end": 4739,
											"name": "MSTORE"
										},
										{
											"begin": 4683,
											"end": 4739,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4683,
											"end": 4739,
											"name": "ADD"
										},
										{
											"begin": 4683,
											"end": 4739,
											"name": "SWAP2"
										},
										{
											"begin": 4683,
											"end": 4739,
											"name": "POP"
										},
										{
											"begin": 4683,
											"end": 4739,
											"name": "POP"
										},
										{
											"begin": 4683,
											"end": 4739,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4683,
											"end": 4739,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4683,
											"end": 4739,
											"name": "MLOAD"
										},
										{
											"begin": 4683,
											"end": 4739,
											"name": "DUP1"
										},
										{
											"begin": 4683,
											"end": 4739,
											"name": "DUP4"
										},
										{
											"begin": 4683,
											"end": 4739,
											"name": "SUB"
										},
										{
											"begin": 4683,
											"end": 4739,
											"name": "DUP2"
										},
										{
											"begin": 4683,
											"end": 4739,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4683,
											"end": 4739,
											"name": "DUP8"
										},
										{
											"begin": 4683,
											"end": 4739,
											"name": "DUP1"
										},
										{
											"begin": 4683,
											"end": 4739,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 4683,
											"end": 4739,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "163"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "163"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 4683,
											"end": 4739,
											"name": "POP"
										},
										{
											"begin": 4683,
											"end": 4739,
											"name": "GAS"
										},
										{
											"begin": 4683,
											"end": 4739,
											"name": "CALL"
										},
										{
											"begin": 4683,
											"end": 4739,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "164"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "164"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 4683,
											"end": 4739,
											"name": "POP"
										},
										{
											"begin": 4683,
											"end": 4739,
											"name": "POP"
										},
										{
											"begin": 4683,
											"end": 4739,
											"name": "POP"
										},
										{
											"begin": 4683,
											"end": 4739,
											"name": "POP"
										},
										{
											"begin": 4812,
											"end": 4880,
											"name": "PUSH [tag]",
											"value": "165"
										},
										{
											"begin": 4848,
											"end": 4863,
											"name": "PUSH",
											"value": "34"
										},
										{
											"begin": 4848,
											"end": 4863,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4848,
											"end": 4863,
											"name": "SWAP1"
										},
										{
											"begin": 4848,
											"end": 4863,
											"name": "SLOAD"
										},
										{
											"begin": 4848,
											"end": 4863,
											"name": "SWAP1"
										},
										{
											"begin": 4848,
											"end": 4863,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 4848,
											"end": 4863,
											"name": "EXP"
										},
										{
											"begin": 4848,
											"end": 4863,
											"name": "SWAP1"
										},
										{
											"begin": 4848,
											"end": 4863,
											"name": "DIV"
										},
										{
											"begin": 4848,
											"end": 4863,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4848,
											"end": 4863,
											"name": "AND"
										},
										{
											"begin": 4865,
											"end": 4879,
											"name": "DUP4"
										},
										{
											"begin": 4819,
											"end": 4834,
											"name": "PUSH",
											"value": "36"
										},
										{
											"begin": 4819,
											"end": 4834,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4819,
											"end": 4834,
											"name": "SWAP1"
										},
										{
											"begin": 4819,
											"end": 4834,
											"name": "SLOAD"
										},
										{
											"begin": 4819,
											"end": 4834,
											"name": "SWAP1"
										},
										{
											"begin": 4819,
											"end": 4834,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 4819,
											"end": 4834,
											"name": "EXP"
										},
										{
											"begin": 4819,
											"end": 4834,
											"name": "SWAP1"
										},
										{
											"begin": 4819,
											"end": 4834,
											"name": "DIV"
										},
										{
											"begin": 4819,
											"end": 4834,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4819,
											"end": 4834,
											"name": "AND"
										},
										{
											"begin": 4812,
											"end": 4847,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4812,
											"end": 4847,
											"name": "AND"
										},
										{
											"begin": 4812,
											"end": 4847,
											"name": "PUSH [tag]",
											"value": "92"
										},
										{
											"begin": 4812,
											"end": 4847,
											"name": "SWAP1"
										},
										{
											"begin": 4812,
											"end": 4880,
											"name": "SWAP3"
										},
										{
											"begin": 4812,
											"end": 4880,
											"name": "SWAP2"
										},
										{
											"begin": 4812,
											"end": 4880,
											"name": "SWAP1"
										},
										{
											"begin": 4812,
											"end": 4880,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 4812,
											"end": 4880,
											"name": "AND"
										},
										{
											"begin": 4812,
											"end": 4880,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4812,
											"end": 4880,
											"name": "tag",
											"value": "165"
										},
										{
											"begin": 4812,
											"end": 4880,
											"name": "JUMPDEST"
										},
										{
											"begin": 4908,
											"end": 4923,
											"name": "PUSH",
											"value": "34"
										},
										{
											"begin": 4908,
											"end": 4923,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4908,
											"end": 4923,
											"name": "SWAP1"
										},
										{
											"begin": 4908,
											"end": 4923,
											"name": "SLOAD"
										},
										{
											"begin": 4908,
											"end": 4923,
											"name": "SWAP1"
										},
										{
											"begin": 4908,
											"end": 4923,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 4908,
											"end": 4923,
											"name": "EXP"
										},
										{
											"begin": 4908,
											"end": 4923,
											"name": "SWAP1"
										},
										{
											"begin": 4908,
											"end": 4923,
											"name": "DIV"
										},
										{
											"begin": 4908,
											"end": 4923,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4908,
											"end": 4923,
											"name": "AND"
										},
										{
											"begin": 4890,
											"end": 4951,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4890,
											"end": 4951,
											"name": "AND"
										},
										{
											"begin": 4890,
											"end": 4951,
											"name": "PUSH",
											"value": "18A7BD76"
										},
										{
											"begin": 4952,
											"end": 4960,
											"name": "DUP8"
										},
										{
											"begin": 4962,
											"end": 4976,
											"name": "DUP5"
										},
										{
											"begin": 4890,
											"end": 4977,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4890,
											"end": 4977,
											"name": "MLOAD"
										},
										{
											"begin": 4890,
											"end": 4977,
											"name": "DUP4"
										},
										{
											"begin": 4890,
											"end": 4977,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 4890,
											"end": 4977,
											"name": "AND"
										},
										{
											"begin": 4890,
											"end": 4977,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 4890,
											"end": 4977,
											"name": "SHL"
										},
										{
											"begin": 4890,
											"end": 4977,
											"name": "DUP2"
										},
										{
											"begin": 4890,
											"end": 4977,
											"name": "MSTORE"
										},
										{
											"begin": 4890,
											"end": 4977,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 4890,
											"end": 4977,
											"name": "ADD"
										},
										{
											"begin": 4890,
											"end": 4977,
											"name": "DUP1"
										},
										{
											"begin": 4890,
											"end": 4977,
											"name": "DUP4"
										},
										{
											"begin": 4890,
											"end": 4977,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 4890,
											"end": 4977,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4890,
											"end": 4977,
											"name": "MUL"
										},
										{
											"begin": 4890,
											"end": 4977,
											"name": "DUP1"
										},
										{
											"begin": 4890,
											"end": 4977,
											"name": "DUP4"
										},
										{
											"begin": 4890,
											"end": 4977,
											"name": "DUP4"
										},
										{
											"begin": 23,
											"end": 24,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "166"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP4"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "DUP2"
										},
										{
											"begin": 27,
											"end": 37,
											"name": "LT"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "168"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI"
										},
										{
											"begin": 99,
											"end": 100,
											"name": "DUP1"
										},
										{
											"begin": 94,
											"end": 97,
											"name": "DUP3"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 84,
											"end": 102,
											"name": "MLOAD"
										},
										{
											"begin": 80,
											"end": 81,
											"name": "DUP2"
										},
										{
											"begin": 75,
											"end": 78,
											"name": "DUP5"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "ADD"
										},
										{
											"begin": 64,
											"end": 103,
											"name": "MSTORE"
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 49,
											"end": 50,
											"name": "DUP2"
										},
										{
											"begin": 45,
											"end": 55,
											"name": "ADD"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "SWAP1"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "POP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "166"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "168"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "POP"
										},
										{
											"begin": 4890,
											"end": 4977,
											"name": "POP"
										},
										{
											"begin": 4890,
											"end": 4977,
											"name": "POP"
										},
										{
											"begin": 4890,
											"end": 4977,
											"name": "POP"
										},
										{
											"begin": 4890,
											"end": 4977,
											"name": "SWAP1"
										},
										{
											"begin": 4890,
											"end": 4977,
											"name": "POP"
										},
										{
											"begin": 4890,
											"end": 4977,
											"name": "ADD"
										},
										{
											"begin": 4890,
											"end": 4977,
											"name": "DUP3"
										},
										{
											"begin": 4890,
											"end": 4977,
											"name": "DUP2"
										},
										{
											"begin": 4890,
											"end": 4977,
											"name": "MSTORE"
										},
										{
											"begin": 4890,
											"end": 4977,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4890,
											"end": 4977,
											"name": "ADD"
										},
										{
											"begin": 4890,
											"end": 4977,
											"name": "SWAP3"
										},
										{
											"begin": 4890,
											"end": 4977,
											"name": "POP"
										},
										{
											"begin": 4890,
											"end": 4977,
											"name": "POP"
										},
										{
											"begin": 4890,
											"end": 4977,
											"name": "POP"
										},
										{
											"begin": 4890,
											"end": 4977,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4890,
											"end": 4977,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4890,
											"end": 4977,
											"name": "MLOAD"
										},
										{
											"begin": 4890,
											"end": 4977,
											"name": "DUP1"
										},
										{
											"begin": 4890,
											"end": 4977,
											"name": "DUP4"
										},
										{
											"begin": 4890,
											"end": 4977,
											"name": "SUB"
										},
										{
											"begin": 4890,
											"end": 4977,
											"name": "DUP2"
										},
										{
											"begin": 4890,
											"end": 4977,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4890,
											"end": 4977,
											"name": "DUP8"
										},
										{
											"begin": 4890,
											"end": 4977,
											"name": "DUP1"
										},
										{
											"begin": 4890,
											"end": 4977,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 4890,
											"end": 4977,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "169"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "169"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 4890,
											"end": 4977,
											"name": "POP"
										},
										{
											"begin": 4890,
											"end": 4977,
											"name": "GAS"
										},
										{
											"begin": 4890,
											"end": 4977,
											"name": "CALL"
										},
										{
											"begin": 4890,
											"end": 4977,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "170"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "170"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 4890,
											"end": 4977,
											"name": "POP"
										},
										{
											"begin": 4890,
											"end": 4977,
											"name": "POP"
										},
										{
											"begin": 4890,
											"end": 4977,
											"name": "POP"
										},
										{
											"begin": 4890,
											"end": 4977,
											"name": "POP"
										},
										{
											"begin": 5058,
											"end": 5059,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5054,
											"end": 5059,
											"name": "SWAP3"
										},
										{
											"begin": 5054,
											"end": 5059,
											"name": "POP"
										},
										{
											"begin": 5049,
											"end": 5387,
											"name": "tag",
											"value": "171"
										},
										{
											"begin": 5049,
											"end": 5387,
											"name": "JUMPDEST"
										},
										{
											"begin": 5066,
											"end": 5084,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 5061,
											"end": 5062,
											"name": "DUP4"
										},
										{
											"begin": 5061,
											"end": 5084,
											"name": "LT"
										},
										{
											"begin": 5049,
											"end": 5387,
											"name": "ISZERO"
										},
										{
											"begin": 5049,
											"end": 5387,
											"name": "PUSH [tag]",
											"value": "172"
										},
										{
											"begin": 5049,
											"end": 5387,
											"name": "JUMPI"
										},
										{
											"begin": 5104,
											"end": 5121,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5131,
											"end": 5142,
											"name": "DUP6"
										},
										{
											"begin": 5143,
											"end": 5144,
											"name": "DUP5"
										},
										{
											"begin": 5131,
											"end": 5145,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 5131,
											"end": 5145,
											"name": "DUP2"
										},
										{
											"begin": 5131,
											"end": 5145,
											"name": "LT"
										},
										{
											"begin": 5131,
											"end": 5145,
											"name": "PUSH [tag]",
											"value": "174"
										},
										{
											"begin": 5131,
											"end": 5145,
											"name": "JUMPI"
										},
										{
											"begin": 5131,
											"end": 5145,
											"name": "INVALID"
										},
										{
											"begin": 5131,
											"end": 5145,
											"name": "tag",
											"value": "174"
										},
										{
											"begin": 5131,
											"end": 5145,
											"name": "JUMPDEST"
										},
										{
											"begin": 5131,
											"end": 5145,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5131,
											"end": 5145,
											"name": "MUL"
										},
										{
											"begin": 5131,
											"end": 5145,
											"name": "ADD"
										},
										{
											"begin": 5131,
											"end": 5145,
											"name": "MLOAD"
										},
										{
											"begin": 5104,
											"end": 5146,
											"name": "SWAP1"
										},
										{
											"begin": 5104,
											"end": 5146,
											"name": "POP"
										},
										{
											"begin": 5160,
											"end": 5175,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5178,
											"end": 5188,
											"name": "DUP2"
										},
										{
											"begin": 5178,
											"end": 5198,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5178,
											"end": 5198,
											"name": "AND"
										},
										{
											"begin": 5178,
											"end": 5198,
											"name": "PUSH",
											"value": "70A08231"
										},
										{
											"begin": 5207,
											"end": 5211,
											"name": "ADDRESS"
										},
										{
											"begin": 5178,
											"end": 5213,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5178,
											"end": 5213,
											"name": "MLOAD"
										},
										{
											"begin": 5178,
											"end": 5213,
											"name": "DUP3"
										},
										{
											"begin": 5178,
											"end": 5213,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 5178,
											"end": 5213,
											"name": "AND"
										},
										{
											"begin": 5178,
											"end": 5213,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 5178,
											"end": 5213,
											"name": "SHL"
										},
										{
											"begin": 5178,
											"end": 5213,
											"name": "DUP2"
										},
										{
											"begin": 5178,
											"end": 5213,
											"name": "MSTORE"
										},
										{
											"begin": 5178,
											"end": 5213,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 5178,
											"end": 5213,
											"name": "ADD"
										},
										{
											"begin": 5178,
											"end": 5213,
											"name": "DUP1"
										},
										{
											"begin": 5178,
											"end": 5213,
											"name": "DUP3"
										},
										{
											"begin": 5178,
											"end": 5213,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5178,
											"end": 5213,
											"name": "AND"
										},
										{
											"begin": 5178,
											"end": 5213,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5178,
											"end": 5213,
											"name": "AND"
										},
										{
											"begin": 5178,
											"end": 5213,
											"name": "DUP2"
										},
										{
											"begin": 5178,
											"end": 5213,
											"name": "MSTORE"
										},
										{
											"begin": 5178,
											"end": 5213,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5178,
											"end": 5213,
											"name": "ADD"
										},
										{
											"begin": 5178,
											"end": 5213,
											"name": "SWAP2"
										},
										{
											"begin": 5178,
											"end": 5213,
											"name": "POP"
										},
										{
											"begin": 5178,
											"end": 5213,
											"name": "POP"
										},
										{
											"begin": 5178,
											"end": 5213,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5178,
											"end": 5213,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5178,
											"end": 5213,
											"name": "MLOAD"
										},
										{
											"begin": 5178,
											"end": 5213,
											"name": "DUP1"
										},
										{
											"begin": 5178,
											"end": 5213,
											"name": "DUP4"
										},
										{
											"begin": 5178,
											"end": 5213,
											"name": "SUB"
										},
										{
											"begin": 5178,
											"end": 5213,
											"name": "DUP2"
										},
										{
											"begin": 5178,
											"end": 5213,
											"name": "DUP7"
										},
										{
											"begin": 5178,
											"end": 5213,
											"name": "DUP1"
										},
										{
											"begin": 5178,
											"end": 5213,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 5178,
											"end": 5213,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "175"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "175"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 5178,
											"end": 5213,
											"name": "POP"
										},
										{
											"begin": 5178,
											"end": 5213,
											"name": "GAS"
										},
										{
											"begin": 5178,
											"end": 5213,
											"name": "STATICCALL"
										},
										{
											"begin": 5178,
											"end": 5213,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "176"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "176"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 5178,
											"end": 5213,
											"name": "POP"
										},
										{
											"begin": 5178,
											"end": 5213,
											"name": "POP"
										},
										{
											"begin": 5178,
											"end": 5213,
											"name": "POP"
										},
										{
											"begin": 5178,
											"end": 5213,
											"name": "POP"
										},
										{
											"begin": 5178,
											"end": 5213,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5178,
											"end": 5213,
											"name": "MLOAD"
										},
										{
											"begin": 5178,
											"end": 5213,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "177"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "177"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 5178,
											"end": 5213,
											"name": "DUP2"
										},
										{
											"begin": 5178,
											"end": 5213,
											"name": "ADD"
										},
										{
											"begin": 5178,
											"end": 5213,
											"name": "SWAP1"
										},
										{
											"begin": 5178,
											"end": 5213,
											"name": "DUP1"
										},
										{
											"begin": 5178,
											"end": 5213,
											"name": "DUP1"
										},
										{
											"begin": 5178,
											"end": 5213,
											"name": "MLOAD"
										},
										{
											"begin": 5178,
											"end": 5213,
											"name": "SWAP1"
										},
										{
											"begin": 5178,
											"end": 5213,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5178,
											"end": 5213,
											"name": "ADD"
										},
										{
											"begin": 5178,
											"end": 5213,
											"name": "SWAP1"
										},
										{
											"begin": 5178,
											"end": 5213,
											"name": "SWAP3"
										},
										{
											"begin": 5178,
											"end": 5213,
											"name": "SWAP2"
										},
										{
											"begin": 5178,
											"end": 5213,
											"name": "SWAP1"
										},
										{
											"begin": 5178,
											"end": 5213,
											"name": "POP"
										},
										{
											"begin": 5178,
											"end": 5213,
											"name": "POP"
										},
										{
											"begin": 5178,
											"end": 5213,
											"name": "POP"
										},
										{
											"begin": 5160,
											"end": 5213,
											"name": "SWAP1"
										},
										{
											"begin": 5160,
											"end": 5213,
											"name": "POP"
										},
										{
											"begin": 5227,
											"end": 5241,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5256,
											"end": 5264,
											"name": "DUP9"
										},
										{
											"begin": 5265,
											"end": 5266,
											"name": "DUP7"
										},
										{
											"begin": 5256,
											"end": 5267,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 5256,
											"end": 5267,
											"name": "DUP2"
										},
										{
											"begin": 5256,
											"end": 5267,
											"name": "LT"
										},
										{
											"begin": 5256,
											"end": 5267,
											"name": "PUSH [tag]",
											"value": "178"
										},
										{
											"begin": 5256,
											"end": 5267,
											"name": "JUMPI"
										},
										{
											"begin": 5256,
											"end": 5267,
											"name": "INVALID"
										},
										{
											"begin": 5256,
											"end": 5267,
											"name": "tag",
											"value": "178"
										},
										{
											"begin": 5256,
											"end": 5267,
											"name": "JUMPDEST"
										},
										{
											"begin": 5256,
											"end": 5267,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5256,
											"end": 5267,
											"name": "MUL"
										},
										{
											"begin": 5256,
											"end": 5267,
											"name": "ADD"
										},
										{
											"begin": 5256,
											"end": 5267,
											"name": "MLOAD"
										},
										{
											"begin": 5245,
											"end": 5252,
											"name": "DUP3"
										},
										{
											"begin": 5245,
											"end": 5267,
											"name": "GT"
										},
										{
											"begin": 5245,
											"end": 5267,
											"name": "ISZERO"
										},
										{
											"begin": 5244,
											"end": 5292,
											"name": "PUSH [tag]",
											"value": "179"
										},
										{
											"begin": 5244,
											"end": 5292,
											"name": "JUMPI"
										},
										{
											"begin": 5281,
											"end": 5289,
											"name": "DUP9"
										},
										{
											"begin": 5290,
											"end": 5291,
											"name": "DUP7"
										},
										{
											"begin": 5281,
											"end": 5292,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 5281,
											"end": 5292,
											"name": "DUP2"
										},
										{
											"begin": 5281,
											"end": 5292,
											"name": "LT"
										},
										{
											"begin": 5281,
											"end": 5292,
											"name": "PUSH [tag]",
											"value": "180"
										},
										{
											"begin": 5281,
											"end": 5292,
											"name": "JUMPI"
										},
										{
											"begin": 5281,
											"end": 5292,
											"name": "INVALID"
										},
										{
											"begin": 5281,
											"end": 5292,
											"name": "tag",
											"value": "180"
										},
										{
											"begin": 5281,
											"end": 5292,
											"name": "JUMPDEST"
										},
										{
											"begin": 5281,
											"end": 5292,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5281,
											"end": 5292,
											"name": "MUL"
										},
										{
											"begin": 5281,
											"end": 5292,
											"name": "ADD"
										},
										{
											"begin": 5281,
											"end": 5292,
											"name": "MLOAD"
										},
										{
											"begin": 5244,
											"end": 5292,
											"name": "PUSH [tag]",
											"value": "181"
										},
										{
											"begin": 5244,
											"end": 5292,
											"name": "JUMP"
										},
										{
											"begin": 5244,
											"end": 5292,
											"name": "tag",
											"value": "179"
										},
										{
											"begin": 5244,
											"end": 5292,
											"name": "JUMPDEST"
										},
										{
											"begin": 5271,
											"end": 5278,
											"name": "DUP2"
										},
										{
											"begin": 5244,
											"end": 5292,
											"name": "tag",
											"value": "181"
										},
										{
											"begin": 5244,
											"end": 5292,
											"name": "JUMPDEST"
										},
										{
											"begin": 5227,
											"end": 5292,
											"name": "SWAP1"
										},
										{
											"begin": 5227,
											"end": 5292,
											"name": "POP"
										},
										{
											"begin": 5331,
											"end": 5376,
											"name": "PUSH [tag]",
											"value": "182"
										},
										{
											"begin": 5355,
											"end": 5367,
											"name": "PUSH [tag]",
											"value": "183"
										},
										{
											"begin": 5355,
											"end": 5365,
											"name": "PUSH [tag]",
											"value": "85"
										},
										{
											"begin": 5355,
											"end": 5367,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 5355,
											"end": 5367,
											"name": "tag",
											"value": "183"
										},
										{
											"begin": 5355,
											"end": 5367,
											"name": "JUMPDEST"
										},
										{
											"begin": 5369,
											"end": 5375,
											"name": "DUP3"
										},
										{
											"begin": 5331,
											"end": 5341,
											"name": "DUP6"
										},
										{
											"begin": 5331,
											"end": 5354,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5331,
											"end": 5354,
											"name": "AND"
										},
										{
											"begin": 5331,
											"end": 5354,
											"name": "PUSH [tag]",
											"value": "111"
										},
										{
											"begin": 5331,
											"end": 5354,
											"name": "SWAP1"
										},
										{
											"begin": 5331,
											"end": 5376,
											"name": "SWAP3"
										},
										{
											"begin": 5331,
											"end": 5376,
											"name": "SWAP2"
										},
										{
											"begin": 5331,
											"end": 5376,
											"name": "SWAP1"
										},
										{
											"begin": 5331,
											"end": 5376,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 5331,
											"end": 5376,
											"name": "AND"
										},
										{
											"begin": 5331,
											"end": 5376,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 5331,
											"end": 5376,
											"name": "tag",
											"value": "182"
										},
										{
											"begin": 5331,
											"end": 5376,
											"name": "JUMPDEST"
										},
										{
											"begin": 5049,
											"end": 5387,
											"name": "POP"
										},
										{
											"begin": 5049,
											"end": 5387,
											"name": "POP"
										},
										{
											"begin": 5049,
											"end": 5387,
											"name": "POP"
										},
										{
											"begin": 5086,
											"end": 5089,
											"name": "DUP3"
										},
										{
											"begin": 5086,
											"end": 5089,
											"name": "DUP1"
										},
										{
											"begin": 5086,
											"end": 5089,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 5086,
											"end": 5089,
											"name": "ADD"
										},
										{
											"begin": 5086,
											"end": 5089,
											"name": "SWAP4"
										},
										{
											"begin": 5086,
											"end": 5089,
											"name": "POP"
										},
										{
											"begin": 5086,
											"end": 5089,
											"name": "POP"
										},
										{
											"begin": 5049,
											"end": 5387,
											"name": "PUSH [tag]",
											"value": "171"
										},
										{
											"begin": 5049,
											"end": 5387,
											"name": "JUMP"
										},
										{
											"begin": 5049,
											"end": 5387,
											"name": "tag",
											"value": "172"
										},
										{
											"begin": 5049,
											"end": 5387,
											"name": "JUMPDEST"
										},
										{
											"begin": 3941,
											"end": 5393,
											"name": "POP"
										},
										{
											"begin": 3941,
											"end": 5393,
											"name": "POP"
										},
										{
											"begin": 3941,
											"end": 5393,
											"name": "POP"
										},
										{
											"begin": 3941,
											"end": 5393,
											"name": "POP"
										},
										{
											"begin": 3941,
											"end": 5393,
											"name": "POP"
										},
										{
											"begin": 3941,
											"end": 5393,
											"name": "POP"
										},
										{
											"begin": 3941,
											"end": 5393,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 5482,
											"end": 5621,
											"name": "tag",
											"value": "42"
										},
										{
											"begin": 5482,
											"end": 5621,
											"name": "JUMPDEST"
										},
										{
											"begin": 5532,
											"end": 5539,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5573,
											"end": 5588,
											"name": "PUSH",
											"value": "37"
										},
										{
											"begin": 5573,
											"end": 5588,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5573,
											"end": 5588,
											"name": "SWAP1"
										},
										{
											"begin": 5573,
											"end": 5588,
											"name": "SLOAD"
										},
										{
											"begin": 5573,
											"end": 5588,
											"name": "SWAP1"
										},
										{
											"begin": 5573,
											"end": 5588,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 5573,
											"end": 5588,
											"name": "EXP"
										},
										{
											"begin": 5573,
											"end": 5588,
											"name": "SWAP1"
										},
										{
											"begin": 5573,
											"end": 5588,
											"name": "DIV"
										},
										{
											"begin": 5573,
											"end": 5588,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5573,
											"end": 5588,
											"name": "AND"
										},
										{
											"begin": 5558,
											"end": 5599,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5558,
											"end": 5599,
											"name": "AND"
										},
										{
											"begin": 5558,
											"end": 5599,
											"name": "PUSH",
											"value": "70A08231"
										},
										{
											"begin": 5608,
											"end": 5612,
											"name": "ADDRESS"
										},
										{
											"begin": 5558,
											"end": 5614,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5558,
											"end": 5614,
											"name": "MLOAD"
										},
										{
											"begin": 5558,
											"end": 5614,
											"name": "DUP3"
										},
										{
											"begin": 5558,
											"end": 5614,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 5558,
											"end": 5614,
											"name": "AND"
										},
										{
											"begin": 5558,
											"end": 5614,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 5558,
											"end": 5614,
											"name": "SHL"
										},
										{
											"begin": 5558,
											"end": 5614,
											"name": "DUP2"
										},
										{
											"begin": 5558,
											"end": 5614,
											"name": "MSTORE"
										},
										{
											"begin": 5558,
											"end": 5614,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 5558,
											"end": 5614,
											"name": "ADD"
										},
										{
											"begin": 5558,
											"end": 5614,
											"name": "DUP1"
										},
										{
											"begin": 5558,
											"end": 5614,
											"name": "DUP3"
										},
										{
											"begin": 5558,
											"end": 5614,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5558,
											"end": 5614,
											"name": "AND"
										},
										{
											"begin": 5558,
											"end": 5614,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5558,
											"end": 5614,
											"name": "AND"
										},
										{
											"begin": 5558,
											"end": 5614,
											"name": "DUP2"
										},
										{
											"begin": 5558,
											"end": 5614,
											"name": "MSTORE"
										},
										{
											"begin": 5558,
											"end": 5614,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5558,
											"end": 5614,
											"name": "ADD"
										},
										{
											"begin": 5558,
											"end": 5614,
											"name": "SWAP2"
										},
										{
											"begin": 5558,
											"end": 5614,
											"name": "POP"
										},
										{
											"begin": 5558,
											"end": 5614,
											"name": "POP"
										},
										{
											"begin": 5558,
											"end": 5614,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5558,
											"end": 5614,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5558,
											"end": 5614,
											"name": "MLOAD"
										},
										{
											"begin": 5558,
											"end": 5614,
											"name": "DUP1"
										},
										{
											"begin": 5558,
											"end": 5614,
											"name": "DUP4"
										},
										{
											"begin": 5558,
											"end": 5614,
											"name": "SUB"
										},
										{
											"begin": 5558,
											"end": 5614,
											"name": "DUP2"
										},
										{
											"begin": 5558,
											"end": 5614,
											"name": "DUP7"
										},
										{
											"begin": 5558,
											"end": 5614,
											"name": "DUP1"
										},
										{
											"begin": 5558,
											"end": 5614,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 5558,
											"end": 5614,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "185"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "185"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 5558,
											"end": 5614,
											"name": "POP"
										},
										{
											"begin": 5558,
											"end": 5614,
											"name": "GAS"
										},
										{
											"begin": 5558,
											"end": 5614,
											"name": "STATICCALL"
										},
										{
											"begin": 5558,
											"end": 5614,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "186"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "186"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 5558,
											"end": 5614,
											"name": "POP"
										},
										{
											"begin": 5558,
											"end": 5614,
											"name": "POP"
										},
										{
											"begin": 5558,
											"end": 5614,
											"name": "POP"
										},
										{
											"begin": 5558,
											"end": 5614,
											"name": "POP"
										},
										{
											"begin": 5558,
											"end": 5614,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5558,
											"end": 5614,
											"name": "MLOAD"
										},
										{
											"begin": 5558,
											"end": 5614,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "187"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "187"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 5558,
											"end": 5614,
											"name": "DUP2"
										},
										{
											"begin": 5558,
											"end": 5614,
											"name": "ADD"
										},
										{
											"begin": 5558,
											"end": 5614,
											"name": "SWAP1"
										},
										{
											"begin": 5558,
											"end": 5614,
											"name": "DUP1"
										},
										{
											"begin": 5558,
											"end": 5614,
											"name": "DUP1"
										},
										{
											"begin": 5558,
											"end": 5614,
											"name": "MLOAD"
										},
										{
											"begin": 5558,
											"end": 5614,
											"name": "SWAP1"
										},
										{
											"begin": 5558,
											"end": 5614,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5558,
											"end": 5614,
											"name": "ADD"
										},
										{
											"begin": 5558,
											"end": 5614,
											"name": "SWAP1"
										},
										{
											"begin": 5558,
											"end": 5614,
											"name": "SWAP3"
										},
										{
											"begin": 5558,
											"end": 5614,
											"name": "SWAP2"
										},
										{
											"begin": 5558,
											"end": 5614,
											"name": "SWAP1"
										},
										{
											"begin": 5558,
											"end": 5614,
											"name": "POP"
										},
										{
											"begin": 5558,
											"end": 5614,
											"name": "POP"
										},
										{
											"begin": 5558,
											"end": 5614,
											"name": "POP"
										},
										{
											"begin": 5551,
											"end": 5614,
											"name": "SWAP1"
										},
										{
											"begin": 5551,
											"end": 5614,
											"name": "POP"
										},
										{
											"begin": 5482,
											"end": 5621,
											"name": "SWAP1"
										},
										{
											"begin": 5482,
											"end": 5621,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 8027,
											"end": 8419,
											"name": "tag",
											"value": "44"
										},
										{
											"begin": 8027,
											"end": 8419,
											"name": "JUMPDEST"
										},
										{
											"begin": 8076,
											"end": 8083,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8095,
											"end": 8124,
											"name": "PUSH [tag]",
											"value": "189"
										},
										{
											"begin": 8095,
											"end": 8124,
											"name": "PUSH [tag]",
											"value": "76"
										},
										{
											"begin": 8095,
											"end": 8124,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 8095,
											"end": 8124,
											"name": "tag",
											"value": "189"
										},
										{
											"begin": 8095,
											"end": 8124,
											"name": "JUMPDEST"
										},
										{
											"begin": 8145,
											"end": 8160,
											"name": "PUSH",
											"value": "34"
										},
										{
											"begin": 8145,
											"end": 8160,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8145,
											"end": 8160,
											"name": "SWAP1"
										},
										{
											"begin": 8145,
											"end": 8160,
											"name": "SLOAD"
										},
										{
											"begin": 8145,
											"end": 8160,
											"name": "SWAP1"
										},
										{
											"begin": 8145,
											"end": 8160,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 8145,
											"end": 8160,
											"name": "EXP"
										},
										{
											"begin": 8145,
											"end": 8160,
											"name": "SWAP1"
										},
										{
											"begin": 8145,
											"end": 8160,
											"name": "DIV"
										},
										{
											"begin": 8145,
											"end": 8160,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8145,
											"end": 8160,
											"name": "AND"
										},
										{
											"begin": 8127,
											"end": 8178,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8127,
											"end": 8178,
											"name": "AND"
										},
										{
											"begin": 8127,
											"end": 8178,
											"name": "PUSH",
											"value": "FB6D3A89"
										},
										{
											"begin": 8127,
											"end": 8180,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8127,
											"end": 8180,
											"name": "MLOAD"
										},
										{
											"begin": 8127,
											"end": 8180,
											"name": "DUP2"
										},
										{
											"begin": 8127,
											"end": 8180,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 8127,
											"end": 8180,
											"name": "AND"
										},
										{
											"begin": 8127,
											"end": 8180,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 8127,
											"end": 8180,
											"name": "SHL"
										},
										{
											"begin": 8127,
											"end": 8180,
											"name": "DUP2"
										},
										{
											"begin": 8127,
											"end": 8180,
											"name": "MSTORE"
										},
										{
											"begin": 8127,
											"end": 8180,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 8127,
											"end": 8180,
											"name": "ADD"
										},
										{
											"begin": 8127,
											"end": 8180,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 8127,
											"end": 8180,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8127,
											"end": 8180,
											"name": "MLOAD"
										},
										{
											"begin": 8127,
											"end": 8180,
											"name": "DUP1"
										},
										{
											"begin": 8127,
											"end": 8180,
											"name": "DUP4"
										},
										{
											"begin": 8127,
											"end": 8180,
											"name": "SUB"
										},
										{
											"begin": 8127,
											"end": 8180,
											"name": "DUP2"
										},
										{
											"begin": 8127,
											"end": 8180,
											"name": "DUP7"
										},
										{
											"begin": 8127,
											"end": 8180,
											"name": "DUP1"
										},
										{
											"begin": 8127,
											"end": 8180,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 8127,
											"end": 8180,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "190"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "190"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 8127,
											"end": 8180,
											"name": "POP"
										},
										{
											"begin": 8127,
											"end": 8180,
											"name": "GAS"
										},
										{
											"begin": 8127,
											"end": 8180,
											"name": "STATICCALL"
										},
										{
											"begin": 8127,
											"end": 8180,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "191"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "191"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 8127,
											"end": 8180,
											"name": "POP"
										},
										{
											"begin": 8127,
											"end": 8180,
											"name": "POP"
										},
										{
											"begin": 8127,
											"end": 8180,
											"name": "POP"
										},
										{
											"begin": 8127,
											"end": 8180,
											"name": "POP"
										},
										{
											"begin": 8127,
											"end": 8180,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8127,
											"end": 8180,
											"name": "MLOAD"
										},
										{
											"begin": 8127,
											"end": 8180,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 101,
											"end": 105,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 97,
											"end": 106,
											"name": "NOT"
										},
										{
											"begin": 90,
											"end": 94,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 84,
											"end": 88,
											"name": "DUP3"
										},
										{
											"begin": 80,
											"end": 95,
											"name": "ADD"
										},
										{
											"begin": 76,
											"end": 107,
											"name": "AND"
										},
										{
											"begin": 69,
											"end": 74,
											"name": "DUP3"
										},
										{
											"begin": 65,
											"end": 108,
											"name": "ADD"
										},
										{
											"begin": 126,
											"end": 132,
											"name": "DUP1"
										},
										{
											"begin": 120,
											"end": 124,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 113,
											"end": 133,
											"name": "MSTORE"
										},
										{
											"begin": 0,
											"end": 138,
											"name": "POP"
										},
										{
											"begin": 13,
											"end": 16,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 17,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "192"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "192"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 8127,
											"end": 8180,
											"name": "DUP2"
										},
										{
											"begin": 8127,
											"end": 8180,
											"name": "ADD"
										},
										{
											"begin": 8127,
											"end": 8180,
											"name": "SWAP1"
										},
										{
											"begin": 8127,
											"end": 8180,
											"name": "DUP1"
										},
										{
											"begin": 8127,
											"end": 8180,
											"name": "SWAP2"
										},
										{
											"begin": 8127,
											"end": 8180,
											"name": "SWAP1"
										},
										{
											"begin": 8127,
											"end": 8180,
											"name": "POP"
										},
										{
											"begin": 8127,
											"end": 8180,
											"name": "POP"
										},
										{
											"begin": 8095,
											"end": 8180,
											"name": "SWAP1"
										},
										{
											"begin": 8095,
											"end": 8180,
											"name": "POP"
										},
										{
											"begin": 8190,
											"end": 8216,
											"name": "PUSH [tag]",
											"value": "193"
										},
										{
											"begin": 8190,
											"end": 8216,
											"name": "PUSH [tag]",
											"value": "113"
										},
										{
											"begin": 8190,
											"end": 8216,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 8190,
											"end": 8216,
											"name": "tag",
											"value": "193"
										},
										{
											"begin": 8190,
											"end": 8216,
											"name": "JUMPDEST"
										},
										{
											"begin": 8219,
											"end": 8233,
											"name": "PUSH [tag]",
											"value": "194"
										},
										{
											"begin": 8219,
											"end": 8231,
											"name": "PUSH [tag]",
											"value": "34"
										},
										{
											"begin": 8219,
											"end": 8233,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 8219,
											"end": 8233,
											"name": "tag",
											"value": "194"
										},
										{
											"begin": 8219,
											"end": 8233,
											"name": "JUMPDEST"
										},
										{
											"begin": 8190,
											"end": 8233,
											"name": "SWAP1"
										},
										{
											"begin": 8190,
											"end": 8233,
											"name": "POP"
										},
										{
											"begin": 8244,
											"end": 8256,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8271,
											"end": 8280,
											"name": "DUP1"
										},
										{
											"begin": 8281,
											"end": 8282,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8271,
											"end": 8282,
											"name": "SWAP1"
										},
										{
											"begin": 8271,
											"end": 8282,
											"name": "POP"
										},
										{
											"begin": 8266,
											"end": 8392,
											"name": "tag",
											"value": "195"
										},
										{
											"begin": 8266,
											"end": 8392,
											"name": "JUMPDEST"
										},
										{
											"begin": 8288,
											"end": 8306,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 8284,
											"end": 8285,
											"name": "DUP2"
										},
										{
											"begin": 8284,
											"end": 8306,
											"name": "LT"
										},
										{
											"begin": 8266,
											"end": 8392,
											"name": "ISZERO"
										},
										{
											"begin": 8266,
											"end": 8392,
											"name": "PUSH [tag]",
											"value": "196"
										},
										{
											"begin": 8266,
											"end": 8392,
											"name": "JUMPI"
										},
										{
											"begin": 8333,
											"end": 8381,
											"name": "PUSH [tag]",
											"value": "198"
										},
										{
											"begin": 8342,
											"end": 8380,
											"name": "PUSH [tag]",
											"value": "199"
										},
										{
											"begin": 8352,
											"end": 8363,
											"name": "DUP6"
										},
										{
											"begin": 8364,
											"end": 8365,
											"name": "DUP4"
										},
										{
											"begin": 8352,
											"end": 8366,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 8352,
											"end": 8366,
											"name": "DUP2"
										},
										{
											"begin": 8352,
											"end": 8366,
											"name": "LT"
										},
										{
											"begin": 8352,
											"end": 8366,
											"name": "PUSH [tag]",
											"value": "200"
										},
										{
											"begin": 8352,
											"end": 8366,
											"name": "JUMPI"
										},
										{
											"begin": 8352,
											"end": 8366,
											"name": "INVALID"
										},
										{
											"begin": 8352,
											"end": 8366,
											"name": "tag",
											"value": "200"
										},
										{
											"begin": 8352,
											"end": 8366,
											"name": "JUMPDEST"
										},
										{
											"begin": 8352,
											"end": 8366,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8352,
											"end": 8366,
											"name": "MUL"
										},
										{
											"begin": 8352,
											"end": 8366,
											"name": "ADD"
										},
										{
											"begin": 8352,
											"end": 8366,
											"name": "MLOAD"
										},
										{
											"begin": 8368,
											"end": 8376,
											"name": "DUP6"
										},
										{
											"begin": 8377,
											"end": 8378,
											"name": "DUP5"
										},
										{
											"begin": 8368,
											"end": 8379,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 8368,
											"end": 8379,
											"name": "DUP2"
										},
										{
											"begin": 8368,
											"end": 8379,
											"name": "LT"
										},
										{
											"begin": 8368,
											"end": 8379,
											"name": "PUSH [tag]",
											"value": "201"
										},
										{
											"begin": 8368,
											"end": 8379,
											"name": "JUMPI"
										},
										{
											"begin": 8368,
											"end": 8379,
											"name": "INVALID"
										},
										{
											"begin": 8368,
											"end": 8379,
											"name": "tag",
											"value": "201"
										},
										{
											"begin": 8368,
											"end": 8379,
											"name": "JUMPDEST"
										},
										{
											"begin": 8368,
											"end": 8379,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8368,
											"end": 8379,
											"name": "MUL"
										},
										{
											"begin": 8368,
											"end": 8379,
											"name": "ADD"
										},
										{
											"begin": 8368,
											"end": 8379,
											"name": "MLOAD"
										},
										{
											"begin": 8342,
											"end": 8351,
											"name": "PUSH [tag]",
											"value": "155"
										},
										{
											"begin": 8342,
											"end": 8380,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 8342,
											"end": 8380,
											"name": "tag",
											"value": "199"
										},
										{
											"begin": 8342,
											"end": 8380,
											"name": "JUMPDEST"
										},
										{
											"begin": 8333,
											"end": 8337,
											"name": "DUP4"
										},
										{
											"begin": 8333,
											"end": 8341,
											"name": "PUSH [tag]",
											"value": "156"
										},
										{
											"begin": 8333,
											"end": 8341,
											"name": "SWAP1"
										},
										{
											"begin": 8333,
											"end": 8381,
											"name": "SWAP2"
										},
										{
											"begin": 8333,
											"end": 8381,
											"name": "SWAP1"
										},
										{
											"begin": 8333,
											"end": 8381,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 8333,
											"end": 8381,
											"name": "AND"
										},
										{
											"begin": 8333,
											"end": 8381,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 8333,
											"end": 8381,
											"name": "tag",
											"value": "198"
										},
										{
											"begin": 8333,
											"end": 8381,
											"name": "JUMPDEST"
										},
										{
											"begin": 8326,
											"end": 8381,
											"name": "SWAP2"
										},
										{
											"begin": 8326,
											"end": 8381,
											"name": "POP"
										},
										{
											"begin": 8308,
											"end": 8311,
											"name": "DUP1"
										},
										{
											"begin": 8308,
											"end": 8311,
											"name": "DUP1"
										},
										{
											"begin": 8308,
											"end": 8311,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 8308,
											"end": 8311,
											"name": "ADD"
										},
										{
											"begin": 8308,
											"end": 8311,
											"name": "SWAP2"
										},
										{
											"begin": 8308,
											"end": 8311,
											"name": "POP"
										},
										{
											"begin": 8308,
											"end": 8311,
											"name": "POP"
										},
										{
											"begin": 8266,
											"end": 8392,
											"name": "PUSH [tag]",
											"value": "195"
										},
										{
											"begin": 8266,
											"end": 8392,
											"name": "JUMP"
										},
										{
											"begin": 8266,
											"end": 8392,
											"name": "tag",
											"value": "196"
										},
										{
											"begin": 8266,
											"end": 8392,
											"name": "JUMPDEST"
										},
										{
											"begin": 8266,
											"end": 8392,
											"name": "POP"
										},
										{
											"begin": 8408,
											"end": 8412,
											"name": "DUP1"
										},
										{
											"begin": 8401,
											"end": 8412,
											"name": "SWAP4"
										},
										{
											"begin": 8401,
											"end": 8412,
											"name": "POP"
										},
										{
											"begin": 8401,
											"end": 8412,
											"name": "POP"
										},
										{
											"begin": 8401,
											"end": 8412,
											"name": "POP"
										},
										{
											"begin": 8401,
											"end": 8412,
											"name": "POP"
										},
										{
											"begin": 8027,
											"end": 8419,
											"name": "SWAP1"
										},
										{
											"begin": 8027,
											"end": 8419,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1684,
											"end": 1821,
											"name": "tag",
											"value": "46"
										},
										{
											"begin": 1684,
											"end": 1821,
											"name": "JUMPDEST"
										},
										{
											"begin": 1103,
											"end": 1112,
											"name": "PUSH [tag]",
											"value": "203"
										},
										{
											"begin": 1103,
											"end": 1110,
											"name": "PUSH [tag]",
											"value": "57"
										},
										{
											"begin": 1103,
											"end": 1112,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1103,
											"end": 1112,
											"name": "tag",
											"value": "203"
										},
										{
											"begin": 1103,
											"end": 1112,
											"name": "JUMPDEST"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "PUSH [tag]",
											"value": "204"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "JUMPI"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "MLOAD"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "DUP2"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "MSTORE"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "ADD"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "DUP1"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "DUP1"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "ADD"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "DUP3"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "DUP2"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "SUB"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "DUP3"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "MSTORE"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "DUP2"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "MSTORE"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "ADD"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "DUP1"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "PUSH",
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "DUP2"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "MSTORE"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "POP"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "ADD"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "SWAP2"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "POP"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "POP"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "MLOAD"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "DUP1"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "SWAP2"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "SUB"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "SWAP1"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "REVERT"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "tag",
											"value": "204"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "JUMPDEST"
										},
										{
											"begin": 1782,
											"end": 1783,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1745,
											"end": 1785,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1745,
											"end": 1785,
											"name": "AND"
										},
										{
											"begin": 1766,
											"end": 1772,
											"name": "PUSH",
											"value": "33"
										},
										{
											"begin": 1766,
											"end": 1772,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1766,
											"end": 1772,
											"name": "SWAP1"
										},
										{
											"begin": 1766,
											"end": 1772,
											"name": "SLOAD"
										},
										{
											"begin": 1766,
											"end": 1772,
											"name": "SWAP1"
										},
										{
											"begin": 1766,
											"end": 1772,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1766,
											"end": 1772,
											"name": "EXP"
										},
										{
											"begin": 1766,
											"end": 1772,
											"name": "SWAP1"
										},
										{
											"begin": 1766,
											"end": 1772,
											"name": "DIV"
										},
										{
											"begin": 1766,
											"end": 1772,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1766,
											"end": 1772,
											"name": "AND"
										},
										{
											"begin": 1745,
											"end": 1785,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1745,
											"end": 1785,
											"name": "AND"
										},
										{
											"begin": 1745,
											"end": 1785,
											"name": "PUSH",
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 1745,
											"end": 1785,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1745,
											"end": 1785,
											"name": "MLOAD"
										},
										{
											"begin": 1745,
											"end": 1785,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1745,
											"end": 1785,
											"name": "MLOAD"
										},
										{
											"begin": 1745,
											"end": 1785,
											"name": "DUP1"
										},
										{
											"begin": 1745,
											"end": 1785,
											"name": "SWAP2"
										},
										{
											"begin": 1745,
											"end": 1785,
											"name": "SUB"
										},
										{
											"begin": 1745,
											"end": 1785,
											"name": "SWAP1"
										},
										{
											"begin": 1745,
											"end": 1785,
											"name": "LOG3"
										},
										{
											"begin": 1812,
											"end": 1813,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1795,
											"end": 1801,
											"name": "PUSH",
											"value": "33"
										},
										{
											"begin": 1795,
											"end": 1801,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1795,
											"end": 1814,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1795,
											"end": 1814,
											"name": "EXP"
										},
										{
											"begin": 1795,
											"end": 1814,
											"name": "DUP2"
										},
										{
											"begin": 1795,
											"end": 1814,
											"name": "SLOAD"
										},
										{
											"begin": 1795,
											"end": 1814,
											"name": "DUP2"
										},
										{
											"begin": 1795,
											"end": 1814,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1795,
											"end": 1814,
											"name": "MUL"
										},
										{
											"begin": 1795,
											"end": 1814,
											"name": "NOT"
										},
										{
											"begin": 1795,
											"end": 1814,
											"name": "AND"
										},
										{
											"begin": 1795,
											"end": 1814,
											"name": "SWAP1"
										},
										{
											"begin": 1795,
											"end": 1814,
											"name": "DUP4"
										},
										{
											"begin": 1795,
											"end": 1814,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1795,
											"end": 1814,
											"name": "AND"
										},
										{
											"begin": 1795,
											"end": 1814,
											"name": "MUL"
										},
										{
											"begin": 1795,
											"end": 1814,
											"name": "OR"
										},
										{
											"begin": 1795,
											"end": 1814,
											"name": "SWAP1"
										},
										{
											"begin": 1795,
											"end": 1814,
											"name": "SSTORE"
										},
										{
											"begin": 1795,
											"end": 1814,
											"name": "POP"
										},
										{
											"begin": 1684,
											"end": 1821,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1737,
											"end": 2414,
											"name": "tag",
											"value": "49"
										},
										{
											"begin": 1737,
											"end": 2414,
											"name": "JUMPDEST"
										},
										{
											"begin": 1103,
											"end": 1112,
											"name": "PUSH [tag]",
											"value": "207"
										},
										{
											"begin": 1103,
											"end": 1110,
											"name": "PUSH [tag]",
											"value": "57"
										},
										{
											"begin": 1103,
											"end": 1112,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1103,
											"end": 1112,
											"name": "tag",
											"value": "207"
										},
										{
											"begin": 1103,
											"end": 1112,
											"name": "JUMPDEST"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "PUSH [tag]",
											"value": "208"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "JUMPI"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "MLOAD"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "DUP2"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "MSTORE"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "ADD"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "DUP1"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "DUP1"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "ADD"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "DUP3"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "DUP2"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "SUB"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "DUP3"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "MSTORE"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "DUP2"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "MSTORE"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "ADD"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "DUP1"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "PUSH",
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "DUP2"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "MSTORE"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "POP"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "ADD"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "SWAP2"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "POP"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "POP"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "MLOAD"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "DUP1"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "SWAP2"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "SUB"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "SWAP1"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "REVERT"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "tag",
											"value": "208"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "JUMPDEST"
										},
										{
											"begin": 1892,
											"end": 1893,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1864,
											"end": 1894,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1864,
											"end": 1894,
											"name": "AND"
										},
										{
											"begin": 1864,
											"end": 1880,
											"name": "DUP4"
										},
										{
											"begin": 1864,
											"end": 1894,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1864,
											"end": 1894,
											"name": "AND"
										},
										{
											"begin": 1864,
											"end": 1894,
											"name": "EQ"
										},
										{
											"begin": 1864,
											"end": 1894,
											"name": "ISZERO"
										},
										{
											"begin": 1856,
											"end": 1933,
											"name": "PUSH [tag]",
											"value": "210"
										},
										{
											"begin": 1856,
											"end": 1933,
											"name": "JUMPI"
										},
										{
											"begin": 1856,
											"end": 1933,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1856,
											"end": 1933,
											"name": "MLOAD"
										},
										{
											"begin": 1856,
											"end": 1933,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1856,
											"end": 1933,
											"name": "DUP2"
										},
										{
											"begin": 1856,
											"end": 1933,
											"name": "MSTORE"
										},
										{
											"begin": 1856,
											"end": 1933,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1856,
											"end": 1933,
											"name": "ADD"
										},
										{
											"begin": 1856,
											"end": 1933,
											"name": "DUP1"
										},
										{
											"begin": 1856,
											"end": 1933,
											"name": "DUP1"
										},
										{
											"begin": 1856,
											"end": 1933,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1856,
											"end": 1933,
											"name": "ADD"
										},
										{
											"begin": 1856,
											"end": 1933,
											"name": "DUP3"
										},
										{
											"begin": 1856,
											"end": 1933,
											"name": "DUP2"
										},
										{
											"begin": 1856,
											"end": 1933,
											"name": "SUB"
										},
										{
											"begin": 1856,
											"end": 1933,
											"name": "DUP3"
										},
										{
											"begin": 1856,
											"end": 1933,
											"name": "MSTORE"
										},
										{
											"begin": 1856,
											"end": 1933,
											"name": "PUSH",
											"value": "22"
										},
										{
											"begin": 1856,
											"end": 1933,
											"name": "DUP2"
										},
										{
											"begin": 1856,
											"end": 1933,
											"name": "MSTORE"
										},
										{
											"begin": 1856,
											"end": 1933,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1856,
											"end": 1933,
											"name": "ADD"
										},
										{
											"begin": 1856,
											"end": 1933,
											"name": "DUP1"
										},
										{
											"begin": 1856,
											"end": 1933,
											"name": "PUSH data",
											"value": "2C2CDE26D907EDEF0275DD60C1D3730B459D629AEA5E0144E75833E4AC66B41"
										},
										{
											"begin": 1856,
											"end": 1933,
											"name": "PUSH",
											"value": "22"
										},
										{
											"begin": 1856,
											"end": 1933,
											"name": "SWAP2"
										},
										{
											"begin": 1856,
											"end": 1933,
											"name": "CODECOPY"
										},
										{
											"begin": 1856,
											"end": 1933,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1856,
											"end": 1933,
											"name": "ADD"
										},
										{
											"begin": 1856,
											"end": 1933,
											"name": "SWAP2"
										},
										{
											"begin": 1856,
											"end": 1933,
											"name": "POP"
										},
										{
											"begin": 1856,
											"end": 1933,
											"name": "POP"
										},
										{
											"begin": 1856,
											"end": 1933,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1856,
											"end": 1933,
											"name": "MLOAD"
										},
										{
											"begin": 1856,
											"end": 1933,
											"name": "DUP1"
										},
										{
											"begin": 1856,
											"end": 1933,
											"name": "SWAP2"
										},
										{
											"begin": 1856,
											"end": 1933,
											"name": "SUB"
										},
										{
											"begin": 1856,
											"end": 1933,
											"name": "SWAP1"
										},
										{
											"begin": 1856,
											"end": 1933,
											"name": "REVERT"
										},
										{
											"begin": 1856,
											"end": 1933,
											"name": "tag",
											"value": "210"
										},
										{
											"begin": 1856,
											"end": 1933,
											"name": "JUMPDEST"
										},
										{
											"begin": 1962,
											"end": 1978,
											"name": "DUP3"
										},
										{
											"begin": 1944,
											"end": 1959,
											"name": "PUSH",
											"value": "34"
										},
										{
											"begin": 1944,
											"end": 1959,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1944,
											"end": 1978,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1944,
											"end": 1978,
											"name": "EXP"
										},
										{
											"begin": 1944,
											"end": 1978,
											"name": "DUP2"
										},
										{
											"begin": 1944,
											"end": 1978,
											"name": "SLOAD"
										},
										{
											"begin": 1944,
											"end": 1978,
											"name": "DUP2"
										},
										{
											"begin": 1944,
											"end": 1978,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1944,
											"end": 1978,
											"name": "MUL"
										},
										{
											"begin": 1944,
											"end": 1978,
											"name": "NOT"
										},
										{
											"begin": 1944,
											"end": 1978,
											"name": "AND"
										},
										{
											"begin": 1944,
											"end": 1978,
											"name": "SWAP1"
										},
										{
											"begin": 1944,
											"end": 1978,
											"name": "DUP4"
										},
										{
											"begin": 1944,
											"end": 1978,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1944,
											"end": 1978,
											"name": "AND"
										},
										{
											"begin": 1944,
											"end": 1978,
											"name": "MUL"
										},
										{
											"begin": 1944,
											"end": 1978,
											"name": "OR"
										},
										{
											"begin": 1944,
											"end": 1978,
											"name": "SWAP1"
										},
										{
											"begin": 1944,
											"end": 1978,
											"name": "SSTORE"
										},
										{
											"begin": 1944,
											"end": 1978,
											"name": "POP"
										},
										{
											"begin": 2021,
											"end": 2036,
											"name": "PUSH",
											"value": "34"
										},
										{
											"begin": 2021,
											"end": 2036,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2021,
											"end": 2036,
											"name": "SWAP1"
										},
										{
											"begin": 2021,
											"end": 2036,
											"name": "SLOAD"
										},
										{
											"begin": 2021,
											"end": 2036,
											"name": "SWAP1"
										},
										{
											"begin": 2021,
											"end": 2036,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 2021,
											"end": 2036,
											"name": "EXP"
										},
										{
											"begin": 2021,
											"end": 2036,
											"name": "SWAP1"
										},
										{
											"begin": 2021,
											"end": 2036,
											"name": "DIV"
										},
										{
											"begin": 2021,
											"end": 2036,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2021,
											"end": 2036,
											"name": "AND"
										},
										{
											"begin": 2003,
											"end": 2043,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2003,
											"end": 2043,
											"name": "AND"
										},
										{
											"begin": 2003,
											"end": 2043,
											"name": "PUSH",
											"value": "7165485D"
										},
										{
											"begin": 2003,
											"end": 2045,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2003,
											"end": 2045,
											"name": "MLOAD"
										},
										{
											"begin": 2003,
											"end": 2045,
											"name": "DUP2"
										},
										{
											"begin": 2003,
											"end": 2045,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 2003,
											"end": 2045,
											"name": "AND"
										},
										{
											"begin": 2003,
											"end": 2045,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 2003,
											"end": 2045,
											"name": "SHL"
										},
										{
											"begin": 2003,
											"end": 2045,
											"name": "DUP2"
										},
										{
											"begin": 2003,
											"end": 2045,
											"name": "MSTORE"
										},
										{
											"begin": 2003,
											"end": 2045,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 2003,
											"end": 2045,
											"name": "ADD"
										},
										{
											"begin": 2003,
											"end": 2045,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2003,
											"end": 2045,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2003,
											"end": 2045,
											"name": "MLOAD"
										},
										{
											"begin": 2003,
											"end": 2045,
											"name": "DUP1"
										},
										{
											"begin": 2003,
											"end": 2045,
											"name": "DUP4"
										},
										{
											"begin": 2003,
											"end": 2045,
											"name": "SUB"
										},
										{
											"begin": 2003,
											"end": 2045,
											"name": "DUP2"
										},
										{
											"begin": 2003,
											"end": 2045,
											"name": "DUP7"
										},
										{
											"begin": 2003,
											"end": 2045,
											"name": "DUP1"
										},
										{
											"begin": 2003,
											"end": 2045,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 2003,
											"end": 2045,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "211"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "211"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 2003,
											"end": 2045,
											"name": "POP"
										},
										{
											"begin": 2003,
											"end": 2045,
											"name": "GAS"
										},
										{
											"begin": 2003,
											"end": 2045,
											"name": "STATICCALL"
										},
										{
											"begin": 2003,
											"end": 2045,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "212"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "212"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 2003,
											"end": 2045,
											"name": "POP"
										},
										{
											"begin": 2003,
											"end": 2045,
											"name": "POP"
										},
										{
											"begin": 2003,
											"end": 2045,
											"name": "POP"
										},
										{
											"begin": 2003,
											"end": 2045,
											"name": "POP"
										},
										{
											"begin": 2003,
											"end": 2045,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2003,
											"end": 2045,
											"name": "MLOAD"
										},
										{
											"begin": 2003,
											"end": 2045,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "213"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "213"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 2003,
											"end": 2045,
											"name": "DUP2"
										},
										{
											"begin": 2003,
											"end": 2045,
											"name": "ADD"
										},
										{
											"begin": 2003,
											"end": 2045,
											"name": "SWAP1"
										},
										{
											"begin": 2003,
											"end": 2045,
											"name": "DUP1"
										},
										{
											"begin": 2003,
											"end": 2045,
											"name": "DUP1"
										},
										{
											"begin": 2003,
											"end": 2045,
											"name": "MLOAD"
										},
										{
											"begin": 2003,
											"end": 2045,
											"name": "SWAP1"
										},
										{
											"begin": 2003,
											"end": 2045,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2003,
											"end": 2045,
											"name": "ADD"
										},
										{
											"begin": 2003,
											"end": 2045,
											"name": "SWAP1"
										},
										{
											"begin": 2003,
											"end": 2045,
											"name": "SWAP3"
										},
										{
											"begin": 2003,
											"end": 2045,
											"name": "SWAP2"
										},
										{
											"begin": 2003,
											"end": 2045,
											"name": "SWAP1"
										},
										{
											"begin": 2003,
											"end": 2045,
											"name": "POP"
										},
										{
											"begin": 2003,
											"end": 2045,
											"name": "POP"
										},
										{
											"begin": 2003,
											"end": 2045,
											"name": "POP"
										},
										{
											"begin": 1988,
											"end": 2000,
											"name": "PUSH",
											"value": "35"
										},
										{
											"begin": 1988,
											"end": 2000,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1988,
											"end": 2045,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1988,
											"end": 2045,
											"name": "EXP"
										},
										{
											"begin": 1988,
											"end": 2045,
											"name": "DUP2"
										},
										{
											"begin": 1988,
											"end": 2045,
											"name": "SLOAD"
										},
										{
											"begin": 1988,
											"end": 2045,
											"name": "DUP2"
										},
										{
											"begin": 1988,
											"end": 2045,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1988,
											"end": 2045,
											"name": "MUL"
										},
										{
											"begin": 1988,
											"end": 2045,
											"name": "NOT"
										},
										{
											"begin": 1988,
											"end": 2045,
											"name": "AND"
										},
										{
											"begin": 1988,
											"end": 2045,
											"name": "SWAP1"
										},
										{
											"begin": 1988,
											"end": 2045,
											"name": "DUP4"
										},
										{
											"begin": 1988,
											"end": 2045,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1988,
											"end": 2045,
											"name": "AND"
										},
										{
											"begin": 1988,
											"end": 2045,
											"name": "MUL"
										},
										{
											"begin": 1988,
											"end": 2045,
											"name": "OR"
										},
										{
											"begin": 1988,
											"end": 2045,
											"name": "SWAP1"
										},
										{
											"begin": 1988,
											"end": 2045,
											"name": "SSTORE"
										},
										{
											"begin": 1988,
											"end": 2045,
											"name": "POP"
										},
										{
											"begin": 2073,
											"end": 2087,
											"name": "DUP2"
										},
										{
											"begin": 2055,
											"end": 2070,
											"name": "PUSH",
											"value": "37"
										},
										{
											"begin": 2055,
											"end": 2070,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2055,
											"end": 2087,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 2055,
											"end": 2087,
											"name": "EXP"
										},
										{
											"begin": 2055,
											"end": 2087,
											"name": "DUP2"
										},
										{
											"begin": 2055,
											"end": 2087,
											"name": "SLOAD"
										},
										{
											"begin": 2055,
											"end": 2087,
											"name": "DUP2"
										},
										{
											"begin": 2055,
											"end": 2087,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2055,
											"end": 2087,
											"name": "MUL"
										},
										{
											"begin": 2055,
											"end": 2087,
											"name": "NOT"
										},
										{
											"begin": 2055,
											"end": 2087,
											"name": "AND"
										},
										{
											"begin": 2055,
											"end": 2087,
											"name": "SWAP1"
										},
										{
											"begin": 2055,
											"end": 2087,
											"name": "DUP4"
										},
										{
											"begin": 2055,
											"end": 2087,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2055,
											"end": 2087,
											"name": "AND"
										},
										{
											"begin": 2055,
											"end": 2087,
											"name": "MUL"
										},
										{
											"begin": 2055,
											"end": 2087,
											"name": "OR"
										},
										{
											"begin": 2055,
											"end": 2087,
											"name": "SWAP1"
										},
										{
											"begin": 2055,
											"end": 2087,
											"name": "SSTORE"
										},
										{
											"begin": 2055,
											"end": 2087,
											"name": "POP"
										},
										{
											"begin": 2133,
											"end": 2148,
											"name": "PUSH",
											"value": "34"
										},
										{
											"begin": 2133,
											"end": 2148,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2133,
											"end": 2148,
											"name": "SWAP1"
										},
										{
											"begin": 2133,
											"end": 2148,
											"name": "SLOAD"
										},
										{
											"begin": 2133,
											"end": 2148,
											"name": "SWAP1"
										},
										{
											"begin": 2133,
											"end": 2148,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 2133,
											"end": 2148,
											"name": "EXP"
										},
										{
											"begin": 2133,
											"end": 2148,
											"name": "SWAP1"
										},
										{
											"begin": 2133,
											"end": 2148,
											"name": "DIV"
										},
										{
											"begin": 2133,
											"end": 2148,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2133,
											"end": 2148,
											"name": "AND"
										},
										{
											"begin": 2115,
											"end": 2155,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2115,
											"end": 2155,
											"name": "AND"
										},
										{
											"begin": 2115,
											"end": 2155,
											"name": "PUSH",
											"value": "FC0C546A"
										},
										{
											"begin": 2115,
											"end": 2157,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2115,
											"end": 2157,
											"name": "MLOAD"
										},
										{
											"begin": 2115,
											"end": 2157,
											"name": "DUP2"
										},
										{
											"begin": 2115,
											"end": 2157,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 2115,
											"end": 2157,
											"name": "AND"
										},
										{
											"begin": 2115,
											"end": 2157,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 2115,
											"end": 2157,
											"name": "SHL"
										},
										{
											"begin": 2115,
											"end": 2157,
											"name": "DUP2"
										},
										{
											"begin": 2115,
											"end": 2157,
											"name": "MSTORE"
										},
										{
											"begin": 2115,
											"end": 2157,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 2115,
											"end": 2157,
											"name": "ADD"
										},
										{
											"begin": 2115,
											"end": 2157,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2115,
											"end": 2157,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2115,
											"end": 2157,
											"name": "MLOAD"
										},
										{
											"begin": 2115,
											"end": 2157,
											"name": "DUP1"
										},
										{
											"begin": 2115,
											"end": 2157,
											"name": "DUP4"
										},
										{
											"begin": 2115,
											"end": 2157,
											"name": "SUB"
										},
										{
											"begin": 2115,
											"end": 2157,
											"name": "DUP2"
										},
										{
											"begin": 2115,
											"end": 2157,
											"name": "DUP7"
										},
										{
											"begin": 2115,
											"end": 2157,
											"name": "DUP1"
										},
										{
											"begin": 2115,
											"end": 2157,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 2115,
											"end": 2157,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "214"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "214"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 2115,
											"end": 2157,
											"name": "POP"
										},
										{
											"begin": 2115,
											"end": 2157,
											"name": "GAS"
										},
										{
											"begin": 2115,
											"end": 2157,
											"name": "STATICCALL"
										},
										{
											"begin": 2115,
											"end": 2157,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "215"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "215"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 2115,
											"end": 2157,
											"name": "POP"
										},
										{
											"begin": 2115,
											"end": 2157,
											"name": "POP"
										},
										{
											"begin": 2115,
											"end": 2157,
											"name": "POP"
										},
										{
											"begin": 2115,
											"end": 2157,
											"name": "POP"
										},
										{
											"begin": 2115,
											"end": 2157,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2115,
											"end": 2157,
											"name": "MLOAD"
										},
										{
											"begin": 2115,
											"end": 2157,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "216"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "216"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 2115,
											"end": 2157,
											"name": "DUP2"
										},
										{
											"begin": 2115,
											"end": 2157,
											"name": "ADD"
										},
										{
											"begin": 2115,
											"end": 2157,
											"name": "SWAP1"
										},
										{
											"begin": 2115,
											"end": 2157,
											"name": "DUP1"
										},
										{
											"begin": 2115,
											"end": 2157,
											"name": "DUP1"
										},
										{
											"begin": 2115,
											"end": 2157,
											"name": "MLOAD"
										},
										{
											"begin": 2115,
											"end": 2157,
											"name": "SWAP1"
										},
										{
											"begin": 2115,
											"end": 2157,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2115,
											"end": 2157,
											"name": "ADD"
										},
										{
											"begin": 2115,
											"end": 2157,
											"name": "SWAP1"
										},
										{
											"begin": 2115,
											"end": 2157,
											"name": "SWAP3"
										},
										{
											"begin": 2115,
											"end": 2157,
											"name": "SWAP2"
										},
										{
											"begin": 2115,
											"end": 2157,
											"name": "SWAP1"
										},
										{
											"begin": 2115,
											"end": 2157,
											"name": "POP"
										},
										{
											"begin": 2115,
											"end": 2157,
											"name": "POP"
										},
										{
											"begin": 2115,
											"end": 2157,
											"name": "POP"
										},
										{
											"begin": 2097,
											"end": 2112,
											"name": "PUSH",
											"value": "36"
										},
										{
											"begin": 2097,
											"end": 2112,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2097,
											"end": 2157,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 2097,
											"end": 2157,
											"name": "EXP"
										},
										{
											"begin": 2097,
											"end": 2157,
											"name": "DUP2"
										},
										{
											"begin": 2097,
											"end": 2157,
											"name": "SLOAD"
										},
										{
											"begin": 2097,
											"end": 2157,
											"name": "DUP2"
										},
										{
											"begin": 2097,
											"end": 2157,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2097,
											"end": 2157,
											"name": "MUL"
										},
										{
											"begin": 2097,
											"end": 2157,
											"name": "NOT"
										},
										{
											"begin": 2097,
											"end": 2157,
											"name": "AND"
										},
										{
											"begin": 2097,
											"end": 2157,
											"name": "SWAP1"
										},
										{
											"begin": 2097,
											"end": 2157,
											"name": "DUP4"
										},
										{
											"begin": 2097,
											"end": 2157,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2097,
											"end": 2157,
											"name": "AND"
										},
										{
											"begin": 2097,
											"end": 2157,
											"name": "MUL"
										},
										{
											"begin": 2097,
											"end": 2157,
											"name": "OR"
										},
										{
											"begin": 2097,
											"end": 2157,
											"name": "SWAP1"
										},
										{
											"begin": 2097,
											"end": 2157,
											"name": "SSTORE"
										},
										{
											"begin": 2097,
											"end": 2157,
											"name": "POP"
										},
										{
											"begin": 2230,
											"end": 2245,
											"name": "PUSH",
											"value": "36"
										},
										{
											"begin": 2230,
											"end": 2245,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2230,
											"end": 2245,
											"name": "SWAP1"
										},
										{
											"begin": 2230,
											"end": 2245,
											"name": "SLOAD"
										},
										{
											"begin": 2230,
											"end": 2245,
											"name": "SWAP1"
										},
										{
											"begin": 2230,
											"end": 2245,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 2230,
											"end": 2245,
											"name": "EXP"
										},
										{
											"begin": 2230,
											"end": 2245,
											"name": "SWAP1"
										},
										{
											"begin": 2230,
											"end": 2245,
											"name": "DIV"
										},
										{
											"begin": 2230,
											"end": 2245,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2230,
											"end": 2245,
											"name": "AND"
										},
										{
											"begin": 2176,
											"end": 2246,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2176,
											"end": 2246,
											"name": "AND"
										},
										{
											"begin": 2191,
											"end": 2206,
											"name": "PUSH",
											"value": "37"
										},
										{
											"begin": 2191,
											"end": 2206,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2191,
											"end": 2206,
											"name": "SWAP1"
										},
										{
											"begin": 2191,
											"end": 2206,
											"name": "SLOAD"
										},
										{
											"begin": 2191,
											"end": 2206,
											"name": "SWAP1"
										},
										{
											"begin": 2191,
											"end": 2206,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 2191,
											"end": 2206,
											"name": "EXP"
										},
										{
											"begin": 2191,
											"end": 2206,
											"name": "SWAP1"
										},
										{
											"begin": 2191,
											"end": 2206,
											"name": "DIV"
										},
										{
											"begin": 2191,
											"end": 2206,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2191,
											"end": 2206,
											"name": "AND"
										},
										{
											"begin": 2176,
											"end": 2216,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2176,
											"end": 2216,
											"name": "AND"
										},
										{
											"begin": 2176,
											"end": 2216,
											"name": "PUSH",
											"value": "82C63066"
										},
										{
											"begin": 2176,
											"end": 2218,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2176,
											"end": 2218,
											"name": "MLOAD"
										},
										{
											"begin": 2176,
											"end": 2218,
											"name": "DUP2"
										},
										{
											"begin": 2176,
											"end": 2218,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 2176,
											"end": 2218,
											"name": "AND"
										},
										{
											"begin": 2176,
											"end": 2218,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 2176,
											"end": 2218,
											"name": "SHL"
										},
										{
											"begin": 2176,
											"end": 2218,
											"name": "DUP2"
										},
										{
											"begin": 2176,
											"end": 2218,
											"name": "MSTORE"
										},
										{
											"begin": 2176,
											"end": 2218,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 2176,
											"end": 2218,
											"name": "ADD"
										},
										{
											"begin": 2176,
											"end": 2218,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2176,
											"end": 2218,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2176,
											"end": 2218,
											"name": "MLOAD"
										},
										{
											"begin": 2176,
											"end": 2218,
											"name": "DUP1"
										},
										{
											"begin": 2176,
											"end": 2218,
											"name": "DUP4"
										},
										{
											"begin": 2176,
											"end": 2218,
											"name": "SUB"
										},
										{
											"begin": 2176,
											"end": 2218,
											"name": "DUP2"
										},
										{
											"begin": 2176,
											"end": 2218,
											"name": "DUP7"
										},
										{
											"begin": 2176,
											"end": 2218,
											"name": "DUP1"
										},
										{
											"begin": 2176,
											"end": 2218,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 2176,
											"end": 2218,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "217"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "217"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 2176,
											"end": 2218,
											"name": "POP"
										},
										{
											"begin": 2176,
											"end": 2218,
											"name": "GAS"
										},
										{
											"begin": 2176,
											"end": 2218,
											"name": "STATICCALL"
										},
										{
											"begin": 2176,
											"end": 2218,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "218"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "218"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 2176,
											"end": 2218,
											"name": "POP"
										},
										{
											"begin": 2176,
											"end": 2218,
											"name": "POP"
										},
										{
											"begin": 2176,
											"end": 2218,
											"name": "POP"
										},
										{
											"begin": 2176,
											"end": 2218,
											"name": "POP"
										},
										{
											"begin": 2176,
											"end": 2218,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2176,
											"end": 2218,
											"name": "MLOAD"
										},
										{
											"begin": 2176,
											"end": 2218,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "219"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "219"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 2176,
											"end": 2218,
											"name": "DUP2"
										},
										{
											"begin": 2176,
											"end": 2218,
											"name": "ADD"
										},
										{
											"begin": 2176,
											"end": 2218,
											"name": "SWAP1"
										},
										{
											"begin": 2176,
											"end": 2218,
											"name": "DUP1"
										},
										{
											"begin": 2176,
											"end": 2218,
											"name": "DUP1"
										},
										{
											"begin": 2176,
											"end": 2218,
											"name": "MLOAD"
										},
										{
											"begin": 2176,
											"end": 2218,
											"name": "SWAP1"
										},
										{
											"begin": 2176,
											"end": 2218,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2176,
											"end": 2218,
											"name": "ADD"
										},
										{
											"begin": 2176,
											"end": 2218,
											"name": "SWAP1"
										},
										{
											"begin": 2176,
											"end": 2218,
											"name": "SWAP3"
										},
										{
											"begin": 2176,
											"end": 2218,
											"name": "SWAP2"
										},
										{
											"begin": 2176,
											"end": 2218,
											"name": "SWAP1"
										},
										{
											"begin": 2176,
											"end": 2218,
											"name": "POP"
										},
										{
											"begin": 2176,
											"end": 2218,
											"name": "POP"
										},
										{
											"begin": 2176,
											"end": 2218,
											"name": "POP"
										},
										{
											"begin": 2176,
											"end": 2246,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2176,
											"end": 2246,
											"name": "AND"
										},
										{
											"begin": 2176,
											"end": 2246,
											"name": "EQ"
										},
										{
											"begin": 2168,
											"end": 2281,
											"name": "PUSH [tag]",
											"value": "220"
										},
										{
											"begin": 2168,
											"end": 2281,
											"name": "JUMPI"
										},
										{
											"begin": 2168,
											"end": 2281,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2168,
											"end": 2281,
											"name": "MLOAD"
										},
										{
											"begin": 2168,
											"end": 2281,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2168,
											"end": 2281,
											"name": "DUP2"
										},
										{
											"begin": 2168,
											"end": 2281,
											"name": "MSTORE"
										},
										{
											"begin": 2168,
											"end": 2281,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 2168,
											"end": 2281,
											"name": "ADD"
										},
										{
											"begin": 2168,
											"end": 2281,
											"name": "DUP1"
										},
										{
											"begin": 2168,
											"end": 2281,
											"name": "DUP1"
										},
										{
											"begin": 2168,
											"end": 2281,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2168,
											"end": 2281,
											"name": "ADD"
										},
										{
											"begin": 2168,
											"end": 2281,
											"name": "DUP3"
										},
										{
											"begin": 2168,
											"end": 2281,
											"name": "DUP2"
										},
										{
											"begin": 2168,
											"end": 2281,
											"name": "SUB"
										},
										{
											"begin": 2168,
											"end": 2281,
											"name": "DUP3"
										},
										{
											"begin": 2168,
											"end": 2281,
											"name": "MSTORE"
										},
										{
											"begin": 2168,
											"end": 2281,
											"name": "PUSH",
											"value": "1E"
										},
										{
											"begin": 2168,
											"end": 2281,
											"name": "DUP2"
										},
										{
											"begin": 2168,
											"end": 2281,
											"name": "MSTORE"
										},
										{
											"begin": 2168,
											"end": 2281,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2168,
											"end": 2281,
											"name": "ADD"
										},
										{
											"begin": 2168,
											"end": 2281,
											"name": "DUP1"
										},
										{
											"begin": 2168,
											"end": 2281,
											"name": "PUSH",
											"value": "43757276654669204C5020746F6B656E7320646F206E6F74206D617463680000"
										},
										{
											"begin": 2168,
											"end": 2281,
											"name": "DUP2"
										},
										{
											"begin": 2168,
											"end": 2281,
											"name": "MSTORE"
										},
										{
											"begin": 2168,
											"end": 2281,
											"name": "POP"
										},
										{
											"begin": 2168,
											"end": 2281,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2168,
											"end": 2281,
											"name": "ADD"
										},
										{
											"begin": 2168,
											"end": 2281,
											"name": "SWAP2"
										},
										{
											"begin": 2168,
											"end": 2281,
											"name": "POP"
										},
										{
											"begin": 2168,
											"end": 2281,
											"name": "POP"
										},
										{
											"begin": 2168,
											"end": 2281,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2168,
											"end": 2281,
											"name": "MLOAD"
										},
										{
											"begin": 2168,
											"end": 2281,
											"name": "DUP1"
										},
										{
											"begin": 2168,
											"end": 2281,
											"name": "SWAP2"
										},
										{
											"begin": 2168,
											"end": 2281,
											"name": "SUB"
										},
										{
											"begin": 2168,
											"end": 2281,
											"name": "SWAP1"
										},
										{
											"begin": 2168,
											"end": 2281,
											"name": "REVERT"
										},
										{
											"begin": 2168,
											"end": 2281,
											"name": "tag",
											"value": "220"
										},
										{
											"begin": 2168,
											"end": 2281,
											"name": "JUMPDEST"
										},
										{
											"begin": 2320,
											"end": 2335,
											"name": "DUP1"
										},
										{
											"begin": 2300,
											"end": 2317,
											"name": "PUSH",
											"value": "38"
										},
										{
											"begin": 2300,
											"end": 2317,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2300,
											"end": 2335,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 2300,
											"end": 2335,
											"name": "EXP"
										},
										{
											"begin": 2300,
											"end": 2335,
											"name": "DUP2"
										},
										{
											"begin": 2300,
											"end": 2335,
											"name": "SLOAD"
										},
										{
											"begin": 2300,
											"end": 2335,
											"name": "DUP2"
										},
										{
											"begin": 2300,
											"end": 2335,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2300,
											"end": 2335,
											"name": "MUL"
										},
										{
											"begin": 2300,
											"end": 2335,
											"name": "NOT"
										},
										{
											"begin": 2300,
											"end": 2335,
											"name": "AND"
										},
										{
											"begin": 2300,
											"end": 2335,
											"name": "SWAP1"
										},
										{
											"begin": 2300,
											"end": 2335,
											"name": "DUP4"
										},
										{
											"begin": 2300,
											"end": 2335,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2300,
											"end": 2335,
											"name": "AND"
										},
										{
											"begin": 2300,
											"end": 2335,
											"name": "MUL"
										},
										{
											"begin": 2300,
											"end": 2335,
											"name": "OR"
										},
										{
											"begin": 2300,
											"end": 2335,
											"name": "SWAP1"
										},
										{
											"begin": 2300,
											"end": 2335,
											"name": "SSTORE"
										},
										{
											"begin": 2300,
											"end": 2335,
											"name": "POP"
										},
										{
											"begin": 2379,
											"end": 2394,
											"name": "PUSH",
											"value": "37"
										},
										{
											"begin": 2379,
											"end": 2394,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2379,
											"end": 2394,
											"name": "SWAP1"
										},
										{
											"begin": 2379,
											"end": 2394,
											"name": "SLOAD"
										},
										{
											"begin": 2379,
											"end": 2394,
											"name": "SWAP1"
										},
										{
											"begin": 2379,
											"end": 2394,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 2379,
											"end": 2394,
											"name": "EXP"
										},
										{
											"begin": 2379,
											"end": 2394,
											"name": "SWAP1"
										},
										{
											"begin": 2379,
											"end": 2394,
											"name": "DIV"
										},
										{
											"begin": 2379,
											"end": 2394,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2379,
											"end": 2394,
											"name": "AND"
										},
										{
											"begin": 2364,
											"end": 2405,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2364,
											"end": 2405,
											"name": "AND"
										},
										{
											"begin": 2364,
											"end": 2405,
											"name": "PUSH",
											"value": "76D8B117"
										},
										{
											"begin": 2364,
											"end": 2407,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2364,
											"end": 2407,
											"name": "MLOAD"
										},
										{
											"begin": 2364,
											"end": 2407,
											"name": "DUP2"
										},
										{
											"begin": 2364,
											"end": 2407,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 2364,
											"end": 2407,
											"name": "AND"
										},
										{
											"begin": 2364,
											"end": 2407,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 2364,
											"end": 2407,
											"name": "SHL"
										},
										{
											"begin": 2364,
											"end": 2407,
											"name": "DUP2"
										},
										{
											"begin": 2364,
											"end": 2407,
											"name": "MSTORE"
										},
										{
											"begin": 2364,
											"end": 2407,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 2364,
											"end": 2407,
											"name": "ADD"
										},
										{
											"begin": 2364,
											"end": 2407,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2364,
											"end": 2407,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2364,
											"end": 2407,
											"name": "MLOAD"
										},
										{
											"begin": 2364,
											"end": 2407,
											"name": "DUP1"
										},
										{
											"begin": 2364,
											"end": 2407,
											"name": "DUP4"
										},
										{
											"begin": 2364,
											"end": 2407,
											"name": "SUB"
										},
										{
											"begin": 2364,
											"end": 2407,
											"name": "DUP2"
										},
										{
											"begin": 2364,
											"end": 2407,
											"name": "DUP7"
										},
										{
											"begin": 2364,
											"end": 2407,
											"name": "DUP1"
										},
										{
											"begin": 2364,
											"end": 2407,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 2364,
											"end": 2407,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "221"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "221"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 2364,
											"end": 2407,
											"name": "POP"
										},
										{
											"begin": 2364,
											"end": 2407,
											"name": "GAS"
										},
										{
											"begin": 2364,
											"end": 2407,
											"name": "STATICCALL"
										},
										{
											"begin": 2364,
											"end": 2407,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "222"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "222"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 2364,
											"end": 2407,
											"name": "POP"
										},
										{
											"begin": 2364,
											"end": 2407,
											"name": "POP"
										},
										{
											"begin": 2364,
											"end": 2407,
											"name": "POP"
										},
										{
											"begin": 2364,
											"end": 2407,
											"name": "POP"
										},
										{
											"begin": 2364,
											"end": 2407,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2364,
											"end": 2407,
											"name": "MLOAD"
										},
										{
											"begin": 2364,
											"end": 2407,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "223"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "223"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 2364,
											"end": 2407,
											"name": "DUP2"
										},
										{
											"begin": 2364,
											"end": 2407,
											"name": "ADD"
										},
										{
											"begin": 2364,
											"end": 2407,
											"name": "SWAP1"
										},
										{
											"begin": 2364,
											"end": 2407,
											"name": "DUP1"
										},
										{
											"begin": 2364,
											"end": 2407,
											"name": "DUP1"
										},
										{
											"begin": 2364,
											"end": 2407,
											"name": "MLOAD"
										},
										{
											"begin": 2364,
											"end": 2407,
											"name": "SWAP1"
										},
										{
											"begin": 2364,
											"end": 2407,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2364,
											"end": 2407,
											"name": "ADD"
										},
										{
											"begin": 2364,
											"end": 2407,
											"name": "SWAP1"
										},
										{
											"begin": 2364,
											"end": 2407,
											"name": "SWAP3"
										},
										{
											"begin": 2364,
											"end": 2407,
											"name": "SWAP2"
										},
										{
											"begin": 2364,
											"end": 2407,
											"name": "SWAP1"
										},
										{
											"begin": 2364,
											"end": 2407,
											"name": "POP"
										},
										{
											"begin": 2364,
											"end": 2407,
											"name": "POP"
										},
										{
											"begin": 2364,
											"end": 2407,
											"name": "POP"
										},
										{
											"begin": 2345,
											"end": 2361,
											"name": "PUSH",
											"value": "39"
										},
										{
											"begin": 2345,
											"end": 2361,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2345,
											"end": 2407,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 2345,
											"end": 2407,
											"name": "EXP"
										},
										{
											"begin": 2345,
											"end": 2407,
											"name": "DUP2"
										},
										{
											"begin": 2345,
											"end": 2407,
											"name": "SLOAD"
										},
										{
											"begin": 2345,
											"end": 2407,
											"name": "DUP2"
										},
										{
											"begin": 2345,
											"end": 2407,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2345,
											"end": 2407,
											"name": "MUL"
										},
										{
											"begin": 2345,
											"end": 2407,
											"name": "NOT"
										},
										{
											"begin": 2345,
											"end": 2407,
											"name": "AND"
										},
										{
											"begin": 2345,
											"end": 2407,
											"name": "SWAP1"
										},
										{
											"begin": 2345,
											"end": 2407,
											"name": "DUP4"
										},
										{
											"begin": 2345,
											"end": 2407,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2345,
											"end": 2407,
											"name": "AND"
										},
										{
											"begin": 2345,
											"end": 2407,
											"name": "MUL"
										},
										{
											"begin": 2345,
											"end": 2407,
											"name": "OR"
										},
										{
											"begin": 2345,
											"end": 2407,
											"name": "SWAP1"
										},
										{
											"begin": 2345,
											"end": 2407,
											"name": "SSTORE"
										},
										{
											"begin": 2345,
											"end": 2407,
											"name": "POP"
										},
										{
											"begin": 1737,
											"end": 2414,
											"name": "POP"
										},
										{
											"begin": 1737,
											"end": 2414,
											"name": "POP"
										},
										{
											"begin": 1737,
											"end": 2414,
											"name": "POP"
										},
										{
											"begin": 1737,
											"end": 2414,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1313,
											"end": 1345,
											"name": "tag",
											"value": "51"
										},
										{
											"begin": 1313,
											"end": 1345,
											"name": "JUMPDEST"
										},
										{
											"begin": 1313,
											"end": 1345,
											"name": "PUSH",
											"value": "38"
										},
										{
											"begin": 1313,
											"end": 1345,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1313,
											"end": 1345,
											"name": "SWAP1"
										},
										{
											"begin": 1313,
											"end": 1345,
											"name": "SLOAD"
										},
										{
											"begin": 1313,
											"end": 1345,
											"name": "SWAP1"
										},
										{
											"begin": 1313,
											"end": 1345,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1313,
											"end": 1345,
											"name": "EXP"
										},
										{
											"begin": 1313,
											"end": 1345,
											"name": "SWAP1"
										},
										{
											"begin": 1313,
											"end": 1345,
											"name": "DIV"
										},
										{
											"begin": 1313,
											"end": 1345,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1313,
											"end": 1345,
											"name": "AND"
										},
										{
											"begin": 1313,
											"end": 1345,
											"name": "DUP2"
										},
										{
											"begin": 1313,
											"end": 1345,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1351,
											"end": 1382,
											"name": "tag",
											"value": "53"
										},
										{
											"begin": 1351,
											"end": 1382,
											"name": "JUMPDEST"
										},
										{
											"begin": 1351,
											"end": 1382,
											"name": "PUSH",
											"value": "39"
										},
										{
											"begin": 1351,
											"end": 1382,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1351,
											"end": 1382,
											"name": "SWAP1"
										},
										{
											"begin": 1351,
											"end": 1382,
											"name": "SLOAD"
										},
										{
											"begin": 1351,
											"end": 1382,
											"name": "SWAP1"
										},
										{
											"begin": 1351,
											"end": 1382,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1351,
											"end": 1382,
											"name": "EXP"
										},
										{
											"begin": 1351,
											"end": 1382,
											"name": "SWAP1"
										},
										{
											"begin": 1351,
											"end": 1382,
											"name": "DIV"
										},
										{
											"begin": 1351,
											"end": 1382,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1351,
											"end": 1382,
											"name": "AND"
										},
										{
											"begin": 1351,
											"end": 1382,
											"name": "DUP2"
										},
										{
											"begin": 1351,
											"end": 1382,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 899,
											"end": 976,
											"name": "tag",
											"value": "55"
										},
										{
											"begin": 899,
											"end": 976,
											"name": "JUMPDEST"
										},
										{
											"begin": 937,
											"end": 944,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 963,
											"end": 969,
											"name": "PUSH",
											"value": "33"
										},
										{
											"begin": 963,
											"end": 969,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 963,
											"end": 969,
											"name": "SWAP1"
										},
										{
											"begin": 963,
											"end": 969,
											"name": "SLOAD"
										},
										{
											"begin": 963,
											"end": 969,
											"name": "SWAP1"
										},
										{
											"begin": 963,
											"end": 969,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 963,
											"end": 969,
											"name": "EXP"
										},
										{
											"begin": 963,
											"end": 969,
											"name": "SWAP1"
										},
										{
											"begin": 963,
											"end": 969,
											"name": "DIV"
										},
										{
											"begin": 963,
											"end": 969,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 963,
											"end": 969,
											"name": "AND"
										},
										{
											"begin": 956,
											"end": 969,
											"name": "SWAP1"
										},
										{
											"begin": 956,
											"end": 969,
											"name": "POP"
										},
										{
											"begin": 899,
											"end": 976,
											"name": "SWAP1"
										},
										{
											"begin": 899,
											"end": 976,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1250,
											"end": 1342,
											"name": "tag",
											"value": "57"
										},
										{
											"begin": 1250,
											"end": 1342,
											"name": "JUMPDEST"
										},
										{
											"begin": 1290,
											"end": 1294,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1329,
											"end": 1335,
											"name": "PUSH",
											"value": "33"
										},
										{
											"begin": 1329,
											"end": 1335,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1329,
											"end": 1335,
											"name": "SWAP1"
										},
										{
											"begin": 1329,
											"end": 1335,
											"name": "SLOAD"
										},
										{
											"begin": 1329,
											"end": 1335,
											"name": "SWAP1"
										},
										{
											"begin": 1329,
											"end": 1335,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1329,
											"end": 1335,
											"name": "EXP"
										},
										{
											"begin": 1329,
											"end": 1335,
											"name": "SWAP1"
										},
										{
											"begin": 1329,
											"end": 1335,
											"name": "DIV"
										},
										{
											"begin": 1329,
											"end": 1335,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1329,
											"end": 1335,
											"name": "AND"
										},
										{
											"begin": 1313,
											"end": 1335,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1313,
											"end": 1335,
											"name": "AND"
										},
										{
											"begin": 1313,
											"end": 1325,
											"name": "PUSH [tag]",
											"value": "226"
										},
										{
											"begin": 1313,
											"end": 1323,
											"name": "PUSH [tag]",
											"value": "85"
										},
										{
											"begin": 1313,
											"end": 1325,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1313,
											"end": 1325,
											"name": "tag",
											"value": "226"
										},
										{
											"begin": 1313,
											"end": 1325,
											"name": "JUMPDEST"
										},
										{
											"begin": 1313,
											"end": 1335,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1313,
											"end": 1335,
											"name": "AND"
										},
										{
											"begin": 1313,
											"end": 1335,
											"name": "EQ"
										},
										{
											"begin": 1306,
											"end": 1335,
											"name": "SWAP1"
										},
										{
											"begin": 1306,
											"end": 1335,
											"name": "POP"
										},
										{
											"begin": 1250,
											"end": 1342,
											"name": "SWAP1"
										},
										{
											"begin": 1250,
											"end": 1342,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 5965,
											"end": 6167,
											"name": "tag",
											"value": "59"
										},
										{
											"begin": 5965,
											"end": 6167,
											"name": "JUMPDEST"
										},
										{
											"begin": 6016,
											"end": 6023,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6035,
											"end": 6049,
											"name": "DUP1"
										},
										{
											"begin": 6052,
											"end": 6072,
											"name": "PUSH [tag]",
											"value": "228"
										},
										{
											"begin": 6052,
											"end": 6070,
											"name": "PUSH [tag]",
											"value": "42"
										},
										{
											"begin": 6052,
											"end": 6072,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 6052,
											"end": 6072,
											"name": "tag",
											"value": "228"
										},
										{
											"begin": 6052,
											"end": 6072,
											"name": "JUMPDEST"
										},
										{
											"begin": 6035,
											"end": 6072,
											"name": "SWAP1"
										},
										{
											"begin": 6035,
											"end": 6072,
											"name": "POP"
										},
										{
											"begin": 6082,
											"end": 6098,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6101,
											"end": 6123,
											"name": "PUSH [tag]",
											"value": "229"
										},
										{
											"begin": 6101,
											"end": 6121,
											"name": "PUSH [tag]",
											"value": "65"
										},
										{
											"begin": 6101,
											"end": 6123,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 6101,
											"end": 6123,
											"name": "tag",
											"value": "229"
										},
										{
											"begin": 6101,
											"end": 6123,
											"name": "JUMPDEST"
										},
										{
											"begin": 6082,
											"end": 6123,
											"name": "SWAP1"
										},
										{
											"begin": 6082,
											"end": 6123,
											"name": "POP"
										},
										{
											"begin": 6140,
											"end": 6160,
											"name": "PUSH [tag]",
											"value": "230"
										},
										{
											"begin": 6153,
											"end": 6159,
											"name": "DUP3"
										},
										{
											"begin": 6140,
											"end": 6148,
											"name": "DUP3"
										},
										{
											"begin": 6140,
											"end": 6152,
											"name": "PUSH [tag]",
											"value": "156"
										},
										{
											"begin": 6140,
											"end": 6152,
											"name": "SWAP1"
										},
										{
											"begin": 6140,
											"end": 6160,
											"name": "SWAP2"
										},
										{
											"begin": 6140,
											"end": 6160,
											"name": "SWAP1"
										},
										{
											"begin": 6140,
											"end": 6160,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 6140,
											"end": 6160,
											"name": "AND"
										},
										{
											"begin": 6140,
											"end": 6160,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 6140,
											"end": 6160,
											"name": "tag",
											"value": "230"
										},
										{
											"begin": 6140,
											"end": 6160,
											"name": "JUMPDEST"
										},
										{
											"begin": 6133,
											"end": 6160,
											"name": "SWAP3"
										},
										{
											"begin": 6133,
											"end": 6160,
											"name": "POP"
										},
										{
											"begin": 6133,
											"end": 6160,
											"name": "POP"
										},
										{
											"begin": 6133,
											"end": 6160,
											"name": "POP"
										},
										{
											"begin": 5965,
											"end": 6167,
											"name": "SWAP1"
										},
										{
											"begin": 5965,
											"end": 6167,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1241,
											"end": 1271,
											"name": "tag",
											"value": "61"
										},
										{
											"begin": 1241,
											"end": 1271,
											"name": "JUMPDEST"
										},
										{
											"begin": 1241,
											"end": 1271,
											"name": "PUSH",
											"value": "36"
										},
										{
											"begin": 1241,
											"end": 1271,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1241,
											"end": 1271,
											"name": "SWAP1"
										},
										{
											"begin": 1241,
											"end": 1271,
											"name": "SLOAD"
										},
										{
											"begin": 1241,
											"end": 1271,
											"name": "SWAP1"
										},
										{
											"begin": 1241,
											"end": 1271,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1241,
											"end": 1271,
											"name": "EXP"
										},
										{
											"begin": 1241,
											"end": 1271,
											"name": "SWAP1"
										},
										{
											"begin": 1241,
											"end": 1271,
											"name": "DIV"
										},
										{
											"begin": 1241,
											"end": 1271,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1241,
											"end": 1271,
											"name": "AND"
										},
										{
											"begin": 1241,
											"end": 1271,
											"name": "DUP2"
										},
										{
											"begin": 1241,
											"end": 1271,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1172,
											"end": 1202,
											"name": "tag",
											"value": "63"
										},
										{
											"begin": 1172,
											"end": 1202,
											"name": "JUMPDEST"
										},
										{
											"begin": 1172,
											"end": 1202,
											"name": "PUSH",
											"value": "34"
										},
										{
											"begin": 1172,
											"end": 1202,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1172,
											"end": 1202,
											"name": "SWAP1"
										},
										{
											"begin": 1172,
											"end": 1202,
											"name": "SLOAD"
										},
										{
											"begin": 1172,
											"end": 1202,
											"name": "SWAP1"
										},
										{
											"begin": 1172,
											"end": 1202,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1172,
											"end": 1202,
											"name": "EXP"
										},
										{
											"begin": 1172,
											"end": 1202,
											"name": "SWAP1"
										},
										{
											"begin": 1172,
											"end": 1202,
											"name": "DIV"
										},
										{
											"begin": 1172,
											"end": 1202,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1172,
											"end": 1202,
											"name": "AND"
										},
										{
											"begin": 1172,
											"end": 1202,
											"name": "DUP2"
										},
										{
											"begin": 1172,
											"end": 1202,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 5732,
											"end": 5865,
											"name": "tag",
											"value": "65"
										},
										{
											"begin": 5732,
											"end": 5865,
											"name": "JUMPDEST"
										},
										{
											"begin": 5784,
											"end": 5791,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5817,
											"end": 5832,
											"name": "PUSH",
											"value": "36"
										},
										{
											"begin": 5817,
											"end": 5832,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5817,
											"end": 5832,
											"name": "SWAP1"
										},
										{
											"begin": 5817,
											"end": 5832,
											"name": "SLOAD"
										},
										{
											"begin": 5817,
											"end": 5832,
											"name": "SWAP1"
										},
										{
											"begin": 5817,
											"end": 5832,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 5817,
											"end": 5832,
											"name": "EXP"
										},
										{
											"begin": 5817,
											"end": 5832,
											"name": "SWAP1"
										},
										{
											"begin": 5817,
											"end": 5832,
											"name": "DIV"
										},
										{
											"begin": 5817,
											"end": 5832,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5817,
											"end": 5832,
											"name": "AND"
										},
										{
											"begin": 5810,
											"end": 5843,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5810,
											"end": 5843,
											"name": "AND"
										},
										{
											"begin": 5810,
											"end": 5843,
											"name": "PUSH",
											"value": "70A08231"
										},
										{
											"begin": 5852,
											"end": 5856,
											"name": "ADDRESS"
										},
										{
											"begin": 5810,
											"end": 5858,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5810,
											"end": 5858,
											"name": "MLOAD"
										},
										{
											"begin": 5810,
											"end": 5858,
											"name": "DUP3"
										},
										{
											"begin": 5810,
											"end": 5858,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 5810,
											"end": 5858,
											"name": "AND"
										},
										{
											"begin": 5810,
											"end": 5858,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 5810,
											"end": 5858,
											"name": "SHL"
										},
										{
											"begin": 5810,
											"end": 5858,
											"name": "DUP2"
										},
										{
											"begin": 5810,
											"end": 5858,
											"name": "MSTORE"
										},
										{
											"begin": 5810,
											"end": 5858,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 5810,
											"end": 5858,
											"name": "ADD"
										},
										{
											"begin": 5810,
											"end": 5858,
											"name": "DUP1"
										},
										{
											"begin": 5810,
											"end": 5858,
											"name": "DUP3"
										},
										{
											"begin": 5810,
											"end": 5858,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5810,
											"end": 5858,
											"name": "AND"
										},
										{
											"begin": 5810,
											"end": 5858,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5810,
											"end": 5858,
											"name": "AND"
										},
										{
											"begin": 5810,
											"end": 5858,
											"name": "DUP2"
										},
										{
											"begin": 5810,
											"end": 5858,
											"name": "MSTORE"
										},
										{
											"begin": 5810,
											"end": 5858,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5810,
											"end": 5858,
											"name": "ADD"
										},
										{
											"begin": 5810,
											"end": 5858,
											"name": "SWAP2"
										},
										{
											"begin": 5810,
											"end": 5858,
											"name": "POP"
										},
										{
											"begin": 5810,
											"end": 5858,
											"name": "POP"
										},
										{
											"begin": 5810,
											"end": 5858,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5810,
											"end": 5858,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5810,
											"end": 5858,
											"name": "MLOAD"
										},
										{
											"begin": 5810,
											"end": 5858,
											"name": "DUP1"
										},
										{
											"begin": 5810,
											"end": 5858,
											"name": "DUP4"
										},
										{
											"begin": 5810,
											"end": 5858,
											"name": "SUB"
										},
										{
											"begin": 5810,
											"end": 5858,
											"name": "DUP2"
										},
										{
											"begin": 5810,
											"end": 5858,
											"name": "DUP7"
										},
										{
											"begin": 5810,
											"end": 5858,
											"name": "DUP1"
										},
										{
											"begin": 5810,
											"end": 5858,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 5810,
											"end": 5858,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "232"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "232"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 5810,
											"end": 5858,
											"name": "POP"
										},
										{
											"begin": 5810,
											"end": 5858,
											"name": "GAS"
										},
										{
											"begin": 5810,
											"end": 5858,
											"name": "STATICCALL"
										},
										{
											"begin": 5810,
											"end": 5858,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "233"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "233"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 5810,
											"end": 5858,
											"name": "POP"
										},
										{
											"begin": 5810,
											"end": 5858,
											"name": "POP"
										},
										{
											"begin": 5810,
											"end": 5858,
											"name": "POP"
										},
										{
											"begin": 5810,
											"end": 5858,
											"name": "POP"
										},
										{
											"begin": 5810,
											"end": 5858,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5810,
											"end": 5858,
											"name": "MLOAD"
										},
										{
											"begin": 5810,
											"end": 5858,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "234"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "234"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 5810,
											"end": 5858,
											"name": "DUP2"
										},
										{
											"begin": 5810,
											"end": 5858,
											"name": "ADD"
										},
										{
											"begin": 5810,
											"end": 5858,
											"name": "SWAP1"
										},
										{
											"begin": 5810,
											"end": 5858,
											"name": "DUP1"
										},
										{
											"begin": 5810,
											"end": 5858,
											"name": "DUP1"
										},
										{
											"begin": 5810,
											"end": 5858,
											"name": "MLOAD"
										},
										{
											"begin": 5810,
											"end": 5858,
											"name": "SWAP1"
										},
										{
											"begin": 5810,
											"end": 5858,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5810,
											"end": 5858,
											"name": "ADD"
										},
										{
											"begin": 5810,
											"end": 5858,
											"name": "SWAP1"
										},
										{
											"begin": 5810,
											"end": 5858,
											"name": "SWAP3"
										},
										{
											"begin": 5810,
											"end": 5858,
											"name": "SWAP2"
										},
										{
											"begin": 5810,
											"end": 5858,
											"name": "SWAP1"
										},
										{
											"begin": 5810,
											"end": 5858,
											"name": "POP"
										},
										{
											"begin": 5810,
											"end": 5858,
											"name": "POP"
										},
										{
											"begin": 5810,
											"end": 5858,
											"name": "POP"
										},
										{
											"begin": 5803,
											"end": 5858,
											"name": "SWAP1"
										},
										{
											"begin": 5803,
											"end": 5858,
											"name": "POP"
										},
										{
											"begin": 5732,
											"end": 5865,
											"name": "SWAP1"
										},
										{
											"begin": 5732,
											"end": 5865,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1277,
											"end": 1307,
											"name": "tag",
											"value": "67"
										},
										{
											"begin": 1277,
											"end": 1307,
											"name": "JUMPDEST"
										},
										{
											"begin": 1277,
											"end": 1307,
											"name": "PUSH",
											"value": "37"
										},
										{
											"begin": 1277,
											"end": 1307,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1277,
											"end": 1307,
											"name": "SWAP1"
										},
										{
											"begin": 1277,
											"end": 1307,
											"name": "SLOAD"
										},
										{
											"begin": 1277,
											"end": 1307,
											"name": "SWAP1"
										},
										{
											"begin": 1277,
											"end": 1307,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1277,
											"end": 1307,
											"name": "EXP"
										},
										{
											"begin": 1277,
											"end": 1307,
											"name": "SWAP1"
										},
										{
											"begin": 1277,
											"end": 1307,
											"name": "DIV"
										},
										{
											"begin": 1277,
											"end": 1307,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1277,
											"end": 1307,
											"name": "AND"
										},
										{
											"begin": 1277,
											"end": 1307,
											"name": "DUP2"
										},
										{
											"begin": 1277,
											"end": 1307,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1970,
											"end": 2077,
											"name": "tag",
											"value": "70"
										},
										{
											"begin": 1970,
											"end": 2077,
											"name": "JUMPDEST"
										},
										{
											"begin": 1103,
											"end": 1112,
											"name": "PUSH [tag]",
											"value": "236"
										},
										{
											"begin": 1103,
											"end": 1110,
											"name": "PUSH [tag]",
											"value": "57"
										},
										{
											"begin": 1103,
											"end": 1112,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1103,
											"end": 1112,
											"name": "tag",
											"value": "236"
										},
										{
											"begin": 1103,
											"end": 1112,
											"name": "JUMPDEST"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "PUSH [tag]",
											"value": "237"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "JUMPI"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "MLOAD"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "DUP2"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "MSTORE"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "ADD"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "DUP1"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "DUP1"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "ADD"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "DUP3"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "DUP2"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "SUB"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "DUP3"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "MSTORE"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "DUP2"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "MSTORE"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "ADD"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "DUP1"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "PUSH",
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "DUP2"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "MSTORE"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "POP"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "ADD"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "SWAP2"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "POP"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "POP"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "MLOAD"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "DUP1"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "SWAP2"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "SUB"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "SWAP1"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "REVERT"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "tag",
											"value": "237"
										},
										{
											"begin": 1095,
											"end": 1149,
											"name": "JUMPDEST"
										},
										{
											"begin": 2042,
											"end": 2070,
											"name": "PUSH [tag]",
											"value": "239"
										},
										{
											"begin": 2061,
											"end": 2069,
											"name": "DUP2"
										},
										{
											"begin": 2042,
											"end": 2060,
											"name": "PUSH [tag]",
											"value": "240"
										},
										{
											"begin": 2042,
											"end": 2070,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2042,
											"end": 2070,
											"name": "tag",
											"value": "239"
										},
										{
											"begin": 2042,
											"end": 2070,
											"name": "JUMPDEST"
										},
										{
											"begin": 1970,
											"end": 2077,
											"name": "POP"
										},
										{
											"begin": 1970,
											"end": 2077,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1415,
											"end": 1489,
											"name": "tag",
											"value": "73"
										},
										{
											"begin": 1415,
											"end": 1489,
											"name": "JUMPDEST"
										},
										{
											"begin": 1253,
											"end": 1265,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1253,
											"end": 1265,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1253,
											"end": 1265,
											"name": "SWAP1"
										},
										{
											"begin": 1253,
											"end": 1265,
											"name": "SLOAD"
										},
										{
											"begin": 1253,
											"end": 1265,
											"name": "SWAP1"
										},
										{
											"begin": 1253,
											"end": 1265,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1253,
											"end": 1265,
											"name": "EXP"
										},
										{
											"begin": 1253,
											"end": 1265,
											"name": "SWAP1"
										},
										{
											"begin": 1253,
											"end": 1265,
											"name": "DIV"
										},
										{
											"begin": 1253,
											"end": 1265,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 1253,
											"end": 1265,
											"name": "AND"
										},
										{
											"begin": 1253,
											"end": 1284,
											"name": "DUP1"
										},
										{
											"begin": 1253,
											"end": 1284,
											"name": "PUSH [tag]",
											"value": "242"
										},
										{
											"begin": 1253,
											"end": 1284,
											"name": "JUMPI"
										},
										{
											"begin": 1253,
											"end": 1284,
											"name": "POP"
										},
										{
											"begin": 1269,
											"end": 1284,
											"name": "PUSH [tag]",
											"value": "243"
										},
										{
											"begin": 1269,
											"end": 1282,
											"name": "PUSH [tag]",
											"value": "244"
										},
										{
											"begin": 1269,
											"end": 1284,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1269,
											"end": 1284,
											"name": "tag",
											"value": "243"
										},
										{
											"begin": 1269,
											"end": 1284,
											"name": "JUMPDEST"
										},
										{
											"begin": 1253,
											"end": 1284,
											"name": "tag",
											"value": "242"
										},
										{
											"begin": 1253,
											"end": 1284,
											"name": "JUMPDEST"
										},
										{
											"begin": 1253,
											"end": 1300,
											"name": "DUP1"
										},
										{
											"begin": 1253,
											"end": 1300,
											"name": "PUSH [tag]",
											"value": "245"
										},
										{
											"begin": 1253,
											"end": 1300,
											"name": "JUMPI"
										},
										{
											"begin": 1253,
											"end": 1300,
											"name": "POP"
										},
										{
											"begin": 1289,
											"end": 1300,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1289,
											"end": 1300,
											"name": "DUP1"
										},
										{
											"begin": 1289,
											"end": 1300,
											"name": "SWAP1"
										},
										{
											"begin": 1289,
											"end": 1300,
											"name": "SLOAD"
										},
										{
											"begin": 1289,
											"end": 1300,
											"name": "SWAP1"
										},
										{
											"begin": 1289,
											"end": 1300,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1289,
											"end": 1300,
											"name": "EXP"
										},
										{
											"begin": 1289,
											"end": 1300,
											"name": "SWAP1"
										},
										{
											"begin": 1289,
											"end": 1300,
											"name": "DIV"
										},
										{
											"begin": 1289,
											"end": 1300,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 1289,
											"end": 1300,
											"name": "AND"
										},
										{
											"begin": 1288,
											"end": 1300,
											"name": "ISZERO"
										},
										{
											"begin": 1253,
											"end": 1300,
											"name": "tag",
											"value": "245"
										},
										{
											"begin": 1253,
											"end": 1300,
											"name": "JUMPDEST"
										},
										{
											"begin": 1245,
											"end": 1351,
											"name": "PUSH [tag]",
											"value": "246"
										},
										{
											"begin": 1245,
											"end": 1351,
											"name": "JUMPI"
										},
										{
											"begin": 1245,
											"end": 1351,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1245,
											"end": 1351,
											"name": "MLOAD"
										},
										{
											"begin": 1245,
											"end": 1351,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1245,
											"end": 1351,
											"name": "DUP2"
										},
										{
											"begin": 1245,
											"end": 1351,
											"name": "MSTORE"
										},
										{
											"begin": 1245,
											"end": 1351,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1245,
											"end": 1351,
											"name": "ADD"
										},
										{
											"begin": 1245,
											"end": 1351,
											"name": "DUP1"
										},
										{
											"begin": 1245,
											"end": 1351,
											"name": "DUP1"
										},
										{
											"begin": 1245,
											"end": 1351,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1245,
											"end": 1351,
											"name": "ADD"
										},
										{
											"begin": 1245,
											"end": 1351,
											"name": "DUP3"
										},
										{
											"begin": 1245,
											"end": 1351,
											"name": "DUP2"
										},
										{
											"begin": 1245,
											"end": 1351,
											"name": "SUB"
										},
										{
											"begin": 1245,
											"end": 1351,
											"name": "DUP3"
										},
										{
											"begin": 1245,
											"end": 1351,
											"name": "MSTORE"
										},
										{
											"begin": 1245,
											"end": 1351,
											"name": "PUSH",
											"value": "2E"
										},
										{
											"begin": 1245,
											"end": 1351,
											"name": "DUP2"
										},
										{
											"begin": 1245,
											"end": 1351,
											"name": "MSTORE"
										},
										{
											"begin": 1245,
											"end": 1351,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1245,
											"end": 1351,
											"name": "ADD"
										},
										{
											"begin": 1245,
											"end": 1351,
											"name": "DUP1"
										},
										{
											"begin": 1245,
											"end": 1351,
											"name": "PUSH data",
											"value": "9FBBA6C4DCAC9134893B633B9564F36435B3F927C1D5FA152C5C14B20CECB1A4"
										},
										{
											"begin": 1245,
											"end": 1351,
											"name": "PUSH",
											"value": "2E"
										},
										{
											"begin": 1245,
											"end": 1351,
											"name": "SWAP2"
										},
										{
											"begin": 1245,
											"end": 1351,
											"name": "CODECOPY"
										},
										{
											"begin": 1245,
											"end": 1351,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1245,
											"end": 1351,
											"name": "ADD"
										},
										{
											"begin": 1245,
											"end": 1351,
											"name": "SWAP2"
										},
										{
											"begin": 1245,
											"end": 1351,
											"name": "POP"
										},
										{
											"begin": 1245,
											"end": 1351,
											"name": "POP"
										},
										{
											"begin": 1245,
											"end": 1351,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1245,
											"end": 1351,
											"name": "MLOAD"
										},
										{
											"begin": 1245,
											"end": 1351,
											"name": "DUP1"
										},
										{
											"begin": 1245,
											"end": 1351,
											"name": "SWAP2"
										},
										{
											"begin": 1245,
											"end": 1351,
											"name": "SUB"
										},
										{
											"begin": 1245,
											"end": 1351,
											"name": "SWAP1"
										},
										{
											"begin": 1245,
											"end": 1351,
											"name": "REVERT"
										},
										{
											"begin": 1245,
											"end": 1351,
											"name": "tag",
											"value": "246"
										},
										{
											"begin": 1245,
											"end": 1351,
											"name": "JUMPDEST"
										},
										{
											"begin": 1358,
											"end": 1377,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1381,
											"end": 1393,
											"name": "DUP1"
										},
										{
											"begin": 1381,
											"end": 1393,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1381,
											"end": 1393,
											"name": "SWAP1"
										},
										{
											"begin": 1381,
											"end": 1393,
											"name": "SLOAD"
										},
										{
											"begin": 1381,
											"end": 1393,
											"name": "SWAP1"
										},
										{
											"begin": 1381,
											"end": 1393,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1381,
											"end": 1393,
											"name": "EXP"
										},
										{
											"begin": 1381,
											"end": 1393,
											"name": "SWAP1"
										},
										{
											"begin": 1381,
											"end": 1393,
											"name": "DIV"
										},
										{
											"begin": 1381,
											"end": 1393,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 1381,
											"end": 1393,
											"name": "AND"
										},
										{
											"begin": 1380,
											"end": 1393,
											"name": "ISZERO"
										},
										{
											"begin": 1358,
											"end": 1393,
											"name": "SWAP1"
										},
										{
											"begin": 1358,
											"end": 1393,
											"name": "POP"
										},
										{
											"begin": 1403,
											"end": 1417,
											"name": "DUP1"
										},
										{
											"begin": 1399,
											"end": 1479,
											"name": "ISZERO"
										},
										{
											"begin": 1399,
											"end": 1479,
											"name": "PUSH [tag]",
											"value": "247"
										},
										{
											"begin": 1399,
											"end": 1479,
											"name": "JUMPI"
										},
										{
											"begin": 1442,
											"end": 1446,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1427,
											"end": 1439,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1427,
											"end": 1439,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1427,
											"end": 1446,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1427,
											"end": 1446,
											"name": "EXP"
										},
										{
											"begin": 1427,
											"end": 1446,
											"name": "DUP2"
										},
										{
											"begin": 1427,
											"end": 1446,
											"name": "SLOAD"
										},
										{
											"begin": 1427,
											"end": 1446,
											"name": "DUP2"
										},
										{
											"begin": 1427,
											"end": 1446,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 1427,
											"end": 1446,
											"name": "MUL"
										},
										{
											"begin": 1427,
											"end": 1446,
											"name": "NOT"
										},
										{
											"begin": 1427,
											"end": 1446,
											"name": "AND"
										},
										{
											"begin": 1427,
											"end": 1446,
											"name": "SWAP1"
										},
										{
											"begin": 1427,
											"end": 1446,
											"name": "DUP4"
										},
										{
											"begin": 1427,
											"end": 1446,
											"name": "ISZERO"
										},
										{
											"begin": 1427,
											"end": 1446,
											"name": "ISZERO"
										},
										{
											"begin": 1427,
											"end": 1446,
											"name": "MUL"
										},
										{
											"begin": 1427,
											"end": 1446,
											"name": "OR"
										},
										{
											"begin": 1427,
											"end": 1446,
											"name": "SWAP1"
										},
										{
											"begin": 1427,
											"end": 1446,
											"name": "SSTORE"
										},
										{
											"begin": 1427,
											"end": 1446,
											"name": "POP"
										},
										{
											"begin": 1468,
											"end": 1472,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1454,
											"end": 1465,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1454,
											"end": 1465,
											"name": "DUP1"
										},
										{
											"begin": 1454,
											"end": 1472,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1454,
											"end": 1472,
											"name": "EXP"
										},
										{
											"begin": 1454,
											"end": 1472,
											"name": "DUP2"
										},
										{
											"begin": 1454,
											"end": 1472,
											"name": "SLOAD"
										},
										{
											"begin": 1454,
											"end": 1472,
											"name": "DUP2"
										},
										{
											"begin": 1454,
											"end": 1472,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 1454,
											"end": 1472,
											"name": "MUL"
										},
										{
											"begin": 1454,
											"end": 1472,
											"name": "NOT"
										},
										{
											"begin": 1454,
											"end": 1472,
											"name": "AND"
										},
										{
											"begin": 1454,
											"end": 1472,
											"name": "SWAP1"
										},
										{
											"begin": 1454,
											"end": 1472,
											"name": "DUP4"
										},
										{
											"begin": 1454,
											"end": 1472,
											"name": "ISZERO"
										},
										{
											"begin": 1454,
											"end": 1472,
											"name": "ISZERO"
										},
										{
											"begin": 1454,
											"end": 1472,
											"name": "MUL"
										},
										{
											"begin": 1454,
											"end": 1472,
											"name": "OR"
										},
										{
											"begin": 1454,
											"end": 1472,
											"name": "SWAP1"
										},
										{
											"begin": 1454,
											"end": 1472,
											"name": "SSTORE"
										},
										{
											"begin": 1454,
											"end": 1472,
											"name": "POP"
										},
										{
											"begin": 1399,
											"end": 1479,
											"name": "tag",
											"value": "247"
										},
										{
											"begin": 1399,
											"end": 1479,
											"name": "JUMPDEST"
										},
										{
											"begin": 1480,
											"end": 1482,
											"name": "DUP2"
										},
										{
											"begin": 1476,
											"end": 1477,
											"name": "PUSH",
											"value": "3A"
										},
										{
											"begin": 1476,
											"end": 1482,
											"name": "DUP2"
										},
										{
											"begin": 1476,
											"end": 1482,
											"name": "SWAP1"
										},
										{
											"begin": 1476,
											"end": 1482,
											"name": "SSTORE"
										},
										{
											"begin": 1476,
											"end": 1482,
											"name": "POP"
										},
										{
											"begin": 1497,
											"end": 1511,
											"name": "DUP1"
										},
										{
											"begin": 1493,
											"end": 1548,
											"name": "ISZERO"
										},
										{
											"begin": 1493,
											"end": 1548,
											"name": "PUSH [tag]",
											"value": "249"
										},
										{
											"begin": 1493,
											"end": 1548,
											"name": "JUMPI"
										},
										{
											"begin": 1536,
											"end": 1541,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1521,
											"end": 1533,
											"name": "DUP1"
										},
										{
											"begin": 1521,
											"end": 1533,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1521,
											"end": 1541,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1521,
											"end": 1541,
											"name": "EXP"
										},
										{
											"begin": 1521,
											"end": 1541,
											"name": "DUP2"
										},
										{
											"begin": 1521,
											"end": 1541,
											"name": "SLOAD"
										},
										{
											"begin": 1521,
											"end": 1541,
											"name": "DUP2"
										},
										{
											"begin": 1521,
											"end": 1541,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 1521,
											"end": 1541,
											"name": "MUL"
										},
										{
											"begin": 1521,
											"end": 1541,
											"name": "NOT"
										},
										{
											"begin": 1521,
											"end": 1541,
											"name": "AND"
										},
										{
											"begin": 1521,
											"end": 1541,
											"name": "SWAP1"
										},
										{
											"begin": 1521,
											"end": 1541,
											"name": "DUP4"
										},
										{
											"begin": 1521,
											"end": 1541,
											"name": "ISZERO"
										},
										{
											"begin": 1521,
											"end": 1541,
											"name": "ISZERO"
										},
										{
											"begin": 1521,
											"end": 1541,
											"name": "MUL"
										},
										{
											"begin": 1521,
											"end": 1541,
											"name": "OR"
										},
										{
											"begin": 1521,
											"end": 1541,
											"name": "SWAP1"
										},
										{
											"begin": 1521,
											"end": 1541,
											"name": "SSTORE"
										},
										{
											"begin": 1521,
											"end": 1541,
											"name": "POP"
										},
										{
											"begin": 1493,
											"end": 1548,
											"name": "tag",
											"value": "249"
										},
										{
											"begin": 1493,
											"end": 1548,
											"name": "JUMPDEST"
										},
										{
											"begin": 1415,
											"end": 1489,
											"name": "POP"
										},
										{
											"begin": 1415,
											"end": 1489,
											"name": "POP"
										},
										{
											"begin": 1415,
											"end": 1489,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 788,
											"end": 884,
											"name": "tag",
											"value": "85"
										},
										{
											"begin": 788,
											"end": 884,
											"name": "JUMPDEST"
										},
										{
											"begin": 833,
											"end": 848,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 867,
											"end": 877,
											"name": "CALLER"
										},
										{
											"begin": 860,
											"end": 877,
											"name": "SWAP1"
										},
										{
											"begin": 860,
											"end": 877,
											"name": "POP"
										},
										{
											"begin": 788,
											"end": 884,
											"name": "SWAP1"
										},
										{
											"begin": 788,
											"end": 884,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 842,
											"end": 1044,
											"name": "tag",
											"value": "88"
										},
										{
											"begin": 842,
											"end": 1044,
											"name": "JUMPDEST"
										},
										{
											"begin": 942,
											"end": 1037,
											"name": "PUSH [tag]",
											"value": "252"
										},
										{
											"begin": 961,
											"end": 966,
											"name": "DUP5"
										},
										{
											"begin": 991,
											"end": 996,
											"name": "DUP6"
										},
										{
											"begin": 991,
											"end": 1009,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 991,
											"end": 1009,
											"name": "AND"
										},
										{
											"begin": 991,
											"end": 1009,
											"name": "PUSH",
											"value": "23B872DD"
										},
										{
											"begin": 991,
											"end": 1018,
											"name": "SWAP1"
										},
										{
											"begin": 991,
											"end": 1018,
											"name": "POP"
										},
										{
											"begin": 991,
											"end": 1018,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 991,
											"end": 1018,
											"name": "SHL"
										},
										{
											"begin": 1020,
											"end": 1024,
											"name": "DUP6"
										},
										{
											"begin": 1026,
											"end": 1028,
											"name": "DUP6"
										},
										{
											"begin": 1030,
											"end": 1035,
											"name": "DUP6"
										},
										{
											"begin": 968,
											"end": 1036,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 968,
											"end": 1036,
											"name": "MLOAD"
										},
										{
											"begin": 968,
											"end": 1036,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 968,
											"end": 1036,
											"name": "ADD"
										},
										{
											"begin": 968,
											"end": 1036,
											"name": "DUP1"
										},
										{
											"begin": 968,
											"end": 1036,
											"name": "DUP5"
										},
										{
											"begin": 968,
											"end": 1036,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 968,
											"end": 1036,
											"name": "AND"
										},
										{
											"begin": 968,
											"end": 1036,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 968,
											"end": 1036,
											"name": "AND"
										},
										{
											"begin": 968,
											"end": 1036,
											"name": "DUP2"
										},
										{
											"begin": 968,
											"end": 1036,
											"name": "MSTORE"
										},
										{
											"begin": 968,
											"end": 1036,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 968,
											"end": 1036,
											"name": "ADD"
										},
										{
											"begin": 968,
											"end": 1036,
											"name": "DUP4"
										},
										{
											"begin": 968,
											"end": 1036,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 968,
											"end": 1036,
											"name": "AND"
										},
										{
											"begin": 968,
											"end": 1036,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 968,
											"end": 1036,
											"name": "AND"
										},
										{
											"begin": 968,
											"end": 1036,
											"name": "DUP2"
										},
										{
											"begin": 968,
											"end": 1036,
											"name": "MSTORE"
										},
										{
											"begin": 968,
											"end": 1036,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 968,
											"end": 1036,
											"name": "ADD"
										},
										{
											"begin": 968,
											"end": 1036,
											"name": "DUP3"
										},
										{
											"begin": 968,
											"end": 1036,
											"name": "DUP2"
										},
										{
											"begin": 968,
											"end": 1036,
											"name": "MSTORE"
										},
										{
											"begin": 968,
											"end": 1036,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 968,
											"end": 1036,
											"name": "ADD"
										},
										{
											"begin": 968,
											"end": 1036,
											"name": "SWAP4"
										},
										{
											"begin": 968,
											"end": 1036,
											"name": "POP"
										},
										{
											"begin": 968,
											"end": 1036,
											"name": "POP"
										},
										{
											"begin": 968,
											"end": 1036,
											"name": "POP"
										},
										{
											"begin": 968,
											"end": 1036,
											"name": "POP"
										},
										{
											"begin": 968,
											"end": 1036,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 968,
											"end": 1036,
											"name": "MLOAD"
										},
										{
											"begin": 49,
											"end": 53,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 39,
											"end": 46,
											"name": "DUP2"
										},
										{
											"begin": 30,
											"end": 37,
											"name": "DUP4"
										},
										{
											"begin": 26,
											"end": 47,
											"name": "SUB"
										},
										{
											"begin": 22,
											"end": 54,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 20,
											"name": "DUP2"
										},
										{
											"begin": 6,
											"end": 55,
											"name": "MSTORE"
										},
										{
											"begin": 968,
											"end": 1036,
											"name": "SWAP1"
										},
										{
											"begin": 968,
											"end": 1036,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 968,
											"end": 1036,
											"name": "MSTORE"
										},
										{
											"begin": 968,
											"end": 1036,
											"name": "SWAP1"
										},
										{
											"begin": 968,
											"end": 1036,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 968,
											"end": 1036,
											"name": "NOT"
										},
										{
											"begin": 968,
											"end": 1036,
											"name": "AND"
										},
										{
											"begin": 38,
											"end": 42,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 29,
											"end": 36,
											"name": "DUP3"
										},
										{
											"begin": 25,
											"end": 43,
											"name": "ADD"
										},
										{
											"begin": 67,
											"end": 77,
											"name": "DUP1"
										},
										{
											"begin": 61,
											"end": 78,
											"name": "MLOAD"
										},
										{
											"begin": 96,
											"end": 154,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 199,
											"end": 207,
											"name": "DUP4"
										},
										{
											"begin": 192,
											"end": 196,
											"name": "DUP2"
										},
										{
											"begin": 186,
											"end": 190,
											"name": "DUP4"
										},
										{
											"begin": 182,
											"end": 197,
											"name": "AND"
										},
										{
											"begin": 179,
											"end": 208,
											"name": "OR"
										},
										{
											"begin": 167,
											"end": 177,
											"name": "DUP4"
										},
										{
											"begin": 160,
											"end": 209,
											"name": "MSTORE"
										},
										{
											"begin": 0,
											"end": 215,
											"name": "POP"
										},
										{
											"begin": 0,
											"end": 215,
											"name": "POP"
										},
										{
											"begin": 0,
											"end": 215,
											"name": "POP"
										},
										{
											"begin": 968,
											"end": 1036,
											"name": "POP"
										},
										{
											"begin": 942,
											"end": 960,
											"name": "PUSH [tag]",
											"value": "253"
										},
										{
											"begin": 942,
											"end": 1037,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 942,
											"end": 1037,
											"name": "tag",
											"value": "252"
										},
										{
											"begin": 942,
											"end": 1037,
											"name": "JUMPDEST"
										},
										{
											"begin": 842,
											"end": 1044,
											"name": "POP"
										},
										{
											"begin": 842,
											"end": 1044,
											"name": "POP"
										},
										{
											"begin": 842,
											"end": 1044,
											"name": "POP"
										},
										{
											"begin": 842,
											"end": 1044,
											"name": "POP"
										},
										{
											"begin": 842,
											"end": 1044,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1050,
											"end": 1662,
											"name": "tag",
											"value": "92"
										},
										{
											"begin": 1050,
											"end": 1662,
											"name": "JUMPDEST"
										},
										{
											"begin": 1424,
											"end": 1425,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1415,
											"end": 1420,
											"name": "DUP2"
										},
										{
											"begin": 1415,
											"end": 1425,
											"name": "EQ"
										},
										{
											"begin": 1414,
											"end": 1476,
											"name": "DUP1"
										},
										{
											"begin": 1414,
											"end": 1476,
											"name": "PUSH [tag]",
											"value": "255"
										},
										{
											"begin": 1414,
											"end": 1476,
											"name": "JUMPI"
										},
										{
											"begin": 1414,
											"end": 1476,
											"name": "POP"
										},
										{
											"begin": 1474,
											"end": 1475,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1431,
											"end": 1436,
											"name": "DUP4"
										},
										{
											"begin": 1431,
											"end": 1446,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1431,
											"end": 1446,
											"name": "AND"
										},
										{
											"begin": 1431,
											"end": 1446,
											"name": "PUSH",
											"value": "DD62ED3E"
										},
										{
											"begin": 1455,
											"end": 1459,
											"name": "ADDRESS"
										},
										{
											"begin": 1462,
											"end": 1469,
											"name": "DUP6"
										},
										{
											"begin": 1431,
											"end": 1470,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1431,
											"end": 1470,
											"name": "MLOAD"
										},
										{
											"begin": 1431,
											"end": 1470,
											"name": "DUP4"
										},
										{
											"begin": 1431,
											"end": 1470,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 1431,
											"end": 1470,
											"name": "AND"
										},
										{
											"begin": 1431,
											"end": 1470,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 1431,
											"end": 1470,
											"name": "SHL"
										},
										{
											"begin": 1431,
											"end": 1470,
											"name": "DUP2"
										},
										{
											"begin": 1431,
											"end": 1470,
											"name": "MSTORE"
										},
										{
											"begin": 1431,
											"end": 1470,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1431,
											"end": 1470,
											"name": "ADD"
										},
										{
											"begin": 1431,
											"end": 1470,
											"name": "DUP1"
										},
										{
											"begin": 1431,
											"end": 1470,
											"name": "DUP4"
										},
										{
											"begin": 1431,
											"end": 1470,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1431,
											"end": 1470,
											"name": "AND"
										},
										{
											"begin": 1431,
											"end": 1470,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1431,
											"end": 1470,
											"name": "AND"
										},
										{
											"begin": 1431,
											"end": 1470,
											"name": "DUP2"
										},
										{
											"begin": 1431,
											"end": 1470,
											"name": "MSTORE"
										},
										{
											"begin": 1431,
											"end": 1470,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1431,
											"end": 1470,
											"name": "ADD"
										},
										{
											"begin": 1431,
											"end": 1470,
											"name": "DUP3"
										},
										{
											"begin": 1431,
											"end": 1470,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1431,
											"end": 1470,
											"name": "AND"
										},
										{
											"begin": 1431,
											"end": 1470,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1431,
											"end": 1470,
											"name": "AND"
										},
										{
											"begin": 1431,
											"end": 1470,
											"name": "DUP2"
										},
										{
											"begin": 1431,
											"end": 1470,
											"name": "MSTORE"
										},
										{
											"begin": 1431,
											"end": 1470,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1431,
											"end": 1470,
											"name": "ADD"
										},
										{
											"begin": 1431,
											"end": 1470,
											"name": "SWAP3"
										},
										{
											"begin": 1431,
											"end": 1470,
											"name": "POP"
										},
										{
											"begin": 1431,
											"end": 1470,
											"name": "POP"
										},
										{
											"begin": 1431,
											"end": 1470,
											"name": "POP"
										},
										{
											"begin": 1431,
											"end": 1470,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1431,
											"end": 1470,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1431,
											"end": 1470,
											"name": "MLOAD"
										},
										{
											"begin": 1431,
											"end": 1470,
											"name": "DUP1"
										},
										{
											"begin": 1431,
											"end": 1470,
											"name": "DUP4"
										},
										{
											"begin": 1431,
											"end": 1470,
											"name": "SUB"
										},
										{
											"begin": 1431,
											"end": 1470,
											"name": "DUP2"
										},
										{
											"begin": 1431,
											"end": 1470,
											"name": "DUP7"
										},
										{
											"begin": 1431,
											"end": 1470,
											"name": "DUP1"
										},
										{
											"begin": 1431,
											"end": 1470,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 1431,
											"end": 1470,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "256"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "256"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 1431,
											"end": 1470,
											"name": "POP"
										},
										{
											"begin": 1431,
											"end": 1470,
											"name": "GAS"
										},
										{
											"begin": 1431,
											"end": 1470,
											"name": "STATICCALL"
										},
										{
											"begin": 1431,
											"end": 1470,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "257"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "257"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 1431,
											"end": 1470,
											"name": "POP"
										},
										{
											"begin": 1431,
											"end": 1470,
											"name": "POP"
										},
										{
											"begin": 1431,
											"end": 1470,
											"name": "POP"
										},
										{
											"begin": 1431,
											"end": 1470,
											"name": "POP"
										},
										{
											"begin": 1431,
											"end": 1470,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1431,
											"end": 1470,
											"name": "MLOAD"
										},
										{
											"begin": 1431,
											"end": 1470,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "258"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "258"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 1431,
											"end": 1470,
											"name": "DUP2"
										},
										{
											"begin": 1431,
											"end": 1470,
											"name": "ADD"
										},
										{
											"begin": 1431,
											"end": 1470,
											"name": "SWAP1"
										},
										{
											"begin": 1431,
											"end": 1470,
											"name": "DUP1"
										},
										{
											"begin": 1431,
											"end": 1470,
											"name": "DUP1"
										},
										{
											"begin": 1431,
											"end": 1470,
											"name": "MLOAD"
										},
										{
											"begin": 1431,
											"end": 1470,
											"name": "SWAP1"
										},
										{
											"begin": 1431,
											"end": 1470,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1431,
											"end": 1470,
											"name": "ADD"
										},
										{
											"begin": 1431,
											"end": 1470,
											"name": "SWAP1"
										},
										{
											"begin": 1431,
											"end": 1470,
											"name": "SWAP3"
										},
										{
											"begin": 1431,
											"end": 1470,
											"name": "SWAP2"
										},
										{
											"begin": 1431,
											"end": 1470,
											"name": "SWAP1"
										},
										{
											"begin": 1431,
											"end": 1470,
											"name": "POP"
										},
										{
											"begin": 1431,
											"end": 1470,
											"name": "POP"
										},
										{
											"begin": 1431,
											"end": 1470,
											"name": "POP"
										},
										{
											"begin": 1431,
											"end": 1475,
											"name": "EQ"
										},
										{
											"begin": 1414,
											"end": 1476,
											"name": "tag",
											"value": "255"
										},
										{
											"begin": 1414,
											"end": 1476,
											"name": "JUMPDEST"
										},
										{
											"begin": 1406,
											"end": 1556,
											"name": "PUSH [tag]",
											"value": "259"
										},
										{
											"begin": 1406,
											"end": 1556,
											"name": "JUMPI"
										},
										{
											"begin": 1406,
											"end": 1556,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1406,
											"end": 1556,
											"name": "MLOAD"
										},
										{
											"begin": 1406,
											"end": 1556,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1406,
											"end": 1556,
											"name": "DUP2"
										},
										{
											"begin": 1406,
											"end": 1556,
											"name": "MSTORE"
										},
										{
											"begin": 1406,
											"end": 1556,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1406,
											"end": 1556,
											"name": "ADD"
										},
										{
											"begin": 1406,
											"end": 1556,
											"name": "DUP1"
										},
										{
											"begin": 1406,
											"end": 1556,
											"name": "DUP1"
										},
										{
											"begin": 1406,
											"end": 1556,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1406,
											"end": 1556,
											"name": "ADD"
										},
										{
											"begin": 1406,
											"end": 1556,
											"name": "DUP3"
										},
										{
											"begin": 1406,
											"end": 1556,
											"name": "DUP2"
										},
										{
											"begin": 1406,
											"end": 1556,
											"name": "SUB"
										},
										{
											"begin": 1406,
											"end": 1556,
											"name": "DUP3"
										},
										{
											"begin": 1406,
											"end": 1556,
											"name": "MSTORE"
										},
										{
											"begin": 1406,
											"end": 1556,
											"name": "PUSH",
											"value": "36"
										},
										{
											"begin": 1406,
											"end": 1556,
											"name": "DUP2"
										},
										{
											"begin": 1406,
											"end": 1556,
											"name": "MSTORE"
										},
										{
											"begin": 1406,
											"end": 1556,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1406,
											"end": 1556,
											"name": "ADD"
										},
										{
											"begin": 1406,
											"end": 1556,
											"name": "DUP1"
										},
										{
											"begin": 1406,
											"end": 1556,
											"name": "PUSH data",
											"value": "EF945DDB1BFDC0DA870FEB4560D868B047642B4AC7F2FB7F8B7C51CB4A411E25"
										},
										{
											"begin": 1406,
											"end": 1556,
											"name": "PUSH",
											"value": "36"
										},
										{
											"begin": 1406,
											"end": 1556,
											"name": "SWAP2"
										},
										{
											"begin": 1406,
											"end": 1556,
											"name": "CODECOPY"
										},
										{
											"begin": 1406,
											"end": 1556,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1406,
											"end": 1556,
											"name": "ADD"
										},
										{
											"begin": 1406,
											"end": 1556,
											"name": "SWAP2"
										},
										{
											"begin": 1406,
											"end": 1556,
											"name": "POP"
										},
										{
											"begin": 1406,
											"end": 1556,
											"name": "POP"
										},
										{
											"begin": 1406,
											"end": 1556,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1406,
											"end": 1556,
											"name": "MLOAD"
										},
										{
											"begin": 1406,
											"end": 1556,
											"name": "DUP1"
										},
										{
											"begin": 1406,
											"end": 1556,
											"name": "SWAP2"
										},
										{
											"begin": 1406,
											"end": 1556,
											"name": "SUB"
										},
										{
											"begin": 1406,
											"end": 1556,
											"name": "SWAP1"
										},
										{
											"begin": 1406,
											"end": 1556,
											"name": "REVERT"
										},
										{
											"begin": 1406,
											"end": 1556,
											"name": "tag",
											"value": "259"
										},
										{
											"begin": 1406,
											"end": 1556,
											"name": "JUMPDEST"
										},
										{
											"begin": 1566,
											"end": 1655,
											"name": "PUSH [tag]",
											"value": "260"
										},
										{
											"begin": 1585,
											"end": 1590,
											"name": "DUP4"
										},
										{
											"begin": 1615,
											"end": 1620,
											"name": "DUP5"
										},
										{
											"begin": 1615,
											"end": 1628,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1615,
											"end": 1628,
											"name": "AND"
										},
										{
											"begin": 1615,
											"end": 1628,
											"name": "PUSH",
											"value": "95EA7B3"
										},
										{
											"begin": 1615,
											"end": 1637,
											"name": "SWAP1"
										},
										{
											"begin": 1615,
											"end": 1637,
											"name": "POP"
										},
										{
											"begin": 1615,
											"end": 1637,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 1615,
											"end": 1637,
											"name": "SHL"
										},
										{
											"begin": 1639,
											"end": 1646,
											"name": "DUP5"
										},
										{
											"begin": 1648,
											"end": 1653,
											"name": "DUP5"
										},
										{
											"begin": 1592,
											"end": 1654,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1592,
											"end": 1654,
											"name": "MLOAD"
										},
										{
											"begin": 1592,
											"end": 1654,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 1592,
											"end": 1654,
											"name": "ADD"
										},
										{
											"begin": 1592,
											"end": 1654,
											"name": "DUP1"
										},
										{
											"begin": 1592,
											"end": 1654,
											"name": "DUP4"
										},
										{
											"begin": 1592,
											"end": 1654,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1592,
											"end": 1654,
											"name": "AND"
										},
										{
											"begin": 1592,
											"end": 1654,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1592,
											"end": 1654,
											"name": "AND"
										},
										{
											"begin": 1592,
											"end": 1654,
											"name": "DUP2"
										},
										{
											"begin": 1592,
											"end": 1654,
											"name": "MSTORE"
										},
										{
											"begin": 1592,
											"end": 1654,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1592,
											"end": 1654,
											"name": "ADD"
										},
										{
											"begin": 1592,
											"end": 1654,
											"name": "DUP3"
										},
										{
											"begin": 1592,
											"end": 1654,
											"name": "DUP2"
										},
										{
											"begin": 1592,
											"end": 1654,
											"name": "MSTORE"
										},
										{
											"begin": 1592,
											"end": 1654,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1592,
											"end": 1654,
											"name": "ADD"
										},
										{
											"begin": 1592,
											"end": 1654,
											"name": "SWAP3"
										},
										{
											"begin": 1592,
											"end": 1654,
											"name": "POP"
										},
										{
											"begin": 1592,
											"end": 1654,
											"name": "POP"
										},
										{
											"begin": 1592,
											"end": 1654,
											"name": "POP"
										},
										{
											"begin": 1592,
											"end": 1654,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1592,
											"end": 1654,
											"name": "MLOAD"
										},
										{
											"begin": 49,
											"end": 53,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 39,
											"end": 46,
											"name": "DUP2"
										},
										{
											"begin": 30,
											"end": 37,
											"name": "DUP4"
										},
										{
											"begin": 26,
											"end": 47,
											"name": "SUB"
										},
										{
											"begin": 22,
											"end": 54,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 20,
											"name": "DUP2"
										},
										{
											"begin": 6,
											"end": 55,
											"name": "MSTORE"
										},
										{
											"begin": 1592,
											"end": 1654,
											"name": "SWAP1"
										},
										{
											"begin": 1592,
											"end": 1654,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1592,
											"end": 1654,
											"name": "MSTORE"
										},
										{
											"begin": 1592,
											"end": 1654,
											"name": "SWAP1"
										},
										{
											"begin": 1592,
											"end": 1654,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1592,
											"end": 1654,
											"name": "NOT"
										},
										{
											"begin": 1592,
											"end": 1654,
											"name": "AND"
										},
										{
											"begin": 38,
											"end": 42,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 29,
											"end": 36,
											"name": "DUP3"
										},
										{
											"begin": 25,
											"end": 43,
											"name": "ADD"
										},
										{
											"begin": 67,
											"end": 77,
											"name": "DUP1"
										},
										{
											"begin": 61,
											"end": 78,
											"name": "MLOAD"
										},
										{
											"begin": 96,
											"end": 154,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 199,
											"end": 207,
											"name": "DUP4"
										},
										{
											"begin": 192,
											"end": 196,
											"name": "DUP2"
										},
										{
											"begin": 186,
											"end": 190,
											"name": "DUP4"
										},
										{
											"begin": 182,
											"end": 197,
											"name": "AND"
										},
										{
											"begin": 179,
											"end": 208,
											"name": "OR"
										},
										{
											"begin": 167,
											"end": 177,
											"name": "DUP4"
										},
										{
											"begin": 160,
											"end": 209,
											"name": "MSTORE"
										},
										{
											"begin": 0,
											"end": 215,
											"name": "POP"
										},
										{
											"begin": 0,
											"end": 215,
											"name": "POP"
										},
										{
											"begin": 0,
											"end": 215,
											"name": "POP"
										},
										{
											"begin": 1592,
											"end": 1654,
											"name": "POP"
										},
										{
											"begin": 1566,
											"end": 1584,
											"name": "PUSH [tag]",
											"value": "253"
										},
										{
											"begin": 1566,
											"end": 1655,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1566,
											"end": 1655,
											"name": "tag",
											"value": "260"
										},
										{
											"begin": 1566,
											"end": 1655,
											"name": "JUMPDEST"
										},
										{
											"begin": 1050,
											"end": 1662,
											"name": "POP"
										},
										{
											"begin": 1050,
											"end": 1662,
											"name": "POP"
										},
										{
											"begin": 1050,
											"end": 1662,
											"name": "POP"
										},
										{
											"begin": 1050,
											"end": 1662,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 6221,
											"end": 6328,
											"name": "tag",
											"value": "105"
										},
										{
											"begin": 6221,
											"end": 6328,
											"name": "JUMPDEST"
										},
										{
											"begin": 6281,
											"end": 6298,
											"name": "PUSH",
											"value": "38"
										},
										{
											"begin": 6281,
											"end": 6298,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6281,
											"end": 6298,
											"name": "SWAP1"
										},
										{
											"begin": 6281,
											"end": 6298,
											"name": "SLOAD"
										},
										{
											"begin": 6281,
											"end": 6298,
											"name": "SWAP1"
										},
										{
											"begin": 6281,
											"end": 6298,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 6281,
											"end": 6298,
											"name": "EXP"
										},
										{
											"begin": 6281,
											"end": 6298,
											"name": "SWAP1"
										},
										{
											"begin": 6281,
											"end": 6298,
											"name": "DIV"
										},
										{
											"begin": 6281,
											"end": 6298,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6281,
											"end": 6298,
											"name": "AND"
										},
										{
											"begin": 6265,
											"end": 6304,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6265,
											"end": 6304,
											"name": "AND"
										},
										{
											"begin": 6265,
											"end": 6304,
											"name": "PUSH",
											"value": "6A627842"
										},
										{
											"begin": 6305,
											"end": 6320,
											"name": "PUSH",
											"value": "37"
										},
										{
											"begin": 6305,
											"end": 6320,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6305,
											"end": 6320,
											"name": "SWAP1"
										},
										{
											"begin": 6305,
											"end": 6320,
											"name": "SLOAD"
										},
										{
											"begin": 6305,
											"end": 6320,
											"name": "SWAP1"
										},
										{
											"begin": 6305,
											"end": 6320,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 6305,
											"end": 6320,
											"name": "EXP"
										},
										{
											"begin": 6305,
											"end": 6320,
											"name": "SWAP1"
										},
										{
											"begin": 6305,
											"end": 6320,
											"name": "DIV"
										},
										{
											"begin": 6305,
											"end": 6320,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6305,
											"end": 6320,
											"name": "AND"
										},
										{
											"begin": 6265,
											"end": 6321,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6265,
											"end": 6321,
											"name": "MLOAD"
										},
										{
											"begin": 6265,
											"end": 6321,
											"name": "DUP3"
										},
										{
											"begin": 6265,
											"end": 6321,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 6265,
											"end": 6321,
											"name": "AND"
										},
										{
											"begin": 6265,
											"end": 6321,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 6265,
											"end": 6321,
											"name": "SHL"
										},
										{
											"begin": 6265,
											"end": 6321,
											"name": "DUP2"
										},
										{
											"begin": 6265,
											"end": 6321,
											"name": "MSTORE"
										},
										{
											"begin": 6265,
											"end": 6321,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 6265,
											"end": 6321,
											"name": "ADD"
										},
										{
											"begin": 6265,
											"end": 6321,
											"name": "DUP1"
										},
										{
											"begin": 6265,
											"end": 6321,
											"name": "DUP3"
										},
										{
											"begin": 6265,
											"end": 6321,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6265,
											"end": 6321,
											"name": "AND"
										},
										{
											"begin": 6265,
											"end": 6321,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6265,
											"end": 6321,
											"name": "AND"
										},
										{
											"begin": 6265,
											"end": 6321,
											"name": "DUP2"
										},
										{
											"begin": 6265,
											"end": 6321,
											"name": "MSTORE"
										},
										{
											"begin": 6265,
											"end": 6321,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6265,
											"end": 6321,
											"name": "ADD"
										},
										{
											"begin": 6265,
											"end": 6321,
											"name": "SWAP2"
										},
										{
											"begin": 6265,
											"end": 6321,
											"name": "POP"
										},
										{
											"begin": 6265,
											"end": 6321,
											"name": "POP"
										},
										{
											"begin": 6265,
											"end": 6321,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6265,
											"end": 6321,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6265,
											"end": 6321,
											"name": "MLOAD"
										},
										{
											"begin": 6265,
											"end": 6321,
											"name": "DUP1"
										},
										{
											"begin": 6265,
											"end": 6321,
											"name": "DUP4"
										},
										{
											"begin": 6265,
											"end": 6321,
											"name": "SUB"
										},
										{
											"begin": 6265,
											"end": 6321,
											"name": "DUP2"
										},
										{
											"begin": 6265,
											"end": 6321,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6265,
											"end": 6321,
											"name": "DUP8"
										},
										{
											"begin": 6265,
											"end": 6321,
											"name": "DUP1"
										},
										{
											"begin": 6265,
											"end": 6321,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 6265,
											"end": 6321,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "262"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "262"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 6265,
											"end": 6321,
											"name": "POP"
										},
										{
											"begin": 6265,
											"end": 6321,
											"name": "GAS"
										},
										{
											"begin": 6265,
											"end": 6321,
											"name": "CALL"
										},
										{
											"begin": 6265,
											"end": 6321,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "263"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "263"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 6265,
											"end": 6321,
											"name": "POP"
										},
										{
											"begin": 6265,
											"end": 6321,
											"name": "POP"
										},
										{
											"begin": 6265,
											"end": 6321,
											"name": "POP"
										},
										{
											"begin": 6265,
											"end": 6321,
											"name": "POP"
										},
										{
											"begin": 6221,
											"end": 6328,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 662,
											"end": 836,
											"name": "tag",
											"value": "111"
										},
										{
											"begin": 662,
											"end": 836,
											"name": "JUMPDEST"
										},
										{
											"begin": 744,
											"end": 829,
											"name": "PUSH [tag]",
											"value": "265"
										},
										{
											"begin": 763,
											"end": 768,
											"name": "DUP4"
										},
										{
											"begin": 793,
											"end": 798,
											"name": "DUP5"
										},
										{
											"begin": 793,
											"end": 807,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 793,
											"end": 807,
											"name": "AND"
										},
										{
											"begin": 793,
											"end": 807,
											"name": "PUSH",
											"value": "A9059CBB"
										},
										{
											"begin": 793,
											"end": 816,
											"name": "SWAP1"
										},
										{
											"begin": 793,
											"end": 816,
											"name": "POP"
										},
										{
											"begin": 793,
											"end": 816,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 793,
											"end": 816,
											"name": "SHL"
										},
										{
											"begin": 818,
											"end": 820,
											"name": "DUP5"
										},
										{
											"begin": 822,
											"end": 827,
											"name": "DUP5"
										},
										{
											"begin": 770,
											"end": 828,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 770,
											"end": 828,
											"name": "MLOAD"
										},
										{
											"begin": 770,
											"end": 828,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 770,
											"end": 828,
											"name": "ADD"
										},
										{
											"begin": 770,
											"end": 828,
											"name": "DUP1"
										},
										{
											"begin": 770,
											"end": 828,
											"name": "DUP4"
										},
										{
											"begin": 770,
											"end": 828,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 770,
											"end": 828,
											"name": "AND"
										},
										{
											"begin": 770,
											"end": 828,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 770,
											"end": 828,
											"name": "AND"
										},
										{
											"begin": 770,
											"end": 828,
											"name": "DUP2"
										},
										{
											"begin": 770,
											"end": 828,
											"name": "MSTORE"
										},
										{
											"begin": 770,
											"end": 828,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 770,
											"end": 828,
											"name": "ADD"
										},
										{
											"begin": 770,
											"end": 828,
											"name": "DUP3"
										},
										{
											"begin": 770,
											"end": 828,
											"name": "DUP2"
										},
										{
											"begin": 770,
											"end": 828,
											"name": "MSTORE"
										},
										{
											"begin": 770,
											"end": 828,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 770,
											"end": 828,
											"name": "ADD"
										},
										{
											"begin": 770,
											"end": 828,
											"name": "SWAP3"
										},
										{
											"begin": 770,
											"end": 828,
											"name": "POP"
										},
										{
											"begin": 770,
											"end": 828,
											"name": "POP"
										},
										{
											"begin": 770,
											"end": 828,
											"name": "POP"
										},
										{
											"begin": 770,
											"end": 828,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 770,
											"end": 828,
											"name": "MLOAD"
										},
										{
											"begin": 49,
											"end": 53,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 39,
											"end": 46,
											"name": "DUP2"
										},
										{
											"begin": 30,
											"end": 37,
											"name": "DUP4"
										},
										{
											"begin": 26,
											"end": 47,
											"name": "SUB"
										},
										{
											"begin": 22,
											"end": 54,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 20,
											"name": "DUP2"
										},
										{
											"begin": 6,
											"end": 55,
											"name": "MSTORE"
										},
										{
											"begin": 770,
											"end": 828,
											"name": "SWAP1"
										},
										{
											"begin": 770,
											"end": 828,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 770,
											"end": 828,
											"name": "MSTORE"
										},
										{
											"begin": 770,
											"end": 828,
											"name": "SWAP1"
										},
										{
											"begin": 770,
											"end": 828,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 770,
											"end": 828,
											"name": "NOT"
										},
										{
											"begin": 770,
											"end": 828,
											"name": "AND"
										},
										{
											"begin": 38,
											"end": 42,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 29,
											"end": 36,
											"name": "DUP3"
										},
										{
											"begin": 25,
											"end": 43,
											"name": "ADD"
										},
										{
											"begin": 67,
											"end": 77,
											"name": "DUP1"
										},
										{
											"begin": 61,
											"end": 78,
											"name": "MLOAD"
										},
										{
											"begin": 96,
											"end": 154,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 199,
											"end": 207,
											"name": "DUP4"
										},
										{
											"begin": 192,
											"end": 196,
											"name": "DUP2"
										},
										{
											"begin": 186,
											"end": 190,
											"name": "DUP4"
										},
										{
											"begin": 182,
											"end": 197,
											"name": "AND"
										},
										{
											"begin": 179,
											"end": 208,
											"name": "OR"
										},
										{
											"begin": 167,
											"end": 177,
											"name": "DUP4"
										},
										{
											"begin": 160,
											"end": 209,
											"name": "MSTORE"
										},
										{
											"begin": 0,
											"end": 215,
											"name": "POP"
										},
										{
											"begin": 0,
											"end": 215,
											"name": "POP"
										},
										{
											"begin": 0,
											"end": 215,
											"name": "POP"
										},
										{
											"begin": 770,
											"end": 828,
											"name": "POP"
										},
										{
											"begin": 744,
											"end": 762,
											"name": "PUSH [tag]",
											"value": "253"
										},
										{
											"begin": 744,
											"end": 829,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 744,
											"end": 829,
											"name": "tag",
											"value": "265"
										},
										{
											"begin": 744,
											"end": 829,
											"name": "JUMPDEST"
										},
										{
											"begin": 662,
											"end": 836,
											"name": "POP"
										},
										{
											"begin": 662,
											"end": 836,
											"name": "POP"
										},
										{
											"begin": 662,
											"end": 836,
											"name": "POP"
										},
										{
											"begin": 662,
											"end": 836,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 2159,
											"end": 2618,
											"name": "tag",
											"value": "135"
										},
										{
											"begin": 2159,
											"end": 2618,
											"name": "JUMPDEST"
										},
										{
											"begin": 2217,
											"end": 2224,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2463,
											"end": 2464,
											"name": "DUP1"
										},
										{
											"begin": 2458,
											"end": 2459,
											"name": "DUP4"
										},
										{
											"begin": 2458,
											"end": 2464,
											"name": "EQ"
										},
										{
											"begin": 2454,
											"end": 2499,
											"name": "ISZERO"
										},
										{
											"begin": 2454,
											"end": 2499,
											"name": "PUSH [tag]",
											"value": "267"
										},
										{
											"begin": 2454,
											"end": 2499,
											"name": "JUMPI"
										},
										{
											"begin": 2487,
											"end": 2488,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2480,
											"end": 2488,
											"name": "SWAP1"
										},
										{
											"begin": 2480,
											"end": 2488,
											"name": "POP"
										},
										{
											"begin": 2480,
											"end": 2488,
											"name": "PUSH [tag]",
											"value": "266"
										},
										{
											"begin": 2480,
											"end": 2488,
											"name": "JUMP"
										},
										{
											"begin": 2454,
											"end": 2499,
											"name": "tag",
											"value": "267"
										},
										{
											"begin": 2454,
											"end": 2499,
											"name": "JUMPDEST"
										},
										{
											"begin": 2509,
											"end": 2518,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2525,
											"end": 2526,
											"name": "DUP3"
										},
										{
											"begin": 2521,
											"end": 2522,
											"name": "DUP5"
										},
										{
											"begin": 2521,
											"end": 2526,
											"name": "MUL"
										},
										{
											"begin": 2509,
											"end": 2526,
											"name": "SWAP1"
										},
										{
											"begin": 2509,
											"end": 2526,
											"name": "POP"
										},
										{
											"begin": 2553,
											"end": 2554,
											"name": "DUP3"
										},
										{
											"begin": 2548,
											"end": 2549,
											"name": "DUP5"
										},
										{
											"begin": 2544,
											"end": 2545,
											"name": "DUP3"
										},
										{
											"begin": 2544,
											"end": 2549,
											"name": "DUP2"
										},
										{
											"begin": 2544,
											"end": 2549,
											"name": "PUSH [tag]",
											"value": "268"
										},
										{
											"begin": 2544,
											"end": 2549,
											"name": "JUMPI"
										},
										{
											"begin": 2544,
											"end": 2549,
											"name": "INVALID"
										},
										{
											"begin": 2544,
											"end": 2549,
											"name": "tag",
											"value": "268"
										},
										{
											"begin": 2544,
											"end": 2549,
											"name": "JUMPDEST"
										},
										{
											"begin": 2544,
											"end": 2549,
											"name": "DIV"
										},
										{
											"begin": 2544,
											"end": 2554,
											"name": "EQ"
										},
										{
											"begin": 2536,
											"end": 2592,
											"name": "PUSH [tag]",
											"value": "269"
										},
										{
											"begin": 2536,
											"end": 2592,
											"name": "JUMPI"
										},
										{
											"begin": 2536,
											"end": 2592,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2536,
											"end": 2592,
											"name": "MLOAD"
										},
										{
											"begin": 2536,
											"end": 2592,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2536,
											"end": 2592,
											"name": "DUP2"
										},
										{
											"begin": 2536,
											"end": 2592,
											"name": "MSTORE"
										},
										{
											"begin": 2536,
											"end": 2592,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 2536,
											"end": 2592,
											"name": "ADD"
										},
										{
											"begin": 2536,
											"end": 2592,
											"name": "DUP1"
										},
										{
											"begin": 2536,
											"end": 2592,
											"name": "DUP1"
										},
										{
											"begin": 2536,
											"end": 2592,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2536,
											"end": 2592,
											"name": "ADD"
										},
										{
											"begin": 2536,
											"end": 2592,
											"name": "DUP3"
										},
										{
											"begin": 2536,
											"end": 2592,
											"name": "DUP2"
										},
										{
											"begin": 2536,
											"end": 2592,
											"name": "SUB"
										},
										{
											"begin": 2536,
											"end": 2592,
											"name": "DUP3"
										},
										{
											"begin": 2536,
											"end": 2592,
											"name": "MSTORE"
										},
										{
											"begin": 2536,
											"end": 2592,
											"name": "PUSH",
											"value": "21"
										},
										{
											"begin": 2536,
											"end": 2592,
											"name": "DUP2"
										},
										{
											"begin": 2536,
											"end": 2592,
											"name": "MSTORE"
										},
										{
											"begin": 2536,
											"end": 2592,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2536,
											"end": 2592,
											"name": "ADD"
										},
										{
											"begin": 2536,
											"end": 2592,
											"name": "DUP1"
										},
										{
											"begin": 2536,
											"end": 2592,
											"name": "PUSH data",
											"value": "9113BB53C2876A3805B2C9242029423FC540A728243CE887AB24C82CF119FBA3"
										},
										{
											"begin": 2536,
											"end": 2592,
											"name": "PUSH",
											"value": "21"
										},
										{
											"begin": 2536,
											"end": 2592,
											"name": "SWAP2"
										},
										{
											"begin": 2536,
											"end": 2592,
											"name": "CODECOPY"
										},
										{
											"begin": 2536,
											"end": 2592,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2536,
											"end": 2592,
											"name": "ADD"
										},
										{
											"begin": 2536,
											"end": 2592,
											"name": "SWAP2"
										},
										{
											"begin": 2536,
											"end": 2592,
											"name": "POP"
										},
										{
											"begin": 2536,
											"end": 2592,
											"name": "POP"
										},
										{
											"begin": 2536,
											"end": 2592,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2536,
											"end": 2592,
											"name": "MLOAD"
										},
										{
											"begin": 2536,
											"end": 2592,
											"name": "DUP1"
										},
										{
											"begin": 2536,
											"end": 2592,
											"name": "SWAP2"
										},
										{
											"begin": 2536,
											"end": 2592,
											"name": "SUB"
										},
										{
											"begin": 2536,
											"end": 2592,
											"name": "SWAP1"
										},
										{
											"begin": 2536,
											"end": 2592,
											"name": "REVERT"
										},
										{
											"begin": 2536,
											"end": 2592,
											"name": "tag",
											"value": "269"
										},
										{
											"begin": 2536,
											"end": 2592,
											"name": "JUMPDEST"
										},
										{
											"begin": 2610,
											"end": 2611,
											"name": "DUP1"
										},
										{
											"begin": 2603,
											"end": 2611,
											"name": "SWAP2"
										},
										{
											"begin": 2603,
											"end": 2611,
											"name": "POP"
										},
										{
											"begin": 2603,
											"end": 2611,
											"name": "POP"
										},
										{
											"begin": 2159,
											"end": 2618,
											"name": "tag",
											"value": "266"
										},
										{
											"begin": 2159,
											"end": 2618,
											"name": "JUMPDEST"
										},
										{
											"begin": 2159,
											"end": 2618,
											"name": "SWAP3"
										},
										{
											"begin": 2159,
											"end": 2618,
											"name": "SWAP2"
										},
										{
											"begin": 2159,
											"end": 2618,
											"name": "POP"
										},
										{
											"begin": 2159,
											"end": 2618,
											"name": "POP"
										},
										{
											"begin": 2159,
											"end": 2618,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 3073,
											"end": 3203,
											"name": "tag",
											"value": "136"
										},
										{
											"begin": 3073,
											"end": 3203,
											"name": "JUMPDEST"
										},
										{
											"begin": 3131,
											"end": 3138,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3157,
											"end": 3196,
											"name": "PUSH [tag]",
											"value": "271"
										},
										{
											"begin": 3161,
											"end": 3162,
											"name": "DUP4"
										},
										{
											"begin": 3164,
											"end": 3165,
											"name": "DUP4"
										},
										{
											"begin": 3157,
											"end": 3196,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3157,
											"end": 3196,
											"name": "MLOAD"
										},
										{
											"begin": 3157,
											"end": 3196,
											"name": "DUP1"
										},
										{
											"begin": 3157,
											"end": 3196,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3157,
											"end": 3196,
											"name": "ADD"
										},
										{
											"begin": 3157,
											"end": 3196,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3157,
											"end": 3196,
											"name": "MSTORE"
										},
										{
											"begin": 3157,
											"end": 3196,
											"name": "DUP1"
										},
										{
											"begin": 3157,
											"end": 3196,
											"name": "PUSH",
											"value": "1A"
										},
										{
											"begin": 3157,
											"end": 3196,
											"name": "DUP2"
										},
										{
											"begin": 3157,
											"end": 3196,
											"name": "MSTORE"
										},
										{
											"begin": 3157,
											"end": 3196,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3157,
											"end": 3196,
											"name": "ADD"
										},
										{
											"begin": 3157,
											"end": 3196,
											"name": "PUSH",
											"value": "536166654D6174683A206469766973696F6E206279207A65726F000000000000"
										},
										{
											"begin": 3157,
											"end": 3196,
											"name": "DUP2"
										},
										{
											"begin": 3157,
											"end": 3196,
											"name": "MSTORE"
										},
										{
											"begin": 3157,
											"end": 3196,
											"name": "POP"
										},
										{
											"begin": 3157,
											"end": 3160,
											"name": "PUSH [tag]",
											"value": "272"
										},
										{
											"begin": 3157,
											"end": 3196,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3157,
											"end": 3196,
											"name": "tag",
											"value": "271"
										},
										{
											"begin": 3157,
											"end": 3196,
											"name": "JUMPDEST"
										},
										{
											"begin": 3150,
											"end": 3196,
											"name": "SWAP1"
										},
										{
											"begin": 3150,
											"end": 3196,
											"name": "POP"
										},
										{
											"begin": 3073,
											"end": 3203,
											"name": "SWAP3"
										},
										{
											"begin": 3073,
											"end": 3203,
											"name": "SWAP2"
										},
										{
											"begin": 3073,
											"end": 3203,
											"name": "POP"
										},
										{
											"begin": 3073,
											"end": 3203,
											"name": "POP"
										},
										{
											"begin": 3073,
											"end": 3203,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 8500,
											"end": 8903,
											"name": "tag",
											"value": "155"
										},
										{
											"begin": 8500,
											"end": 8903,
											"name": "JUMPDEST"
										},
										{
											"begin": 8571,
											"end": 8578,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8590,
											"end": 8604,
											"name": "DUP1"
										},
										{
											"begin": 8621,
											"end": 8625,
											"name": "DUP4"
										},
										{
											"begin": 8607,
											"end": 8635,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8607,
											"end": 8635,
											"name": "AND"
										},
										{
											"begin": 8607,
											"end": 8635,
											"name": "PUSH",
											"value": "313CE567"
										},
										{
											"begin": 8607,
											"end": 8637,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8607,
											"end": 8637,
											"name": "MLOAD"
										},
										{
											"begin": 8607,
											"end": 8637,
											"name": "DUP2"
										},
										{
											"begin": 8607,
											"end": 8637,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 8607,
											"end": 8637,
											"name": "AND"
										},
										{
											"begin": 8607,
											"end": 8637,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 8607,
											"end": 8637,
											"name": "SHL"
										},
										{
											"begin": 8607,
											"end": 8637,
											"name": "DUP2"
										},
										{
											"begin": 8607,
											"end": 8637,
											"name": "MSTORE"
										},
										{
											"begin": 8607,
											"end": 8637,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 8607,
											"end": 8637,
											"name": "ADD"
										},
										{
											"begin": 8607,
											"end": 8637,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8607,
											"end": 8637,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8607,
											"end": 8637,
											"name": "MLOAD"
										},
										{
											"begin": 8607,
											"end": 8637,
											"name": "DUP1"
										},
										{
											"begin": 8607,
											"end": 8637,
											"name": "DUP4"
										},
										{
											"begin": 8607,
											"end": 8637,
											"name": "SUB"
										},
										{
											"begin": 8607,
											"end": 8637,
											"name": "DUP2"
										},
										{
											"begin": 8607,
											"end": 8637,
											"name": "DUP7"
										},
										{
											"begin": 8607,
											"end": 8637,
											"name": "DUP1"
										},
										{
											"begin": 8607,
											"end": 8637,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 8607,
											"end": 8637,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "274"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "274"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 8607,
											"end": 8637,
											"name": "POP"
										},
										{
											"begin": 8607,
											"end": 8637,
											"name": "GAS"
										},
										{
											"begin": 8607,
											"end": 8637,
											"name": "STATICCALL"
										},
										{
											"begin": 8607,
											"end": 8637,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "275"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "275"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 8607,
											"end": 8637,
											"name": "POP"
										},
										{
											"begin": 8607,
											"end": 8637,
											"name": "POP"
										},
										{
											"begin": 8607,
											"end": 8637,
											"name": "POP"
										},
										{
											"begin": 8607,
											"end": 8637,
											"name": "POP"
										},
										{
											"begin": 8607,
											"end": 8637,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8607,
											"end": 8637,
											"name": "MLOAD"
										},
										{
											"begin": 8607,
											"end": 8637,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "276"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "276"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 8607,
											"end": 8637,
											"name": "DUP2"
										},
										{
											"begin": 8607,
											"end": 8637,
											"name": "ADD"
										},
										{
											"begin": 8607,
											"end": 8637,
											"name": "SWAP1"
										},
										{
											"begin": 8607,
											"end": 8637,
											"name": "DUP1"
										},
										{
											"begin": 8607,
											"end": 8637,
											"name": "DUP1"
										},
										{
											"begin": 8607,
											"end": 8637,
											"name": "MLOAD"
										},
										{
											"begin": 8607,
											"end": 8637,
											"name": "SWAP1"
										},
										{
											"begin": 8607,
											"end": 8637,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8607,
											"end": 8637,
											"name": "ADD"
										},
										{
											"begin": 8607,
											"end": 8637,
											"name": "SWAP1"
										},
										{
											"begin": 8607,
											"end": 8637,
											"name": "SWAP3"
										},
										{
											"begin": 8607,
											"end": 8637,
											"name": "SWAP2"
										},
										{
											"begin": 8607,
											"end": 8637,
											"name": "SWAP1"
										},
										{
											"begin": 8607,
											"end": 8637,
											"name": "POP"
										},
										{
											"begin": 8607,
											"end": 8637,
											"name": "POP"
										},
										{
											"begin": 8607,
											"end": 8637,
											"name": "POP"
										},
										{
											"begin": 8590,
											"end": 8637,
											"name": "SWAP1"
										},
										{
											"begin": 8590,
											"end": 8637,
											"name": "POP"
										},
										{
											"begin": 8663,
											"end": 8665,
											"name": "PUSH",
											"value": "12"
										},
										{
											"begin": 8651,
											"end": 8659,
											"name": "DUP2"
										},
										{
											"begin": 8651,
											"end": 8665,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 8651,
											"end": 8665,
											"name": "AND"
										},
										{
											"begin": 8651,
											"end": 8665,
											"name": "EQ"
										},
										{
											"begin": 8647,
											"end": 8897,
											"name": "ISZERO"
										},
										{
											"begin": 8647,
											"end": 8897,
											"name": "PUSH [tag]",
											"value": "277"
										},
										{
											"begin": 8647,
											"end": 8897,
											"name": "JUMPI"
										},
										{
											"begin": 8688,
											"end": 8694,
											"name": "DUP3"
										},
										{
											"begin": 8681,
											"end": 8694,
											"name": "SWAP2"
										},
										{
											"begin": 8681,
											"end": 8694,
											"name": "POP"
										},
										{
											"begin": 8681,
											"end": 8694,
											"name": "POP"
										},
										{
											"begin": 8681,
											"end": 8694,
											"name": "PUSH [tag]",
											"value": "273"
										},
										{
											"begin": 8681,
											"end": 8694,
											"name": "JUMP"
										},
										{
											"begin": 8647,
											"end": 8897,
											"name": "tag",
											"value": "277"
										},
										{
											"begin": 8647,
											"end": 8897,
											"name": "JUMPDEST"
										},
										{
											"begin": 8726,
											"end": 8728,
											"name": "PUSH",
											"value": "12"
										},
										{
											"begin": 8715,
											"end": 8723,
											"name": "DUP2"
										},
										{
											"begin": 8715,
											"end": 8728,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 8715,
											"end": 8728,
											"name": "AND"
										},
										{
											"begin": 8715,
											"end": 8728,
											"name": "GT"
										},
										{
											"begin": 8711,
											"end": 8897,
											"name": "ISZERO"
										},
										{
											"begin": 8711,
											"end": 8897,
											"name": "PUSH [tag]",
											"value": "279"
										},
										{
											"begin": 8711,
											"end": 8897,
											"name": "JUMPI"
										},
										{
											"begin": 8751,
											"end": 8789,
											"name": "PUSH [tag]",
											"value": "280"
										},
										{
											"begin": 8785,
											"end": 8787,
											"name": "PUSH",
											"value": "12"
										},
										{
											"begin": 8776,
											"end": 8784,
											"name": "DUP3"
										},
										{
											"begin": 8776,
											"end": 8787,
											"name": "SUB"
										},
										{
											"begin": 8762,
											"end": 8788,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 8762,
											"end": 8788,
											"name": "AND"
										},
										{
											"begin": 8770,
											"end": 8772,
											"name": "PUSH",
											"value": "A"
										},
										{
											"begin": 8762,
											"end": 8788,
											"name": "EXP"
										},
										{
											"begin": 8751,
											"end": 8757,
											"name": "DUP5"
										},
										{
											"begin": 8751,
											"end": 8761,
											"name": "PUSH [tag]",
											"value": "136"
										},
										{
											"begin": 8751,
											"end": 8761,
											"name": "SWAP1"
										},
										{
											"begin": 8751,
											"end": 8789,
											"name": "SWAP2"
										},
										{
											"begin": 8751,
											"end": 8789,
											"name": "SWAP1"
										},
										{
											"begin": 8751,
											"end": 8789,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 8751,
											"end": 8789,
											"name": "AND"
										},
										{
											"begin": 8751,
											"end": 8789,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 8751,
											"end": 8789,
											"name": "tag",
											"value": "280"
										},
										{
											"begin": 8751,
											"end": 8789,
											"name": "JUMPDEST"
										},
										{
											"begin": 8744,
											"end": 8789,
											"name": "SWAP2"
										},
										{
											"begin": 8744,
											"end": 8789,
											"name": "POP"
										},
										{
											"begin": 8744,
											"end": 8789,
											"name": "POP"
										},
										{
											"begin": 8744,
											"end": 8789,
											"name": "PUSH [tag]",
											"value": "273"
										},
										{
											"begin": 8744,
											"end": 8789,
											"name": "JUMP"
										},
										{
											"begin": 8711,
											"end": 8897,
											"name": "tag",
											"value": "279"
										},
										{
											"begin": 8711,
											"end": 8897,
											"name": "JUMPDEST"
										},
										{
											"begin": 8821,
											"end": 8823,
											"name": "PUSH",
											"value": "12"
										},
										{
											"begin": 8810,
											"end": 8818,
											"name": "DUP2"
										},
										{
											"begin": 8810,
											"end": 8823,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 8810,
											"end": 8823,
											"name": "AND"
										},
										{
											"begin": 8810,
											"end": 8823,
											"name": "LT"
										},
										{
											"begin": 8806,
											"end": 8897,
											"name": "ISZERO"
										},
										{
											"begin": 8806,
											"end": 8897,
											"name": "PUSH [tag]",
											"value": "282"
										},
										{
											"begin": 8806,
											"end": 8897,
											"name": "JUMPI"
										},
										{
											"begin": 8846,
											"end": 8886,
											"name": "PUSH [tag]",
											"value": "283"
										},
										{
											"begin": 8876,
											"end": 8884,
											"name": "DUP2"
										},
										{
											"begin": 8871,
											"end": 8873,
											"name": "PUSH",
											"value": "12"
										},
										{
											"begin": 8871,
											"end": 8884,
											"name": "SUB"
										},
										{
											"begin": 8857,
											"end": 8885,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 8857,
											"end": 8885,
											"name": "AND"
										},
										{
											"begin": 8865,
											"end": 8867,
											"name": "PUSH",
											"value": "A"
										},
										{
											"begin": 8857,
											"end": 8885,
											"name": "EXP"
										},
										{
											"begin": 8846,
											"end": 8852,
											"name": "DUP5"
										},
										{
											"begin": 8846,
											"end": 8856,
											"name": "PUSH [tag]",
											"value": "135"
										},
										{
											"begin": 8846,
											"end": 8856,
											"name": "SWAP1"
										},
										{
											"begin": 8846,
											"end": 8886,
											"name": "SWAP2"
										},
										{
											"begin": 8846,
											"end": 8886,
											"name": "SWAP1"
										},
										{
											"begin": 8846,
											"end": 8886,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 8846,
											"end": 8886,
											"name": "AND"
										},
										{
											"begin": 8846,
											"end": 8886,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 8846,
											"end": 8886,
											"name": "tag",
											"value": "283"
										},
										{
											"begin": 8846,
											"end": 8886,
											"name": "JUMPDEST"
										},
										{
											"begin": 8839,
											"end": 8886,
											"name": "SWAP2"
										},
										{
											"begin": 8839,
											"end": 8886,
											"name": "POP"
										},
										{
											"begin": 8839,
											"end": 8886,
											"name": "POP"
										},
										{
											"begin": 8839,
											"end": 8886,
											"name": "PUSH [tag]",
											"value": "273"
										},
										{
											"begin": 8839,
											"end": 8886,
											"name": "JUMP"
										},
										{
											"begin": 8806,
											"end": 8897,
											"name": "tag",
											"value": "282"
										},
										{
											"begin": 8806,
											"end": 8897,
											"name": "JUMPDEST"
										},
										{
											"begin": 8500,
											"end": 8903,
											"name": "POP"
										},
										{
											"begin": 8500,
											"end": 8903,
											"name": "tag",
											"value": "273"
										},
										{
											"begin": 8500,
											"end": 8903,
											"name": "JUMPDEST"
										},
										{
											"begin": 8500,
											"end": 8903,
											"name": "SWAP3"
										},
										{
											"begin": 8500,
											"end": 8903,
											"name": "SWAP2"
										},
										{
											"begin": 8500,
											"end": 8903,
											"name": "POP"
										},
										{
											"begin": 8500,
											"end": 8903,
											"name": "POP"
										},
										{
											"begin": 8500,
											"end": 8903,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 834,
											"end": 1010,
											"name": "tag",
											"value": "156"
										},
										{
											"begin": 834,
											"end": 1010,
											"name": "JUMPDEST"
										},
										{
											"begin": 892,
											"end": 899,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 911,
											"end": 920,
											"name": "DUP1"
										},
										{
											"begin": 927,
											"end": 928,
											"name": "DUP3"
										},
										{
											"begin": 923,
											"end": 924,
											"name": "DUP5"
										},
										{
											"begin": 923,
											"end": 928,
											"name": "ADD"
										},
										{
											"begin": 911,
											"end": 928,
											"name": "SWAP1"
										},
										{
											"begin": 911,
											"end": 928,
											"name": "POP"
										},
										{
											"begin": 951,
											"end": 952,
											"name": "DUP4"
										},
										{
											"begin": 946,
											"end": 947,
											"name": "DUP2"
										},
										{
											"begin": 946,
											"end": 952,
											"name": "LT"
										},
										{
											"begin": 946,
											"end": 952,
											"name": "ISZERO"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "PUSH [tag]",
											"value": "285"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "JUMPI"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "MLOAD"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "DUP2"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "MSTORE"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "ADD"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "DUP1"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "DUP1"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "ADD"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "DUP3"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "DUP2"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "SUB"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "DUP3"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "MSTORE"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "PUSH",
											"value": "1B"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "DUP2"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "MSTORE"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "ADD"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "DUP1"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "PUSH",
											"value": "536166654D6174683A206164646974696F6E206F766572666C6F770000000000"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "DUP2"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "MSTORE"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "POP"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "ADD"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "SWAP2"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "POP"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "POP"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "MLOAD"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "DUP1"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "SWAP2"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "SUB"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "SWAP1"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "REVERT"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "tag",
											"value": "285"
										},
										{
											"begin": 938,
											"end": 984,
											"name": "JUMPDEST"
										},
										{
											"begin": 1002,
											"end": 1003,
											"name": "DUP1"
										},
										{
											"begin": 995,
											"end": 1003,
											"name": "SWAP2"
										},
										{
											"begin": 995,
											"end": 1003,
											"name": "POP"
										},
										{
											"begin": 995,
											"end": 1003,
											"name": "POP"
										},
										{
											"begin": 834,
											"end": 1010,
											"name": "SWAP3"
										},
										{
											"begin": 834,
											"end": 1010,
											"name": "SWAP2"
										},
										{
											"begin": 834,
											"end": 1010,
											"name": "POP"
										},
										{
											"begin": 834,
											"end": 1010,
											"name": "POP"
										},
										{
											"begin": 834,
											"end": 1010,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 6525,
											"end": 6790,
											"name": "tag",
											"value": "158"
										},
										{
											"begin": 6525,
											"end": 6790,
											"name": "JUMPDEST"
										},
										{
											"begin": 6600,
											"end": 6607,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6619,
											"end": 6635,
											"name": "DUP1"
										},
										{
											"begin": 6638,
											"end": 6657,
											"name": "PUSH [tag]",
											"value": "287"
										},
										{
											"begin": 6638,
											"end": 6655,
											"name": "PUSH [tag]",
											"value": "44"
										},
										{
											"begin": 6638,
											"end": 6657,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 6638,
											"end": 6657,
											"name": "tag",
											"value": "287"
										},
										{
											"begin": 6638,
											"end": 6657,
											"name": "JUMPDEST"
										},
										{
											"begin": 6619,
											"end": 6657,
											"name": "SWAP1"
										},
										{
											"begin": 6619,
											"end": 6657,
											"name": "POP"
										},
										{
											"begin": 6667,
											"end": 6685,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6688,
											"end": 6709,
											"name": "PUSH [tag]",
											"value": "288"
										},
										{
											"begin": 6688,
											"end": 6707,
											"name": "PUSH [tag]",
											"value": "59"
										},
										{
											"begin": 6688,
											"end": 6709,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 6688,
											"end": 6709,
											"name": "tag",
											"value": "288"
										},
										{
											"begin": 6688,
											"end": 6709,
											"name": "JUMPDEST"
										},
										{
											"begin": 6667,
											"end": 6709,
											"name": "SWAP1"
										},
										{
											"begin": 6667,
											"end": 6709,
											"name": "POP"
										},
										{
											"begin": 6735,
											"end": 6783,
											"name": "PUSH [tag]",
											"value": "289"
										},
										{
											"begin": 6774,
											"end": 6782,
											"name": "DUP3"
										},
										{
											"begin": 6735,
											"end": 6769,
											"name": "PUSH [tag]",
											"value": "290"
										},
										{
											"begin": 6750,
											"end": 6768,
											"name": "DUP7"
										},
										{
											"begin": 6735,
											"end": 6745,
											"name": "DUP5"
										},
										{
											"begin": 6735,
											"end": 6749,
											"name": "PUSH [tag]",
											"value": "135"
										},
										{
											"begin": 6735,
											"end": 6749,
											"name": "SWAP1"
										},
										{
											"begin": 6735,
											"end": 6769,
											"name": "SWAP2"
										},
										{
											"begin": 6735,
											"end": 6769,
											"name": "SWAP1"
										},
										{
											"begin": 6735,
											"end": 6769,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 6735,
											"end": 6769,
											"name": "AND"
										},
										{
											"begin": 6735,
											"end": 6769,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 6735,
											"end": 6769,
											"name": "tag",
											"value": "290"
										},
										{
											"begin": 6735,
											"end": 6769,
											"name": "JUMPDEST"
										},
										{
											"begin": 6735,
											"end": 6773,
											"name": "PUSH [tag]",
											"value": "136"
										},
										{
											"begin": 6735,
											"end": 6773,
											"name": "SWAP1"
										},
										{
											"begin": 6735,
											"end": 6783,
											"name": "SWAP2"
										},
										{
											"begin": 6735,
											"end": 6783,
											"name": "SWAP1"
										},
										{
											"begin": 6735,
											"end": 6783,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 6735,
											"end": 6783,
											"name": "AND"
										},
										{
											"begin": 6735,
											"end": 6783,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 6735,
											"end": 6783,
											"name": "tag",
											"value": "289"
										},
										{
											"begin": 6735,
											"end": 6783,
											"name": "JUMPDEST"
										},
										{
											"begin": 6728,
											"end": 6783,
											"name": "SWAP3"
										},
										{
											"begin": 6728,
											"end": 6783,
											"name": "POP"
										},
										{
											"begin": 6728,
											"end": 6783,
											"name": "POP"
										},
										{
											"begin": 6728,
											"end": 6783,
											"name": "POP"
										},
										{
											"begin": 6525,
											"end": 6790,
											"name": "SWAP2"
										},
										{
											"begin": 6525,
											"end": 6790,
											"name": "SWAP1"
										},
										{
											"begin": 6525,
											"end": 6790,
											"name": "POP"
										},
										{
											"begin": 6525,
											"end": 6790,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1274,
											"end": 1408,
											"name": "tag",
											"value": "162"
										},
										{
											"begin": 1274,
											"end": 1408,
											"name": "JUMPDEST"
										},
										{
											"begin": 1332,
											"end": 1339,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1358,
											"end": 1401,
											"name": "PUSH [tag]",
											"value": "292"
										},
										{
											"begin": 1362,
											"end": 1363,
											"name": "DUP4"
										},
										{
											"begin": 1365,
											"end": 1366,
											"name": "DUP4"
										},
										{
											"begin": 1358,
											"end": 1401,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1358,
											"end": 1401,
											"name": "MLOAD"
										},
										{
											"begin": 1358,
											"end": 1401,
											"name": "DUP1"
										},
										{
											"begin": 1358,
											"end": 1401,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1358,
											"end": 1401,
											"name": "ADD"
										},
										{
											"begin": 1358,
											"end": 1401,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1358,
											"end": 1401,
											"name": "MSTORE"
										},
										{
											"begin": 1358,
											"end": 1401,
											"name": "DUP1"
										},
										{
											"begin": 1358,
											"end": 1401,
											"name": "PUSH",
											"value": "1E"
										},
										{
											"begin": 1358,
											"end": 1401,
											"name": "DUP2"
										},
										{
											"begin": 1358,
											"end": 1401,
											"name": "MSTORE"
										},
										{
											"begin": 1358,
											"end": 1401,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1358,
											"end": 1401,
											"name": "ADD"
										},
										{
											"begin": 1358,
											"end": 1401,
											"name": "PUSH",
											"value": "536166654D6174683A207375627472616374696F6E206F766572666C6F770000"
										},
										{
											"begin": 1358,
											"end": 1401,
											"name": "DUP2"
										},
										{
											"begin": 1358,
											"end": 1401,
											"name": "MSTORE"
										},
										{
											"begin": 1358,
											"end": 1401,
											"name": "POP"
										},
										{
											"begin": 1358,
											"end": 1361,
											"name": "PUSH [tag]",
											"value": "293"
										},
										{
											"begin": 1358,
											"end": 1401,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1358,
											"end": 1401,
											"name": "tag",
											"value": "292"
										},
										{
											"begin": 1358,
											"end": 1401,
											"name": "JUMPDEST"
										},
										{
											"begin": 1351,
											"end": 1401,
											"name": "SWAP1"
										},
										{
											"begin": 1351,
											"end": 1401,
											"name": "POP"
										},
										{
											"begin": 1274,
											"end": 1408,
											"name": "SWAP3"
										},
										{
											"begin": 1274,
											"end": 1408,
											"name": "SWAP2"
										},
										{
											"begin": 1274,
											"end": 1408,
											"name": "POP"
										},
										{
											"begin": 1274,
											"end": 1408,
											"name": "POP"
										},
										{
											"begin": 1274,
											"end": 1408,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 2178,
											"end": 2403,
											"name": "tag",
											"value": "240"
										},
										{
											"begin": 2178,
											"end": 2403,
											"name": "JUMPDEST"
										},
										{
											"begin": 2271,
											"end": 2272,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2251,
											"end": 2273,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2251,
											"end": 2273,
											"name": "AND"
										},
										{
											"begin": 2251,
											"end": 2259,
											"name": "DUP2"
										},
										{
											"begin": 2251,
											"end": 2273,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2251,
											"end": 2273,
											"name": "AND"
										},
										{
											"begin": 2251,
											"end": 2273,
											"name": "EQ"
										},
										{
											"begin": 2251,
											"end": 2273,
											"name": "ISZERO"
										},
										{
											"begin": 2243,
											"end": 2316,
											"name": "PUSH [tag]",
											"value": "295"
										},
										{
											"begin": 2243,
											"end": 2316,
											"name": "JUMPI"
										},
										{
											"begin": 2243,
											"end": 2316,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2243,
											"end": 2316,
											"name": "MLOAD"
										},
										{
											"begin": 2243,
											"end": 2316,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2243,
											"end": 2316,
											"name": "DUP2"
										},
										{
											"begin": 2243,
											"end": 2316,
											"name": "MSTORE"
										},
										{
											"begin": 2243,
											"end": 2316,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 2243,
											"end": 2316,
											"name": "ADD"
										},
										{
											"begin": 2243,
											"end": 2316,
											"name": "DUP1"
										},
										{
											"begin": 2243,
											"end": 2316,
											"name": "DUP1"
										},
										{
											"begin": 2243,
											"end": 2316,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2243,
											"end": 2316,
											"name": "ADD"
										},
										{
											"begin": 2243,
											"end": 2316,
											"name": "DUP3"
										},
										{
											"begin": 2243,
											"end": 2316,
											"name": "DUP2"
										},
										{
											"begin": 2243,
											"end": 2316,
											"name": "SUB"
										},
										{
											"begin": 2243,
											"end": 2316,
											"name": "DUP3"
										},
										{
											"begin": 2243,
											"end": 2316,
											"name": "MSTORE"
										},
										{
											"begin": 2243,
											"end": 2316,
											"name": "PUSH",
											"value": "26"
										},
										{
											"begin": 2243,
											"end": 2316,
											"name": "DUP2"
										},
										{
											"begin": 2243,
											"end": 2316,
											"name": "MSTORE"
										},
										{
											"begin": 2243,
											"end": 2316,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2243,
											"end": 2316,
											"name": "ADD"
										},
										{
											"begin": 2243,
											"end": 2316,
											"name": "DUP1"
										},
										{
											"begin": 2243,
											"end": 2316,
											"name": "PUSH data",
											"value": "245F15FF17F551913A7A18385165551503906A406F905AC1C2437281A7CD0CFE"
										},
										{
											"begin": 2243,
											"end": 2316,
											"name": "PUSH",
											"value": "26"
										},
										{
											"begin": 2243,
											"end": 2316,
											"name": "SWAP2"
										},
										{
											"begin": 2243,
											"end": 2316,
											"name": "CODECOPY"
										},
										{
											"begin": 2243,
											"end": 2316,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2243,
											"end": 2316,
											"name": "ADD"
										},
										{
											"begin": 2243,
											"end": 2316,
											"name": "SWAP2"
										},
										{
											"begin": 2243,
											"end": 2316,
											"name": "POP"
										},
										{
											"begin": 2243,
											"end": 2316,
											"name": "POP"
										},
										{
											"begin": 2243,
											"end": 2316,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2243,
											"end": 2316,
											"name": "MLOAD"
										},
										{
											"begin": 2243,
											"end": 2316,
											"name": "DUP1"
										},
										{
											"begin": 2243,
											"end": 2316,
											"name": "SWAP2"
										},
										{
											"begin": 2243,
											"end": 2316,
											"name": "SUB"
										},
										{
											"begin": 2243,
											"end": 2316,
											"name": "SWAP1"
										},
										{
											"begin": 2243,
											"end": 2316,
											"name": "REVERT"
										},
										{
											"begin": 2243,
											"end": 2316,
											"name": "tag",
											"value": "295"
										},
										{
											"begin": 2243,
											"end": 2316,
											"name": "JUMPDEST"
										},
										{
											"begin": 2360,
											"end": 2368,
											"name": "DUP1"
										},
										{
											"begin": 2331,
											"end": 2369,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2331,
											"end": 2369,
											"name": "AND"
										},
										{
											"begin": 2352,
											"end": 2358,
											"name": "PUSH",
											"value": "33"
										},
										{
											"begin": 2352,
											"end": 2358,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2352,
											"end": 2358,
											"name": "SWAP1"
										},
										{
											"begin": 2352,
											"end": 2358,
											"name": "SLOAD"
										},
										{
											"begin": 2352,
											"end": 2358,
											"name": "SWAP1"
										},
										{
											"begin": 2352,
											"end": 2358,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 2352,
											"end": 2358,
											"name": "EXP"
										},
										{
											"begin": 2352,
											"end": 2358,
											"name": "SWAP1"
										},
										{
											"begin": 2352,
											"end": 2358,
											"name": "DIV"
										},
										{
											"begin": 2352,
											"end": 2358,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2352,
											"end": 2358,
											"name": "AND"
										},
										{
											"begin": 2331,
											"end": 2369,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2331,
											"end": 2369,
											"name": "AND"
										},
										{
											"begin": 2331,
											"end": 2369,
											"name": "PUSH",
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 2331,
											"end": 2369,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2331,
											"end": 2369,
											"name": "MLOAD"
										},
										{
											"begin": 2331,
											"end": 2369,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2331,
											"end": 2369,
											"name": "MLOAD"
										},
										{
											"begin": 2331,
											"end": 2369,
											"name": "DUP1"
										},
										{
											"begin": 2331,
											"end": 2369,
											"name": "SWAP2"
										},
										{
											"begin": 2331,
											"end": 2369,
											"name": "SUB"
										},
										{
											"begin": 2331,
											"end": 2369,
											"name": "SWAP1"
										},
										{
											"begin": 2331,
											"end": 2369,
											"name": "LOG3"
										},
										{
											"begin": 2388,
											"end": 2396,
											"name": "DUP1"
										},
										{
											"begin": 2379,
											"end": 2385,
											"name": "PUSH",
											"value": "33"
										},
										{
											"begin": 2379,
											"end": 2385,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2379,
											"end": 2396,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 2379,
											"end": 2396,
											"name": "EXP"
										},
										{
											"begin": 2379,
											"end": 2396,
											"name": "DUP2"
										},
										{
											"begin": 2379,
											"end": 2396,
											"name": "SLOAD"
										},
										{
											"begin": 2379,
											"end": 2396,
											"name": "DUP2"
										},
										{
											"begin": 2379,
											"end": 2396,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2379,
											"end": 2396,
											"name": "MUL"
										},
										{
											"begin": 2379,
											"end": 2396,
											"name": "NOT"
										},
										{
											"begin": 2379,
											"end": 2396,
											"name": "AND"
										},
										{
											"begin": 2379,
											"end": 2396,
											"name": "SWAP1"
										},
										{
											"begin": 2379,
											"end": 2396,
											"name": "DUP4"
										},
										{
											"begin": 2379,
											"end": 2396,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2379,
											"end": 2396,
											"name": "AND"
										},
										{
											"begin": 2379,
											"end": 2396,
											"name": "MUL"
										},
										{
											"begin": 2379,
											"end": 2396,
											"name": "OR"
										},
										{
											"begin": 2379,
											"end": 2396,
											"name": "SWAP1"
										},
										{
											"begin": 2379,
											"end": 2396,
											"name": "SSTORE"
										},
										{
											"begin": 2379,
											"end": 2396,
											"name": "POP"
										},
										{
											"begin": 2178,
											"end": 2403,
											"name": "POP"
										},
										{
											"begin": 2178,
											"end": 2403,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1638,
											"end": 2136,
											"name": "tag",
											"value": "244"
										},
										{
											"begin": 1638,
											"end": 2136,
											"name": "JUMPDEST"
										},
										{
											"begin": 1685,
											"end": 1689,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2026,
											"end": 2038,
											"name": "DUP1"
										},
										{
											"begin": 2049,
											"end": 2053,
											"name": "ADDRESS"
										},
										{
											"begin": 2026,
											"end": 2054,
											"name": "SWAP1"
										},
										{
											"begin": 2026,
											"end": 2054,
											"name": "POP"
										},
										{
											"begin": 2060,
											"end": 2070,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2105,
											"end": 2109,
											"name": "DUP2"
										},
										{
											"begin": 2093,
											"end": 2110,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 2087,
											"end": 2110,
											"name": "SWAP1"
										},
										{
											"begin": 2087,
											"end": 2110,
											"name": "POP"
										},
										{
											"begin": 2130,
											"end": 2131,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2124,
											"end": 2126,
											"name": "DUP2"
										},
										{
											"begin": 2124,
											"end": 2131,
											"name": "EQ"
										},
										{
											"begin": 2117,
											"end": 2131,
											"name": "SWAP3"
										},
										{
											"begin": 2117,
											"end": 2131,
											"name": "POP"
										},
										{
											"begin": 2117,
											"end": 2131,
											"name": "POP"
										},
										{
											"begin": 2117,
											"end": 2131,
											"name": "POP"
										},
										{
											"begin": 1638,
											"end": 2136,
											"name": "SWAP1"
										},
										{
											"begin": 1638,
											"end": 2136,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 2666,
											"end": 3761,
											"name": "tag",
											"value": "253"
										},
										{
											"begin": 2666,
											"end": 3761,
											"name": "JUMPDEST"
										},
										{
											"begin": 3261,
											"end": 3288,
											"name": "PUSH [tag]",
											"value": "298"
										},
										{
											"begin": 3269,
											"end": 3274,
											"name": "DUP3"
										},
										{
											"begin": 3261,
											"end": 3286,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3261,
											"end": 3286,
											"name": "AND"
										},
										{
											"begin": 3261,
											"end": 3286,
											"name": "PUSH [tag]",
											"value": "299"
										},
										{
											"begin": 3261,
											"end": 3288,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3261,
											"end": 3288,
											"name": "tag",
											"value": "298"
										},
										{
											"begin": 3261,
											"end": 3288,
											"name": "JUMPDEST"
										},
										{
											"begin": 3253,
											"end": 3324,
											"name": "PUSH [tag]",
											"value": "300"
										},
										{
											"begin": 3253,
											"end": 3324,
											"name": "JUMPI"
										},
										{
											"begin": 3253,
											"end": 3324,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3253,
											"end": 3324,
											"name": "MLOAD"
										},
										{
											"begin": 3253,
											"end": 3324,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3253,
											"end": 3324,
											"name": "DUP2"
										},
										{
											"begin": 3253,
											"end": 3324,
											"name": "MSTORE"
										},
										{
											"begin": 3253,
											"end": 3324,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 3253,
											"end": 3324,
											"name": "ADD"
										},
										{
											"begin": 3253,
											"end": 3324,
											"name": "DUP1"
										},
										{
											"begin": 3253,
											"end": 3324,
											"name": "DUP1"
										},
										{
											"begin": 3253,
											"end": 3324,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3253,
											"end": 3324,
											"name": "ADD"
										},
										{
											"begin": 3253,
											"end": 3324,
											"name": "DUP3"
										},
										{
											"begin": 3253,
											"end": 3324,
											"name": "DUP2"
										},
										{
											"begin": 3253,
											"end": 3324,
											"name": "SUB"
										},
										{
											"begin": 3253,
											"end": 3324,
											"name": "DUP3"
										},
										{
											"begin": 3253,
											"end": 3324,
											"name": "MSTORE"
										},
										{
											"begin": 3253,
											"end": 3324,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 3253,
											"end": 3324,
											"name": "DUP2"
										},
										{
											"begin": 3253,
											"end": 3324,
											"name": "MSTORE"
										},
										{
											"begin": 3253,
											"end": 3324,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3253,
											"end": 3324,
											"name": "ADD"
										},
										{
											"begin": 3253,
											"end": 3324,
											"name": "DUP1"
										},
										{
											"begin": 3253,
											"end": 3324,
											"name": "PUSH",
											"value": "5361666545524332303A2063616C6C20746F206E6F6E2D636F6E747261637400"
										},
										{
											"begin": 3253,
											"end": 3324,
											"name": "DUP2"
										},
										{
											"begin": 3253,
											"end": 3324,
											"name": "MSTORE"
										},
										{
											"begin": 3253,
											"end": 3324,
											"name": "POP"
										},
										{
											"begin": 3253,
											"end": 3324,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3253,
											"end": 3324,
											"name": "ADD"
										},
										{
											"begin": 3253,
											"end": 3324,
											"name": "SWAP2"
										},
										{
											"begin": 3253,
											"end": 3324,
											"name": "POP"
										},
										{
											"begin": 3253,
											"end": 3324,
											"name": "POP"
										},
										{
											"begin": 3253,
											"end": 3324,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3253,
											"end": 3324,
											"name": "MLOAD"
										},
										{
											"begin": 3253,
											"end": 3324,
											"name": "DUP1"
										},
										{
											"begin": 3253,
											"end": 3324,
											"name": "SWAP2"
										},
										{
											"begin": 3253,
											"end": 3324,
											"name": "SUB"
										},
										{
											"begin": 3253,
											"end": 3324,
											"name": "SWAP1"
										},
										{
											"begin": 3253,
											"end": 3324,
											"name": "REVERT"
										},
										{
											"begin": 3253,
											"end": 3324,
											"name": "tag",
											"value": "300"
										},
										{
											"begin": 3253,
											"end": 3324,
											"name": "JUMPDEST"
										},
										{
											"begin": 3395,
											"end": 3407,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3409,
											"end": 3432,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 3444,
											"end": 3449,
											"name": "DUP4"
										},
										{
											"begin": 3436,
											"end": 3455,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3436,
											"end": 3455,
											"name": "AND"
										},
										{
											"begin": 3456,
											"end": 3460,
											"name": "DUP4"
										},
										{
											"begin": 3436,
											"end": 3461,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3436,
											"end": 3461,
											"name": "MLOAD"
										},
										{
											"begin": 3436,
											"end": 3461,
											"name": "DUP1"
										},
										{
											"begin": 3436,
											"end": 3461,
											"name": "DUP3"
										},
										{
											"begin": 3436,
											"end": 3461,
											"name": "DUP1"
										},
										{
											"begin": 3436,
											"end": 3461,
											"name": "MLOAD"
										},
										{
											"begin": 3436,
											"end": 3461,
											"name": "SWAP1"
										},
										{
											"begin": 3436,
											"end": 3461,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3436,
											"end": 3461,
											"name": "ADD"
										},
										{
											"begin": 3436,
											"end": 3461,
											"name": "SWAP1"
										},
										{
											"begin": 3436,
											"end": 3461,
											"name": "DUP1"
										},
										{
											"begin": 3436,
											"end": 3461,
											"name": "DUP4"
										},
										{
											"begin": 3436,
											"end": 3461,
											"name": "DUP4"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "tag",
											"value": "301"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "JUMPDEST"
										},
										{
											"begin": 66,
											"end": 68,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 61,
											"end": 64,
											"name": "DUP4"
										},
										{
											"begin": 58,
											"end": 69,
											"name": "LT"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "PUSH [tag]",
											"value": "303"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "JUMPI"
										},
										{
											"begin": 182,
											"end": 185,
											"name": "DUP1"
										},
										{
											"begin": 176,
											"end": 186,
											"name": "MLOAD"
										},
										{
											"begin": 171,
											"end": 174,
											"name": "DUP3"
										},
										{
											"begin": 164,
											"end": 187,
											"name": "MSTORE"
										},
										{
											"begin": 98,
											"end": 100,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 93,
											"end": 96,
											"name": "DUP3"
										},
										{
											"begin": 89,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 82,
											"end": 101,
											"name": "SWAP2"
										},
										{
											"begin": 82,
											"end": 101,
											"name": "POP"
										},
										{
											"begin": 123,
											"end": 125,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 118,
											"end": 121,
											"name": "DUP2"
										},
										{
											"begin": 114,
											"end": 126,
											"name": "ADD"
										},
										{
											"begin": 107,
											"end": 126,
											"name": "SWAP1"
										},
										{
											"begin": 107,
											"end": 126,
											"name": "POP"
										},
										{
											"begin": 148,
											"end": 150,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 143,
											"end": 146,
											"name": "DUP4"
										},
										{
											"begin": 139,
											"end": 151,
											"name": "SUB"
										},
										{
											"begin": 132,
											"end": 151,
											"name": "SWAP3"
										},
										{
											"begin": 132,
											"end": 151,
											"name": "POP"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "PUSH [tag]",
											"value": "301"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "JUMP"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "tag",
											"value": "303"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "JUMPDEST"
										},
										{
											"begin": 274,
											"end": 275,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 267,
											"end": 270,
											"name": "DUP4"
										},
										{
											"begin": 263,
											"end": 265,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 259,
											"end": 271,
											"name": "SUB"
										},
										{
											"begin": 254,
											"end": 257,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 250,
											"end": 272,
											"name": "EXP"
										},
										{
											"begin": 246,
											"end": 276,
											"name": "SUB"
										},
										{
											"begin": 315,
											"end": 319,
											"name": "DUP1"
										},
										{
											"begin": 311,
											"end": 320,
											"name": "NOT"
										},
										{
											"begin": 305,
											"end": 308,
											"name": "DUP3"
										},
										{
											"begin": 299,
											"end": 309,
											"name": "MLOAD"
										},
										{
											"begin": 295,
											"end": 321,
											"name": "AND"
										},
										{
											"begin": 356,
											"end": 360,
											"name": "DUP2"
										},
										{
											"begin": 350,
											"end": 353,
											"name": "DUP5"
										},
										{
											"begin": 344,
											"end": 354,
											"name": "MLOAD"
										},
										{
											"begin": 340,
											"end": 361,
											"name": "AND"
										},
										{
											"begin": 389,
											"end": 396,
											"name": "DUP1"
										},
										{
											"begin": 380,
											"end": 387,
											"name": "DUP3"
										},
										{
											"begin": 377,
											"end": 397,
											"name": "OR"
										},
										{
											"begin": 372,
											"end": 375,
											"name": "DUP6"
										},
										{
											"begin": 365,
											"end": 398,
											"name": "MSTORE"
										},
										{
											"begin": 3,
											"end": 402,
											"name": "POP"
										},
										{
											"begin": 3,
											"end": 402,
											"name": "POP"
										},
										{
											"begin": 3,
											"end": 402,
											"name": "POP"
										},
										{
											"begin": 3436,
											"end": 3461,
											"name": "POP"
										},
										{
											"begin": 3436,
											"end": 3461,
											"name": "POP"
										},
										{
											"begin": 3436,
											"end": 3461,
											"name": "POP"
										},
										{
											"begin": 3436,
											"end": 3461,
											"name": "SWAP1"
										},
										{
											"begin": 3436,
											"end": 3461,
											"name": "POP"
										},
										{
											"begin": 3436,
											"end": 3461,
											"name": "ADD"
										},
										{
											"begin": 3436,
											"end": 3461,
											"name": "SWAP2"
										},
										{
											"begin": 3436,
											"end": 3461,
											"name": "POP"
										},
										{
											"begin": 3436,
											"end": 3461,
											"name": "POP"
										},
										{
											"begin": 3436,
											"end": 3461,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3436,
											"end": 3461,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3436,
											"end": 3461,
											"name": "MLOAD"
										},
										{
											"begin": 3436,
											"end": 3461,
											"name": "DUP1"
										},
										{
											"begin": 3436,
											"end": 3461,
											"name": "DUP4"
										},
										{
											"begin": 3436,
											"end": 3461,
											"name": "SUB"
										},
										{
											"begin": 3436,
											"end": 3461,
											"name": "DUP2"
										},
										{
											"begin": 3436,
											"end": 3461,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3436,
											"end": 3461,
											"name": "DUP7"
										},
										{
											"begin": 3436,
											"end": 3461,
											"name": "GAS"
										},
										{
											"begin": 3436,
											"end": 3461,
											"name": "CALL"
										},
										{
											"begin": 3436,
											"end": 3461,
											"name": "SWAP2"
										},
										{
											"begin": 3436,
											"end": 3461,
											"name": "POP"
										},
										{
											"begin": 3436,
											"end": 3461,
											"name": "POP"
										},
										{
											"begin": 3436,
											"end": 3461,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 14,
											"end": 15,
											"name": "DUP1"
										},
										{
											"begin": 21,
											"end": 22,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 16,
											"end": 47,
											"name": "DUP2"
										},
										{
											"begin": 16,
											"end": 47,
											"name": "EQ"
										},
										{
											"begin": 16,
											"end": 47,
											"name": "PUSH [tag]",
											"value": "305"
										},
										{
											"begin": 16,
											"end": 47,
											"name": "JUMPI"
										},
										{
											"begin": 75,
											"end": 79,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 69,
											"end": 80,
											"name": "MLOAD"
										},
										{
											"begin": 64,
											"end": 80,
											"name": "SWAP2"
										},
										{
											"begin": 64,
											"end": 80,
											"name": "POP"
										},
										{
											"begin": 144,
											"end": 148,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 140,
											"end": 149,
											"name": "NOT"
										},
										{
											"begin": 133,
											"end": 137,
											"name": "PUSH",
											"value": "3F"
										},
										{
											"begin": 115,
											"end": 131,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 111,
											"end": 138,
											"name": "ADD"
										},
										{
											"begin": 107,
											"end": 150,
											"name": "AND"
										},
										{
											"begin": 104,
											"end": 105,
											"name": "DUP3"
										},
										{
											"begin": 100,
											"end": 151,
											"name": "ADD"
										},
										{
											"begin": 94,
											"end": 98,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 87,
											"end": 152,
											"name": "MSTORE"
										},
										{
											"begin": 169,
											"end": 185,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 166,
											"end": 167,
											"name": "DUP3"
										},
										{
											"begin": 159,
											"end": 186,
											"name": "MSTORE"
										},
										{
											"begin": 225,
											"end": 241,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 222,
											"end": 223,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 215,
											"end": 219,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 212,
											"end": 213,
											"name": "DUP5"
										},
										{
											"begin": 208,
											"end": 220,
											"name": "ADD"
										},
										{
											"begin": 193,
											"end": 242,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 7,
											"end": 249,
											"name": "PUSH [tag]",
											"value": "304"
										},
										{
											"begin": 7,
											"end": 249,
											"name": "JUMP"
										},
										{
											"begin": 16,
											"end": 47,
											"name": "tag",
											"value": "305"
										},
										{
											"begin": 16,
											"end": 47,
											"name": "JUMPDEST"
										},
										{
											"begin": 36,
											"end": 40,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 31,
											"end": 40,
											"name": "SWAP2"
										},
										{
											"begin": 31,
											"end": 40,
											"name": "POP"
										},
										{
											"begin": 7,
											"end": 249,
											"name": "tag",
											"value": "304"
										},
										{
											"begin": 7,
											"end": 249,
											"name": "JUMPDEST"
										},
										{
											"begin": 7,
											"end": 249,
											"name": "POP"
										},
										{
											"begin": 3394,
											"end": 3461,
											"name": "SWAP2"
										},
										{
											"begin": 3394,
											"end": 3461,
											"name": "POP"
										},
										{
											"begin": 3394,
											"end": 3461,
											"name": "SWAP2"
										},
										{
											"begin": 3394,
											"end": 3461,
											"name": "POP"
										},
										{
											"begin": 3479,
											"end": 3486,
											"name": "DUP2"
										},
										{
											"begin": 3471,
											"end": 3523,
											"name": "PUSH [tag]",
											"value": "306"
										},
										{
											"begin": 3471,
											"end": 3523,
											"name": "JUMPI"
										},
										{
											"begin": 3471,
											"end": 3523,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3471,
											"end": 3523,
											"name": "MLOAD"
										},
										{
											"begin": 3471,
											"end": 3523,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3471,
											"end": 3523,
											"name": "DUP2"
										},
										{
											"begin": 3471,
											"end": 3523,
											"name": "MSTORE"
										},
										{
											"begin": 3471,
											"end": 3523,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 3471,
											"end": 3523,
											"name": "ADD"
										},
										{
											"begin": 3471,
											"end": 3523,
											"name": "DUP1"
										},
										{
											"begin": 3471,
											"end": 3523,
											"name": "DUP1"
										},
										{
											"begin": 3471,
											"end": 3523,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3471,
											"end": 3523,
											"name": "ADD"
										},
										{
											"begin": 3471,
											"end": 3523,
											"name": "DUP3"
										},
										{
											"begin": 3471,
											"end": 3523,
											"name": "DUP2"
										},
										{
											"begin": 3471,
											"end": 3523,
											"name": "SUB"
										},
										{
											"begin": 3471,
											"end": 3523,
											"name": "DUP3"
										},
										{
											"begin": 3471,
											"end": 3523,
											"name": "MSTORE"
										},
										{
											"begin": 3471,
											"end": 3523,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3471,
											"end": 3523,
											"name": "DUP2"
										},
										{
											"begin": 3471,
											"end": 3523,
											"name": "MSTORE"
										},
										{
											"begin": 3471,
											"end": 3523,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3471,
											"end": 3523,
											"name": "ADD"
										},
										{
											"begin": 3471,
											"end": 3523,
											"name": "DUP1"
										},
										{
											"begin": 3471,
											"end": 3523,
											"name": "PUSH",
											"value": "5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564"
										},
										{
											"begin": 3471,
											"end": 3523,
											"name": "DUP2"
										},
										{
											"begin": 3471,
											"end": 3523,
											"name": "MSTORE"
										},
										{
											"begin": 3471,
											"end": 3523,
											"name": "POP"
										},
										{
											"begin": 3471,
											"end": 3523,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3471,
											"end": 3523,
											"name": "ADD"
										},
										{
											"begin": 3471,
											"end": 3523,
											"name": "SWAP2"
										},
										{
											"begin": 3471,
											"end": 3523,
											"name": "POP"
										},
										{
											"begin": 3471,
											"end": 3523,
											"name": "POP"
										},
										{
											"begin": 3471,
											"end": 3523,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3471,
											"end": 3523,
											"name": "MLOAD"
										},
										{
											"begin": 3471,
											"end": 3523,
											"name": "DUP1"
										},
										{
											"begin": 3471,
											"end": 3523,
											"name": "SWAP2"
										},
										{
											"begin": 3471,
											"end": 3523,
											"name": "SUB"
										},
										{
											"begin": 3471,
											"end": 3523,
											"name": "SWAP1"
										},
										{
											"begin": 3471,
											"end": 3523,
											"name": "REVERT"
										},
										{
											"begin": 3471,
											"end": 3523,
											"name": "tag",
											"value": "306"
										},
										{
											"begin": 3471,
											"end": 3523,
											"name": "JUMPDEST"
										},
										{
											"begin": 3558,
											"end": 3559,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3538,
											"end": 3548,
											"name": "DUP2"
										},
										{
											"begin": 3538,
											"end": 3555,
											"name": "MLOAD"
										},
										{
											"begin": 3538,
											"end": 3559,
											"name": "GT"
										},
										{
											"begin": 3534,
											"end": 3755,
											"name": "ISZERO"
										},
										{
											"begin": 3534,
											"end": 3755,
											"name": "PUSH [tag]",
											"value": "307"
										},
										{
											"begin": 3534,
											"end": 3755,
											"name": "JUMPI"
										},
										{
											"begin": 3678,
											"end": 3688,
											"name": "DUP1"
										},
										{
											"begin": 3667,
											"end": 3697,
											"name": "DUP1"
										},
										{
											"begin": 3667,
											"end": 3697,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3667,
											"end": 3697,
											"name": "ADD"
										},
										{
											"begin": 3667,
											"end": 3697,
											"name": "SWAP1"
										},
										{
											"begin": 3667,
											"end": 3697,
											"name": "MLOAD"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "308"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "308"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 3667,
											"end": 3697,
											"name": "DUP2"
										},
										{
											"begin": 3667,
											"end": 3697,
											"name": "ADD"
										},
										{
											"begin": 3667,
											"end": 3697,
											"name": "SWAP1"
										},
										{
											"begin": 3667,
											"end": 3697,
											"name": "DUP1"
										},
										{
											"begin": 3667,
											"end": 3697,
											"name": "DUP1"
										},
										{
											"begin": 3667,
											"end": 3697,
											"name": "MLOAD"
										},
										{
											"begin": 3667,
											"end": 3697,
											"name": "SWAP1"
										},
										{
											"begin": 3667,
											"end": 3697,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3667,
											"end": 3697,
											"name": "ADD"
										},
										{
											"begin": 3667,
											"end": 3697,
											"name": "SWAP1"
										},
										{
											"begin": 3667,
											"end": 3697,
											"name": "SWAP3"
										},
										{
											"begin": 3667,
											"end": 3697,
											"name": "SWAP2"
										},
										{
											"begin": 3667,
											"end": 3697,
											"name": "SWAP1"
										},
										{
											"begin": 3667,
											"end": 3697,
											"name": "POP"
										},
										{
											"begin": 3667,
											"end": 3697,
											"name": "POP"
										},
										{
											"begin": 3667,
											"end": 3697,
											"name": "POP"
										},
										{
											"begin": 3659,
											"end": 3744,
											"name": "PUSH [tag]",
											"value": "309"
										},
										{
											"begin": 3659,
											"end": 3744,
											"name": "JUMPI"
										},
										{
											"begin": 3659,
											"end": 3744,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3659,
											"end": 3744,
											"name": "MLOAD"
										},
										{
											"begin": 3659,
											"end": 3744,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3659,
											"end": 3744,
											"name": "DUP2"
										},
										{
											"begin": 3659,
											"end": 3744,
											"name": "MSTORE"
										},
										{
											"begin": 3659,
											"end": 3744,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 3659,
											"end": 3744,
											"name": "ADD"
										},
										{
											"begin": 3659,
											"end": 3744,
											"name": "DUP1"
										},
										{
											"begin": 3659,
											"end": 3744,
											"name": "DUP1"
										},
										{
											"begin": 3659,
											"end": 3744,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3659,
											"end": 3744,
											"name": "ADD"
										},
										{
											"begin": 3659,
											"end": 3744,
											"name": "DUP3"
										},
										{
											"begin": 3659,
											"end": 3744,
											"name": "DUP2"
										},
										{
											"begin": 3659,
											"end": 3744,
											"name": "SUB"
										},
										{
											"begin": 3659,
											"end": 3744,
											"name": "DUP3"
										},
										{
											"begin": 3659,
											"end": 3744,
											"name": "MSTORE"
										},
										{
											"begin": 3659,
											"end": 3744,
											"name": "PUSH",
											"value": "2A"
										},
										{
											"begin": 3659,
											"end": 3744,
											"name": "DUP2"
										},
										{
											"begin": 3659,
											"end": 3744,
											"name": "MSTORE"
										},
										{
											"begin": 3659,
											"end": 3744,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3659,
											"end": 3744,
											"name": "ADD"
										},
										{
											"begin": 3659,
											"end": 3744,
											"name": "DUP1"
										},
										{
											"begin": 3659,
											"end": 3744,
											"name": "PUSH data",
											"value": "E11AD79D1E4A7F2E5F376964CB99E8E8F7904E3FC16A109F7A7ECB9AA7956DCD"
										},
										{
											"begin": 3659,
											"end": 3744,
											"name": "PUSH",
											"value": "2A"
										},
										{
											"begin": 3659,
											"end": 3744,
											"name": "SWAP2"
										},
										{
											"begin": 3659,
											"end": 3744,
											"name": "CODECOPY"
										},
										{
											"begin": 3659,
											"end": 3744,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3659,
											"end": 3744,
											"name": "ADD"
										},
										{
											"begin": 3659,
											"end": 3744,
											"name": "SWAP2"
										},
										{
											"begin": 3659,
											"end": 3744,
											"name": "POP"
										},
										{
											"begin": 3659,
											"end": 3744,
											"name": "POP"
										},
										{
											"begin": 3659,
											"end": 3744,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3659,
											"end": 3744,
											"name": "MLOAD"
										},
										{
											"begin": 3659,
											"end": 3744,
											"name": "DUP1"
										},
										{
											"begin": 3659,
											"end": 3744,
											"name": "SWAP2"
										},
										{
											"begin": 3659,
											"end": 3744,
											"name": "SUB"
										},
										{
											"begin": 3659,
											"end": 3744,
											"name": "SWAP1"
										},
										{
											"begin": 3659,
											"end": 3744,
											"name": "REVERT"
										},
										{
											"begin": 3659,
											"end": 3744,
											"name": "tag",
											"value": "309"
										},
										{
											"begin": 3659,
											"end": 3744,
											"name": "JUMPDEST"
										},
										{
											"begin": 3534,
											"end": 3755,
											"name": "tag",
											"value": "307"
										},
										{
											"begin": 3534,
											"end": 3755,
											"name": "JUMPDEST"
										},
										{
											"begin": 2666,
											"end": 3761,
											"name": "POP"
										},
										{
											"begin": 2666,
											"end": 3761,
											"name": "POP"
										},
										{
											"begin": 2666,
											"end": 3761,
											"name": "POP"
										},
										{
											"begin": 2666,
											"end": 3761,
											"name": "POP"
										},
										{
											"begin": 2666,
											"end": 3761,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 3718,
											"end": 4056,
											"name": "tag",
											"value": "272"
										},
										{
											"begin": 3718,
											"end": 4056,
											"name": "JUMPDEST"
										},
										{
											"begin": 3804,
											"end": 3811,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3901,
											"end": 3902,
											"name": "DUP1"
										},
										{
											"begin": 3897,
											"end": 3898,
											"name": "DUP4"
										},
										{
											"begin": 3897,
											"end": 3902,
											"name": "GT"
										},
										{
											"begin": 3904,
											"end": 3916,
											"name": "DUP3"
										},
										{
											"begin": 3889,
											"end": 3917,
											"name": "SWAP1"
										},
										{
											"begin": 3889,
											"end": 3917,
											"name": "PUSH [tag]",
											"value": "311"
										},
										{
											"begin": 3889,
											"end": 3917,
											"name": "JUMPI"
										},
										{
											"begin": 3889,
											"end": 3917,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3889,
											"end": 3917,
											"name": "MLOAD"
										},
										{
											"begin": 3889,
											"end": 3917,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3889,
											"end": 3917,
											"name": "DUP2"
										},
										{
											"begin": 3889,
											"end": 3917,
											"name": "MSTORE"
										},
										{
											"begin": 3889,
											"end": 3917,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 3889,
											"end": 3917,
											"name": "ADD"
										},
										{
											"begin": 3889,
											"end": 3917,
											"name": "DUP1"
										},
										{
											"begin": 3889,
											"end": 3917,
											"name": "DUP1"
										},
										{
											"begin": 3889,
											"end": 3917,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3889,
											"end": 3917,
											"name": "ADD"
										},
										{
											"begin": 3889,
											"end": 3917,
											"name": "DUP3"
										},
										{
											"begin": 3889,
											"end": 3917,
											"name": "DUP2"
										},
										{
											"begin": 3889,
											"end": 3917,
											"name": "SUB"
										},
										{
											"begin": 3889,
											"end": 3917,
											"name": "DUP3"
										},
										{
											"begin": 3889,
											"end": 3917,
											"name": "MSTORE"
										},
										{
											"begin": 3889,
											"end": 3917,
											"name": "DUP4"
										},
										{
											"begin": 3889,
											"end": 3917,
											"name": "DUP2"
										},
										{
											"begin": 3889,
											"end": 3917,
											"name": "DUP2"
										},
										{
											"begin": 3889,
											"end": 3917,
											"name": "MLOAD"
										},
										{
											"begin": 3889,
											"end": 3917,
											"name": "DUP2"
										},
										{
											"begin": 3889,
											"end": 3917,
											"name": "MSTORE"
										},
										{
											"begin": 3889,
											"end": 3917,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3889,
											"end": 3917,
											"name": "ADD"
										},
										{
											"begin": 3889,
											"end": 3917,
											"name": "SWAP2"
										},
										{
											"begin": 3889,
											"end": 3917,
											"name": "POP"
										},
										{
											"begin": 3889,
											"end": 3917,
											"name": "DUP1"
										},
										{
											"begin": 3889,
											"end": 3917,
											"name": "MLOAD"
										},
										{
											"begin": 3889,
											"end": 3917,
											"name": "SWAP1"
										},
										{
											"begin": 3889,
											"end": 3917,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3889,
											"end": 3917,
											"name": "ADD"
										},
										{
											"begin": 3889,
											"end": 3917,
											"name": "SWAP1"
										},
										{
											"begin": 3889,
											"end": 3917,
											"name": "DUP1"
										},
										{
											"begin": 3889,
											"end": 3917,
											"name": "DUP4"
										},
										{
											"begin": 3889,
											"end": 3917,
											"name": "DUP4"
										},
										{
											"begin": 23,
											"end": 24,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "312"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP4"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "DUP2"
										},
										{
											"begin": 27,
											"end": 37,
											"name": "LT"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "314"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI"
										},
										{
											"begin": 99,
											"end": 100,
											"name": "DUP1"
										},
										{
											"begin": 94,
											"end": 97,
											"name": "DUP3"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 84,
											"end": 102,
											"name": "MLOAD"
										},
										{
											"begin": 80,
											"end": 81,
											"name": "DUP2"
										},
										{
											"begin": 75,
											"end": 78,
											"name": "DUP5"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "ADD"
										},
										{
											"begin": 64,
											"end": 103,
											"name": "MSTORE"
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 49,
											"end": 50,
											"name": "DUP2"
										},
										{
											"begin": 45,
											"end": 55,
											"name": "ADD"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "SWAP1"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "POP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "312"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "314"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "POP"
										},
										{
											"begin": 3889,
											"end": 3917,
											"name": "POP"
										},
										{
											"begin": 3889,
											"end": 3917,
											"name": "POP"
										},
										{
											"begin": 3889,
											"end": 3917,
											"name": "POP"
										},
										{
											"begin": 3889,
											"end": 3917,
											"name": "SWAP1"
										},
										{
											"begin": 3889,
											"end": 3917,
											"name": "POP"
										},
										{
											"begin": 3889,
											"end": 3917,
											"name": "SWAP1"
										},
										{
											"begin": 3889,
											"end": 3917,
											"name": "DUP2"
										},
										{
											"begin": 3889,
											"end": 3917,
											"name": "ADD"
										},
										{
											"begin": 3889,
											"end": 3917,
											"name": "SWAP1"
										},
										{
											"begin": 3889,
											"end": 3917,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 3889,
											"end": 3917,
											"name": "AND"
										},
										{
											"begin": 3889,
											"end": 3917,
											"name": "DUP1"
										},
										{
											"begin": 3889,
											"end": 3917,
											"name": "ISZERO"
										},
										{
											"begin": 3889,
											"end": 3917,
											"name": "PUSH [tag]",
											"value": "315"
										},
										{
											"begin": 3889,
											"end": 3917,
											"name": "JUMPI"
										},
										{
											"begin": 3889,
											"end": 3917,
											"name": "DUP1"
										},
										{
											"begin": 3889,
											"end": 3917,
											"name": "DUP3"
										},
										{
											"begin": 3889,
											"end": 3917,
											"name": "SUB"
										},
										{
											"begin": 3889,
											"end": 3917,
											"name": "DUP1"
										},
										{
											"begin": 3889,
											"end": 3917,
											"name": "MLOAD"
										},
										{
											"begin": 3889,
											"end": 3917,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 3889,
											"end": 3917,
											"name": "DUP4"
										},
										{
											"begin": 3889,
											"end": 3917,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3889,
											"end": 3917,
											"name": "SUB"
										},
										{
											"begin": 3889,
											"end": 3917,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 3889,
											"end": 3917,
											"name": "EXP"
										},
										{
											"begin": 3889,
											"end": 3917,
											"name": "SUB"
										},
										{
											"begin": 3889,
											"end": 3917,
											"name": "NOT"
										},
										{
											"begin": 3889,
											"end": 3917,
											"name": "AND"
										},
										{
											"begin": 3889,
											"end": 3917,
											"name": "DUP2"
										},
										{
											"begin": 3889,
											"end": 3917,
											"name": "MSTORE"
										},
										{
											"begin": 3889,
											"end": 3917,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3889,
											"end": 3917,
											"name": "ADD"
										},
										{
											"begin": 3889,
											"end": 3917,
											"name": "SWAP2"
										},
										{
											"begin": 3889,
											"end": 3917,
											"name": "POP"
										},
										{
											"begin": 3889,
											"end": 3917,
											"name": "tag",
											"value": "315"
										},
										{
											"begin": 3889,
											"end": 3917,
											"name": "JUMPDEST"
										},
										{
											"begin": 3889,
											"end": 3917,
											"name": "POP"
										},
										{
											"begin": 3889,
											"end": 3917,
											"name": "SWAP3"
										},
										{
											"begin": 3889,
											"end": 3917,
											"name": "POP"
										},
										{
											"begin": 3889,
											"end": 3917,
											"name": "POP"
										},
										{
											"begin": 3889,
											"end": 3917,
											"name": "POP"
										},
										{
											"begin": 3889,
											"end": 3917,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3889,
											"end": 3917,
											"name": "MLOAD"
										},
										{
											"begin": 3889,
											"end": 3917,
											"name": "DUP1"
										},
										{
											"begin": 3889,
											"end": 3917,
											"name": "SWAP2"
										},
										{
											"begin": 3889,
											"end": 3917,
											"name": "SUB"
										},
										{
											"begin": 3889,
											"end": 3917,
											"name": "SWAP1"
										},
										{
											"begin": 3889,
											"end": 3917,
											"name": "REVERT"
										},
										{
											"begin": 3889,
											"end": 3917,
											"name": "tag",
											"value": "311"
										},
										{
											"begin": 3889,
											"end": 3917,
											"name": "JUMPDEST"
										},
										{
											"begin": 3889,
											"end": 3917,
											"name": "POP"
										},
										{
											"begin": 3927,
											"end": 3936,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3943,
											"end": 3944,
											"name": "DUP4"
										},
										{
											"begin": 3939,
											"end": 3940,
											"name": "DUP6"
										},
										{
											"begin": 3939,
											"end": 3944,
											"name": "DUP2"
										},
										{
											"begin": 3939,
											"end": 3944,
											"name": "PUSH [tag]",
											"value": "316"
										},
										{
											"begin": 3939,
											"end": 3944,
											"name": "JUMPI"
										},
										{
											"begin": 3939,
											"end": 3944,
											"name": "INVALID"
										},
										{
											"begin": 3939,
											"end": 3944,
											"name": "tag",
											"value": "316"
										},
										{
											"begin": 3939,
											"end": 3944,
											"name": "JUMPDEST"
										},
										{
											"begin": 3939,
											"end": 3944,
											"name": "DIV"
										},
										{
											"begin": 3927,
											"end": 3944,
											"name": "SWAP1"
										},
										{
											"begin": 3927,
											"end": 3944,
											"name": "POP"
										},
										{
											"begin": 4048,
											"end": 4049,
											"name": "DUP1"
										},
										{
											"begin": 4041,
											"end": 4049,
											"name": "SWAP2"
										},
										{
											"begin": 4041,
											"end": 4049,
											"name": "POP"
										},
										{
											"begin": 4041,
											"end": 4049,
											"name": "POP"
										},
										{
											"begin": 3718,
											"end": 4056,
											"name": "SWAP4"
										},
										{
											"begin": 3718,
											"end": 4056,
											"name": "SWAP3"
										},
										{
											"begin": 3718,
											"end": 4056,
											"name": "POP"
										},
										{
											"begin": 3718,
											"end": 4056,
											"name": "POP"
										},
										{
											"begin": 3718,
											"end": 4056,
											"name": "POP"
										},
										{
											"begin": 3718,
											"end": 4056,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1732,
											"end": 1919,
											"name": "tag",
											"value": "293"
										},
										{
											"begin": 1732,
											"end": 1919,
											"name": "JUMPDEST"
										},
										{
											"begin": 1818,
											"end": 1825,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1850,
											"end": 1851,
											"name": "DUP4"
										},
										{
											"begin": 1845,
											"end": 1846,
											"name": "DUP4"
										},
										{
											"begin": 1845,
											"end": 1851,
											"name": "GT"
										},
										{
											"begin": 1845,
											"end": 1851,
											"name": "ISZERO"
										},
										{
											"begin": 1853,
											"end": 1865,
											"name": "DUP3"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "SWAP1"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "PUSH [tag]",
											"value": "318"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "JUMPI"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "MLOAD"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "DUP2"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "MSTORE"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "ADD"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "DUP1"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "DUP1"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "ADD"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "DUP3"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "DUP2"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "SUB"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "DUP3"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "MSTORE"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "DUP4"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "DUP2"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "DUP2"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "MLOAD"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "DUP2"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "MSTORE"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "ADD"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "SWAP2"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "POP"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "DUP1"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "MLOAD"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "SWAP1"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "ADD"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "SWAP1"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "DUP1"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "DUP4"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "DUP4"
										},
										{
											"begin": 23,
											"end": 24,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "319"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP4"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "DUP2"
										},
										{
											"begin": 27,
											"end": 37,
											"name": "LT"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "321"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI"
										},
										{
											"begin": 99,
											"end": 100,
											"name": "DUP1"
										},
										{
											"begin": 94,
											"end": 97,
											"name": "DUP3"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 84,
											"end": 102,
											"name": "MLOAD"
										},
										{
											"begin": 80,
											"end": 81,
											"name": "DUP2"
										},
										{
											"begin": 75,
											"end": 78,
											"name": "DUP5"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "ADD"
										},
										{
											"begin": 64,
											"end": 103,
											"name": "MSTORE"
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 49,
											"end": 50,
											"name": "DUP2"
										},
										{
											"begin": 45,
											"end": 55,
											"name": "ADD"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "SWAP1"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "POP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "319"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "321"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "POP"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "POP"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "POP"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "POP"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "SWAP1"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "POP"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "SWAP1"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "DUP2"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "ADD"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "SWAP1"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "AND"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "DUP1"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "ISZERO"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "PUSH [tag]",
											"value": "322"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "JUMPI"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "DUP1"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "DUP3"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "SUB"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "DUP1"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "MLOAD"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "DUP4"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "SUB"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "EXP"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "SUB"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "NOT"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "AND"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "DUP2"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "MSTORE"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "ADD"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "SWAP2"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "POP"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "tag",
											"value": "322"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "JUMPDEST"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "POP"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "SWAP3"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "POP"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "POP"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "POP"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "MLOAD"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "DUP1"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "SWAP2"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "SUB"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "SWAP1"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "REVERT"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "tag",
											"value": "318"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "JUMPDEST"
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "POP"
										},
										{
											"begin": 1876,
											"end": 1885,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1892,
											"end": 1893,
											"name": "DUP4"
										},
										{
											"begin": 1888,
											"end": 1889,
											"name": "DUP6"
										},
										{
											"begin": 1888,
											"end": 1893,
											"name": "SUB"
										},
										{
											"begin": 1876,
											"end": 1893,
											"name": "SWAP1"
										},
										{
											"begin": 1876,
											"end": 1893,
											"name": "POP"
										},
										{
											"begin": 1911,
											"end": 1912,
											"name": "DUP1"
										},
										{
											"begin": 1904,
											"end": 1912,
											"name": "SWAP2"
										},
										{
											"begin": 1904,
											"end": 1912,
											"name": "POP"
										},
										{
											"begin": 1904,
											"end": 1912,
											"name": "POP"
										},
										{
											"begin": 1732,
											"end": 1919,
											"name": "SWAP4"
										},
										{
											"begin": 1732,
											"end": 1919,
											"name": "SWAP3"
										},
										{
											"begin": 1732,
											"end": 1919,
											"name": "POP"
										},
										{
											"begin": 1732,
											"end": 1919,
											"name": "POP"
										},
										{
											"begin": 1732,
											"end": 1919,
											"name": "POP"
										},
										{
											"begin": 1732,
											"end": 1919,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 686,
											"end": 1296,
											"name": "tag",
											"value": "299"
										},
										{
											"begin": 686,
											"end": 1296,
											"name": "JUMPDEST"
										},
										{
											"begin": 746,
											"end": 750,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1004,
											"end": 1020,
											"name": "DUP1"
										},
										{
											"begin": 1030,
											"end": 1049,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1052,
											"end": 1118,
											"name": "PUSH",
											"value": "C5D2460186F7233C927E7DB2DCC703C0E500B653CA82273B7BFAD8045D85A470"
										},
										{
											"begin": 1030,
											"end": 1118,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1030,
											"end": 1118,
											"name": "SHL"
										},
										{
											"begin": 1030,
											"end": 1118,
											"name": "SWAP1"
										},
										{
											"begin": 1030,
											"end": 1118,
											"name": "POP"
										},
										{
											"begin": 1219,
											"end": 1226,
											"name": "DUP4"
										},
										{
											"begin": 1207,
											"end": 1227,
											"name": "EXTCODEHASH"
										},
										{
											"begin": 1195,
											"end": 1227,
											"name": "SWAP2"
										},
										{
											"begin": 1195,
											"end": 1227,
											"name": "POP"
										},
										{
											"begin": 1258,
											"end": 1269,
											"name": "DUP1"
										},
										{
											"begin": 1246,
											"end": 1254,
											"name": "DUP3"
										},
										{
											"begin": 1246,
											"end": 1269,
											"name": "EQ"
										},
										{
											"begin": 1246,
											"end": 1269,
											"name": "ISZERO"
										},
										{
											"begin": 1246,
											"end": 1288,
											"name": "DUP1"
										},
										{
											"begin": 1246,
											"end": 1288,
											"name": "ISZERO"
										},
										{
											"begin": 1246,
											"end": 1288,
											"name": "PUSH [tag]",
											"value": "324"
										},
										{
											"begin": 1246,
											"end": 1288,
											"name": "JUMPI"
										},
										{
											"begin": 1246,
											"end": 1288,
											"name": "POP"
										},
										{
											"begin": 1285,
											"end": 1288,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1273,
											"end": 1288,
											"name": "DUP1"
										},
										{
											"begin": 1273,
											"end": 1288,
											"name": "SHL"
										},
										{
											"begin": 1273,
											"end": 1281,
											"name": "DUP3"
										},
										{
											"begin": 1273,
											"end": 1288,
											"name": "EQ"
										},
										{
											"begin": 1273,
											"end": 1288,
											"name": "ISZERO"
										},
										{
											"begin": 1246,
											"end": 1288,
											"name": "tag",
											"value": "324"
										},
										{
											"begin": 1246,
											"end": 1288,
											"name": "JUMPDEST"
										},
										{
											"begin": 1238,
											"end": 1289,
											"name": "SWAP3"
										},
										{
											"begin": 1238,
											"end": 1289,
											"name": "POP"
										},
										{
											"begin": 1238,
											"end": 1289,
											"name": "POP"
										},
										{
											"begin": 1238,
											"end": 1289,
											"name": "POP"
										},
										{
											"begin": 686,
											"end": 1296,
											"name": "SWAP2"
										},
										{
											"begin": 686,
											"end": 1296,
											"name": "SWAP1"
										},
										{
											"begin": 686,
											"end": 1296,
											"name": "POP"
										},
										{
											"begin": 686,
											"end": 1296,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1044,
											"end": 8905,
											"name": "tag",
											"value": "76"
										},
										{
											"begin": 1044,
											"end": 8905,
											"name": "JUMPDEST"
										},
										{
											"begin": 1044,
											"end": 8905,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1044,
											"end": 8905,
											"name": "MLOAD"
										},
										{
											"begin": 1044,
											"end": 8905,
											"name": "DUP1"
										},
										{
											"begin": 1044,
											"end": 8905,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 1044,
											"end": 8905,
											"name": "ADD"
										},
										{
											"begin": 1044,
											"end": 8905,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1044,
											"end": 8905,
											"name": "MSTORE"
										},
										{
											"begin": 1044,
											"end": 8905,
											"name": "DUP1"
										},
										{
											"begin": 1044,
											"end": 8905,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1044,
											"end": 8905,
											"name": "SWAP1"
										},
										{
											"begin": 29,
											"end": 31,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 21,
											"end": 27,
											"name": "DUP3"
										},
										{
											"begin": 17,
											"end": 32,
											"name": "MUL"
										},
										{
											"begin": 117,
											"end": 121,
											"name": "DUP1"
										},
										{
											"begin": 105,
											"end": 115,
											"name": "CODESIZE"
										},
										{
											"begin": 97,
											"end": 103,
											"name": "DUP4"
										},
										{
											"begin": 88,
											"end": 122,
											"name": "CODECOPY"
										},
										{
											"begin": 148,
											"end": 152,
											"name": "DUP1"
										},
										{
											"begin": 140,
											"end": 146,
											"name": "DUP3"
										},
										{
											"begin": 136,
											"end": 153,
											"name": "ADD"
										},
										{
											"begin": 126,
											"end": 153,
											"name": "SWAP2"
										},
										{
											"begin": 126,
											"end": 153,
											"name": "POP"
										},
										{
											"begin": 0,
											"end": 157,
											"name": "POP"
										},
										{
											"begin": 1044,
											"end": 8905,
											"name": "SWAP1"
										},
										{
											"begin": 1044,
											"end": 8905,
											"name": "POP"
										},
										{
											"begin": 1044,
											"end": 8905,
											"name": "POP"
										},
										{
											"begin": 1044,
											"end": 8905,
											"name": "SWAP1"
										},
										{
											"begin": 1044,
											"end": 8905,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1044,
											"end": 8905,
											"name": "tag",
											"value": "113"
										},
										{
											"begin": 1044,
											"end": 8905,
											"name": "JUMPDEST"
										},
										{
											"begin": 1044,
											"end": 8905,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1044,
											"end": 8905,
											"name": "MLOAD"
										},
										{
											"begin": 1044,
											"end": 8905,
											"name": "DUP1"
										},
										{
											"begin": 1044,
											"end": 8905,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 1044,
											"end": 8905,
											"name": "ADD"
										},
										{
											"begin": 1044,
											"end": 8905,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1044,
											"end": 8905,
											"name": "MSTORE"
										},
										{
											"begin": 1044,
											"end": 8905,
											"name": "DUP1"
										},
										{
											"begin": 1044,
											"end": 8905,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1044,
											"end": 8905,
											"name": "SWAP1"
										},
										{
											"begin": 29,
											"end": 31,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 21,
											"end": 27,
											"name": "DUP3"
										},
										{
											"begin": 17,
											"end": 32,
											"name": "MUL"
										},
										{
											"begin": 117,
											"end": 121,
											"name": "DUP1"
										},
										{
											"begin": 105,
											"end": 115,
											"name": "CODESIZE"
										},
										{
											"begin": 97,
											"end": 103,
											"name": "DUP4"
										},
										{
											"begin": 88,
											"end": 122,
											"name": "CODECOPY"
										},
										{
											"begin": 148,
											"end": 152,
											"name": "DUP1"
										},
										{
											"begin": 140,
											"end": 146,
											"name": "DUP3"
										},
										{
											"begin": 136,
											"end": 153,
											"name": "ADD"
										},
										{
											"begin": 126,
											"end": 153,
											"name": "SWAP2"
										},
										{
											"begin": 126,
											"end": 153,
											"name": "POP"
										},
										{
											"begin": 0,
											"end": 157,
											"name": "POP"
										},
										{
											"begin": 1044,
											"end": 8905,
											"name": "SWAP1"
										},
										{
											"begin": 1044,
											"end": 8905,
											"name": "POP"
										},
										{
											"begin": 1044,
											"end": 8905,
											"name": "POP"
										},
										{
											"begin": 1044,
											"end": 8905,
											"name": "SWAP1"
										},
										{
											"begin": 1044,
											"end": 8905,
											"name": "JUMP",
											"value": "[out]"
										}
									],
									".data": {
										"245F15FF17F551913A7A18385165551503906A406F905AC1C2437281A7CD0CFE": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
										"2C2CDE26D907EDEF0275DD60C1D3730B459D629AEA5E0144E75833E4AC66B41": "496e636f7272656374206465706f73697420636f6e74726163742061646472657373",
										"9113BB53C2876A3805B2C9242029423FC540A728243CE887AB24C82CF119FBA3": "536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77",
										"9FBBA6C4DCAC9134893B633B9564F36435B3F927C1D5FA152C5C14B20CECB1A4": "436f6e747261637420696e7374616e63652068617320616c7265616479206265656e20696e697469616c697a6564",
										"E11AD79D1E4A7F2E5F376964CB99E8E8F7904E3FC16A109F7A7ECB9AA7956DCD": "5361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564",
										"EF945DDB1BFDC0DA870FEB4560D868B047642B4AC7F2FB7F8B7C51CB4A411E25": "5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f20746f206e6f6e2d7a65726f20616c6c6f77616e6365"
									}
								}
							}
						},
						"methodIdentifiers": {
							"balanceOfAll()": "208e509f",
							"curveFi_CRVMinter()": "7c241146",
							"curveFi_CRVToken()": "8141d266",
							"curveFi_Deposit()": "be873f50",
							"curveFi_LPGauge()": "e011262a",
							"curveFi_LPToken()": "a3477c36",
							"curveFi_Swap()": "1c600416",
							"curveLPTokenBalance()": "97aa80d5",
							"curveLPTokenStaked()": "44f9c395",
							"curveLPTokenUnstaked()": "dfda714a",
							"initialize(uint256)": "fe4b84df",
							"isOwner()": "8f32d59b",
							"multiStepDeposit(uint256[4])": "14a19aec",
							"multiStepWithdraw(uint256[4])": "38eda370",
							"normalizedBalance()": "628cb95e",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"setup(address,address,address)": "77b8b1c7",
							"transferOwnership(address)": "f2fde38b",
							"x()": "0c55699c"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.12+commit.7709ece9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[],\"name\":\"balanceOfAll\",\"outputs\":[{\"internalType\":\"uint256[4]\",\"name\":\"balances\",\"type\":\"uint256[4]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"curveFi_CRVMinter\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"curveFi_CRVToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"curveFi_Deposit\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"curveFi_LPGauge\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"curveFi_LPToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"curveFi_Swap\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"curveLPTokenBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"curveLPTokenStaked\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"curveLPTokenUnstaked\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_x\",\"type\":\"uint256\"}],\"name\":\"initialize\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isOwner\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256[4]\",\"name\":\"_amounts\",\"type\":\"uint256[4]\"}],\"name\":\"multiStepDeposit\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256[4]\",\"name\":\"_amounts\",\"type\":\"uint256[4]\"}],\"name\":\"multiStepWithdraw\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"normalizedBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_depositContract\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_gaugeContract\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_minterContract\",\"type\":\"address\"}],\"name\":\"setup\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"x\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"isOwner()\":{\"details\":\"Returns true if the caller is the current owner.\"},\"multiStepDeposit(uint256[4])\":{\"params\":{\"_amounts\":\"Array of amounts for CurveFI stablecoins in pool (denormalized to token decimals)\"}},\"multiStepWithdraw(uint256[4])\":{\"params\":{\"_amounts\":\"Array of amounts for CurveFI stablecoins in pool (denormalized to token decimals)\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.     * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"setup(address,address,address)\":{\"params\":{\"_depositContract\":\"CurveFi Deposit contract for Y-pool\",\"_gaugeContract\":\"CurveFi Gauge contract for Y-pool\",\"_minterContract\":\"CurveFi CRV minter\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}}},\"userdoc\":{\"methods\":{\"balanceOfAll()\":{\"notice\":\"Balances of stablecoins available for withdraw\"},\"curveLPTokenBalance()\":{\"notice\":\"Get full amount of Curve LP tokens available for this contract\"},\"curveLPTokenStaked()\":{\"notice\":\"Get amount of CurveFi LP tokens staked in the Gauge\"},\"curveLPTokenUnstaked()\":{\"notice\":\"Get amount of unstaked CurveFi LP tokens (which lay on this contract)\"},\"multiStepDeposit(uint256[4])\":{\"notice\":\"Deposits 4 stablecoins (registered in Curve.Fi Y pool)\"},\"multiStepWithdraw(uint256[4])\":{\"notice\":\"Withdraws 4 stablecoins (registered in Curve.Fi Y pool)\"},\"normalizedBalance()\":{\"notice\":\"Balances of stablecoins available for withdraw normalized to 18 decimals\"},\"setup(address,address,address)\":{\"notice\":\"Set CurveFi contracts addresses\"}}}},\"settings\":{\"compilationTarget\":{\"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":\"MoneyToCurve\"},\"evmVersion\":\"petersburg\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol\":{\"keccak256\":\"0x291ca664060cfecc369f8ddb92fa2acc693b76281a40ea963217d9cc18799e0c\",\"urls\":[\"bzz-raw://5b47858612f1d800088248d9b38aacc7c4595ed90d9d28ec1b0a96440eff3731\",\"dweb:/ipfs/QmQuX7h15oiWouiMhbyFcHMuD8RSAzrwq34pxnaQi9AZPA\"]},\"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/curvefi/ICurveFi_DepositY.sol\":{\"keccak256\":\"0x726cab744d29f92cf90962481d835e4b66da2af9bd8c982e646c704523872d9e\",\"urls\":[\"bzz-raw://51fea6b25cb387bf1f2cd8cfd975a3e1d1b4a0405019539e803b82b853f56d9b\",\"dweb:/ipfs/QmbAA8scXV8cTpsaz4Sro8deuwQEYzuGb9ywZe8jfCWNEK\"]},\"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/curvefi/ICurveFi_Gauge.sol\":{\"keccak256\":\"0xa2896f850a80a13f330e06cd808eca2d99f7815d0f203c03942c548ffdc1f375\",\"urls\":[\"bzz-raw://4f0bf1da365395527e16f10670a68d72c5805becd05e4561ffd6d0919a5135a2\",\"dweb:/ipfs/QmYK3adWE3rTmzWvCkrK6rmdipGAWQFgL665YfQhQZDa9D\"]},\"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/curvefi/ICurveFi_Minter.sol\":{\"keccak256\":\"0x61a0d1906924eef5663bef919befcb2eb409a70a9c57785ac212de3840609aa0\",\"urls\":[\"bzz-raw://73a1b7fd95be9e905967292c30be8a0e94c4be55fd0651f54bcb573cb894f44b\",\"dweb:/ipfs/QmeVNZsh8s4VBRHi29obn9DLG8xSRGVJDSXfC5W8PowVnM\"]},\"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/curvefi/ICurveFi_SwapY.sol\":{\"keccak256\":\"0x5e5ed5f48da009f3119d5fba3ca11630f520d9a9cb2d52d816ecf3e87e56261c\",\"urls\":[\"bzz-raw://5c395930d945a30345dcc2ad0bcd69f04ff6d3d2c07f85b702488255fd92e410\",\"dweb:/ipfs/QmYFMTXVcDZV26szyenPsnyhEW4Gmi5HWs72pqaxywrZyJ\"]},\"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/curvefi/IYERC20.sol\":{\"keccak256\":\"0x6b9a2bf14c31d708d73d44443ac9237957f3cf4caddc119eee9f0fc422fae0ee\",\"urls\":[\"bzz-raw://8223df809aa694148da8415c4676465f8b09d55f3f0fe1436e47d8b2b7e2229e\",\"dweb:/ipfs/QmQYPusRFCaGexDr2Ufrv2icVpzD1jGr5uj7gi1sScDaDb\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/GSN/Context.sol\":{\"keccak256\":\"0x90a3995645af7562d84b9d69363ffa5ae7217714ab61e951bf7bc450f40e4061\",\"urls\":[\"bzz-raw://216ef9d6b614db4eb46970b4e84903f2534a45572dd30a79f0041f1a5830f436\",\"dweb:/ipfs/QmNPrJ4MWKUAWzKXpUqeyKRUfosaoANZAqXgvepdrCwZAG\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x640b6dee7a4b830bdfd52b5031a07fc2b12209f5b2e29e5d364a7d37f69d8076\",\"urls\":[\"bzz-raw://31113152e1ddb78fe7a4197f247591ca894e93f916867beb708d8e747b6cc74f\",\"dweb:/ipfs/QmbZaJyXdpsYGykVhHH9qpVGQg9DGCxE2QufbCUy3daTgq\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/ownership/Ownable.sol\":{\"keccak256\":\"0x6fb9d7889769d7cc161225f9ef7a90e468ba9788b253816f8d8b6894d3472c24\",\"urls\":[\"bzz-raw://cf4c00fc3c37cc5acf0c82ec6fd97bab67d72c2567fdc0ebf023d9c09b30a08e\",\"dweb:/ipfs/Qmb7TChG6DsEDX7LooJ4vmxot19f7VXX8S1zUGPeJTWbwZ\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20Detailed.sol\":{\"keccak256\":\"0x4a3a810b7ebe742e897e1fd428b3eeed2196d3acea58eaf9c566ed10d545d2ed\",\"urls\":[\"bzz-raw://28d03f328e19e4099d5013de0649afaeaabac1a614e130767ab1cb4aca9775b6\",\"dweb:/ipfs/Qmb9iW7yNuYehB2NfhRMs9TakqbLVQhBhmGMkaDZ5g1Eb4\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe5bb0f57cff3e299f360052ba50f1ea0fff046df2be070b6943e0e3c3fdad8a9\",\"urls\":[\"bzz-raw://59fd025151435da35faa8093a5c7a17de02de9d08ad27275c5cdf05050820d91\",\"dweb:/ipfs/QmQMvwEcPhoRXzbXyrdoeRtvLoifUW9Qh7Luho7bmUPRkc\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/SafeERC20.sol\":{\"keccak256\":\"0x6f2c9955d65c522b80f4b8792f076512d2df947d2112cbc4d98a4781ed42ede2\",\"urls\":[\"bzz-raw://7d8ec81683520c06baeef3f7e06cd82bd6fd5fa611f26857f475f6c829540aff\",\"dweb:/ipfs/QmTDkFzKnrpiV1UKnSoiZAHPuguWzokrr4pFbSPvyaSo56\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/utils/Address.sol\":{\"keccak256\":\"0x1a8e5072509c5ea7365eb1d48030b9be865140c8fb779968da0a459a0e174a11\",\"urls\":[\"bzz-raw://03335b7b07c7c8c8d613cfdd8ec39a0b5ec133ee510bf2fe6cc5a496767bef4b\",\"dweb:/ipfs/Qmebp4nzPja645c9yXSdJkGq96oU3am3LUnG2K3R7XxyKf\"]},\"https://github.com/OpenZeppelin/openzeppelin-upgrades/blob/master/packages/core/contracts/Initializable.sol\":{\"keccak256\":\"0x516c704636466430b300e9290312d225a3e23ac50096a74a80d7830f0701e361\",\"urls\":[\"bzz-raw://04be950324a573c0153167098bfda7e171c1167fd4ee82a8f62a134f2b35806e\",\"dweb:/ipfs/QmRg3kFLFTeCFzmwvaT66cr4g9KUfihQm7U4h8XKxEis4D\"]}},\"version\":1}",
					"userdoc": {
						"methods": {
							"balanceOfAll()": {
								"notice": "Balances of stablecoins available for withdraw"
							},
							"curveLPTokenBalance()": {
								"notice": "Get full amount of Curve LP tokens available for this contract"
							},
							"curveLPTokenStaked()": {
								"notice": "Get amount of CurveFi LP tokens staked in the Gauge"
							},
							"curveLPTokenUnstaked()": {
								"notice": "Get amount of unstaked CurveFi LP tokens (which lay on this contract)"
							},
							"multiStepDeposit(uint256[4])": {
								"notice": "Deposits 4 stablecoins (registered in Curve.Fi Y pool)"
							},
							"multiStepWithdraw(uint256[4])": {
								"notice": "Withdraws 4 stablecoins (registered in Curve.Fi Y pool)"
							},
							"normalizedBalance()": {
								"notice": "Balances of stablecoins available for withdraw normalized to 18 decimals"
							},
							"setup(address,address,address)": {
								"notice": "Set CurveFi contracts addresses"
							}
						}
					}
				}
			},
			"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/curvefi/ICurveFi_DepositY.sol": {
				"ICurveFi_DepositY": {
					"abi": [
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "uint256[4]",
									"name": "uamounts",
									"type": "uint256[4]"
								},
								{
									"internalType": "uint256",
									"name": "min_mint_amount",
									"type": "uint256"
								}
							],
							"name": "add_liquidity",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "int128",
									"name": "i",
									"type": "int128"
								}
							],
							"name": "coins",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "curve",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								},
								{
									"internalType": "uint256[4]",
									"name": "min_uamounts",
									"type": "uint256[4]"
								}
							],
							"name": "remove_liquidity",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "uint256[4]",
									"name": "uamounts",
									"type": "uint256[4]"
								},
								{
									"internalType": "uint256",
									"name": "max_burn_amount",
									"type": "uint256"
								}
							],
							"name": "remove_liquidity_imbalance",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "token",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "int128",
									"name": "i",
									"type": "int128"
								}
							],
							"name": "underlying_coins",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "underlying_coins",
							"outputs": [
								{
									"internalType": "address[4]",
									"name": "",
									"type": "address[4]"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for Curve.Fi deposit contract for Y-pool.See original implementation in official repository: https://github.com/curvefi/curve-contract/blob/master/contracts/pools/y/DepositY.vy",
						"methods": {}
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"add_liquidity(uint256[4],uint256)": "029b2f34",
							"coins(int128)": "23746eb8",
							"curve()": "7165485d",
							"remove_liquidity(uint256,uint256[4])": "7d49d875",
							"remove_liquidity_imbalance(uint256[4],uint256)": "18a7bd76",
							"token()": "fc0c546a",
							"underlying_coins()": "fb6d3a89",
							"underlying_coins(int128)": "b739953e"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.12+commit.7709ece9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256[4]\",\"name\":\"uamounts\",\"type\":\"uint256[4]\"},{\"internalType\":\"uint256\",\"name\":\"min_mint_amount\",\"type\":\"uint256\"}],\"name\":\"add_liquidity\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"int128\",\"name\":\"i\",\"type\":\"int128\"}],\"name\":\"coins\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"curve\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256[4]\",\"name\":\"min_uamounts\",\"type\":\"uint256[4]\"}],\"name\":\"remove_liquidity\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256[4]\",\"name\":\"uamounts\",\"type\":\"uint256[4]\"},{\"internalType\":\"uint256\",\"name\":\"max_burn_amount\",\"type\":\"uint256\"}],\"name\":\"remove_liquidity_imbalance\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"int128\",\"name\":\"i\",\"type\":\"int128\"}],\"name\":\"underlying_coins\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"underlying_coins\",\"outputs\":[{\"internalType\":\"address[4]\",\"name\":\"\",\"type\":\"address[4]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for Curve.Fi deposit contract for Y-pool.See original implementation in official repository: https://github.com/curvefi/curve-contract/blob/master/contracts/pools/y/DepositY.vy\",\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/curvefi/ICurveFi_DepositY.sol\":\"ICurveFi_DepositY\"},\"evmVersion\":\"petersburg\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/curvefi/ICurveFi_DepositY.sol\":{\"keccak256\":\"0x726cab744d29f92cf90962481d835e4b66da2af9bd8c982e646c704523872d9e\",\"urls\":[\"bzz-raw://51fea6b25cb387bf1f2cd8cfd975a3e1d1b4a0405019539e803b82b853f56d9b\",\"dweb:/ipfs/QmbAA8scXV8cTpsaz4Sro8deuwQEYzuGb9ywZe8jfCWNEK\"]}},\"version\":1}",
					"userdoc": {
						"methods": {}
					}
				}
			},
			"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/curvefi/ICurveFi_Gauge.sol": {
				"ICurveFi_Gauge": {
					"abi": [
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "addr",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "addr",
									"type": "address"
								}
							],
							"name": "claimable_tokens",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "crv_token",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_value",
									"type": "uint256"
								}
							],
							"name": "deposit",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "_for",
									"type": "address"
								}
							],
							"name": "integrate_fraction",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "lp_token",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "minter",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "_for",
									"type": "address"
								}
							],
							"name": "user_checkpoint",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_value",
									"type": "uint256"
								}
							],
							"name": "withdraw",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for Curve.Fi CRV staking Gauge contract.See original implementation in official repository: https://github.com/curvefi/curve-dao-contracts/blob/master/contracts/LiquidityGauge.vy",
						"methods": {}
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"balanceOf(address)": "70a08231",
							"claimable_tokens(address)": "33134583",
							"crv_token()": "76d8b117",
							"deposit(uint256)": "b6b55f25",
							"integrate_fraction(address)": "09400707",
							"lp_token()": "82c63066",
							"minter()": "07546172",
							"user_checkpoint(address)": "4b820093",
							"withdraw(uint256)": "2e1a7d4d"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.12+commit.7709ece9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"claimable_tokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"crv_token\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_for\",\"type\":\"address\"}],\"name\":\"integrate_fraction\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"lp_token\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"minter\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_for\",\"type\":\"address\"}],\"name\":\"user_checkpoint\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for Curve.Fi CRV staking Gauge contract.See original implementation in official repository: https://github.com/curvefi/curve-dao-contracts/blob/master/contracts/LiquidityGauge.vy\",\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/curvefi/ICurveFi_Gauge.sol\":\"ICurveFi_Gauge\"},\"evmVersion\":\"petersburg\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/curvefi/ICurveFi_Gauge.sol\":{\"keccak256\":\"0xa2896f850a80a13f330e06cd808eca2d99f7815d0f203c03942c548ffdc1f375\",\"urls\":[\"bzz-raw://4f0bf1da365395527e16f10670a68d72c5805becd05e4561ffd6d0919a5135a2\",\"dweb:/ipfs/QmYK3adWE3rTmzWvCkrK6rmdipGAWQFgL665YfQhQZDa9D\"]}},\"version\":1}",
					"userdoc": {
						"methods": {}
					}
				}
			},
			"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/curvefi/ICurveFi_Minter.sol": {
				"ICurveFi_Minter": {
					"abi": [
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "gauge_addr",
									"type": "address"
								}
							],
							"name": "mint",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "gauge_addr",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_for",
									"type": "address"
								}
							],
							"name": "mint_for",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "_for",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "gauge_addr",
									"type": "address"
								}
							],
							"name": "minted",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "minting_user",
									"type": "address"
								}
							],
							"name": "toggle_approve_mint",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "token",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for Curve.Fi CRV minter contract.See original implementation in official repository: https://github.com/curvefi/curve-dao-contracts/blob/master/contracts/Minter.vy",
						"methods": {}
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"mint(address)": "6a627842",
							"mint_for(address,address)": "27f18ae3",
							"minted(address,address)": "8b752bb0",
							"toggle_approve_mint(address)": "dd289d60",
							"token()": "fc0c546a"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.12+commit.7709ece9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"gauge_addr\",\"type\":\"address\"}],\"name\":\"mint\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"gauge_addr\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_for\",\"type\":\"address\"}],\"name\":\"mint_for\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_for\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"gauge_addr\",\"type\":\"address\"}],\"name\":\"minted\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"minting_user\",\"type\":\"address\"}],\"name\":\"toggle_approve_mint\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for Curve.Fi CRV minter contract.See original implementation in official repository: https://github.com/curvefi/curve-dao-contracts/blob/master/contracts/Minter.vy\",\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/curvefi/ICurveFi_Minter.sol\":\"ICurveFi_Minter\"},\"evmVersion\":\"petersburg\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/curvefi/ICurveFi_Minter.sol\":{\"keccak256\":\"0x61a0d1906924eef5663bef919befcb2eb409a70a9c57785ac212de3840609aa0\",\"urls\":[\"bzz-raw://73a1b7fd95be9e905967292c30be8a0e94c4be55fd0651f54bcb573cb894f44b\",\"dweb:/ipfs/QmeVNZsh8s4VBRHi29obn9DLG8xSRGVJDSXfC5W8PowVnM\"]}},\"version\":1}",
					"userdoc": {
						"methods": {}
					}
				}
			},
			"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/curvefi/ICurveFi_SwapY.sol": {
				"ICurveFi_SwapY": {
					"abi": [
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "uint256[4]",
									"name": "amounts",
									"type": "uint256[4]"
								},
								{
									"internalType": "uint256",
									"name": "min_mint_amount",
									"type": "uint256"
								}
							],
							"name": "add_liquidity",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "int128",
									"name": "i",
									"type": "int128"
								}
							],
							"name": "balances",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "uint256[4]",
									"name": "amounts",
									"type": "uint256[4]"
								},
								{
									"internalType": "bool",
									"name": "deposit",
									"type": "bool"
								}
							],
							"name": "calc_token_amount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "int128",
									"name": "i",
									"type": "int128"
								}
							],
							"name": "coins",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								},
								{
									"internalType": "uint256[4]",
									"name": "min_amounts",
									"type": "uint256[4]"
								}
							],
							"name": "remove_liquidity",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "uint256[4]",
									"name": "amounts",
									"type": "uint256[4]"
								},
								{
									"internalType": "uint256",
									"name": "max_burn_amount",
									"type": "uint256"
								}
							],
							"name": "remove_liquidity_imbalance",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for Curve.Fi swap contract for Y-pool.See original implementation in official repository: https://github.com/curvefi/curve-contract/blob/master/contracts/pools/y/StableSwapY.vy",
						"methods": {}
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"add_liquidity(uint256[4],uint256)": "029b2f34",
							"balances(int128)": "065a80d8",
							"calc_token_amount(uint256[4],bool)": "cf701ff7",
							"coins(int128)": "23746eb8",
							"remove_liquidity(uint256,uint256[4])": "7d49d875",
							"remove_liquidity_imbalance(uint256[4],uint256)": "18a7bd76"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.12+commit.7709ece9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256[4]\",\"name\":\"amounts\",\"type\":\"uint256[4]\"},{\"internalType\":\"uint256\",\"name\":\"min_mint_amount\",\"type\":\"uint256\"}],\"name\":\"add_liquidity\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"int128\",\"name\":\"i\",\"type\":\"int128\"}],\"name\":\"balances\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256[4]\",\"name\":\"amounts\",\"type\":\"uint256[4]\"},{\"internalType\":\"bool\",\"name\":\"deposit\",\"type\":\"bool\"}],\"name\":\"calc_token_amount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"int128\",\"name\":\"i\",\"type\":\"int128\"}],\"name\":\"coins\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256[4]\",\"name\":\"min_amounts\",\"type\":\"uint256[4]\"}],\"name\":\"remove_liquidity\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256[4]\",\"name\":\"amounts\",\"type\":\"uint256[4]\"},{\"internalType\":\"uint256\",\"name\":\"max_burn_amount\",\"type\":\"uint256\"}],\"name\":\"remove_liquidity_imbalance\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for Curve.Fi swap contract for Y-pool.See original implementation in official repository: https://github.com/curvefi/curve-contract/blob/master/contracts/pools/y/StableSwapY.vy\",\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/curvefi/ICurveFi_SwapY.sol\":\"ICurveFi_SwapY\"},\"evmVersion\":\"petersburg\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/curvefi/ICurveFi_SwapY.sol\":{\"keccak256\":\"0x5e5ed5f48da009f3119d5fba3ca11630f520d9a9cb2d52d816ecf3e87e56261c\",\"urls\":[\"bzz-raw://5c395930d945a30345dcc2ad0bcd69f04ff6d3d2c07f85b702488255fd92e410\",\"dweb:/ipfs/QmYFMTXVcDZV26szyenPsnyhEW4Gmi5HWs72pqaxywrZyJ\"]}},\"version\":1}",
					"userdoc": {
						"methods": {}
					}
				}
			},
			"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/curvefi/IYERC20.sol": {
				"IYERC20": {
					"abi": [
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "deposit",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "getPricePerFullShare",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [],
							"name": "token",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "uint256",
									"name": "shares",
									"type": "uint256"
								}
							],
							"name": "withdraw",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"deposit(uint256)": "b6b55f25",
							"getPricePerFullShare()": "77c7b8fc",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"token()": "fc0c546a",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"withdraw(uint256)": "2e1a7d4d"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.12+commit.7709ece9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getPricePerFullShare\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/curvefi/IYERC20.sol\":\"IYERC20\"},\"evmVersion\":\"petersburg\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/curvefi/IYERC20.sol\":{\"keccak256\":\"0x6b9a2bf14c31d708d73d44443ac9237957f3cf4caddc119eee9f0fc422fae0ee\",\"urls\":[\"bzz-raw://8223df809aa694148da8415c4676465f8b09d55f3f0fe1436e47d8b2b7e2229e\",\"dweb:/ipfs/QmQYPusRFCaGexDr2Ufrv2icVpzD1jGr5uj7gi1sScDaDb\"]}},\"version\":1}",
					"userdoc": {
						"methods": {}
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/GSN/Context.sol": {
				"Context": {
					"abi": [
						{
							"inputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "constructor"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.12+commit.7709ece9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/GSN/Context.sol\":\"Context\"},\"evmVersion\":\"petersburg\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/GSN/Context.sol\":{\"keccak256\":\"0x90a3995645af7562d84b9d69363ffa5ae7217714ab61e951bf7bc450f40e4061\",\"urls\":[\"bzz-raw://216ef9d6b614db4eb46970b4e84903f2534a45572dd30a79f0041f1a5830f436\",\"dweb:/ipfs/QmNPrJ4MWKUAWzKXpUqeyKRUfosaoANZAqXgvepdrCwZAG\"]}},\"version\":1}",
					"userdoc": {
						"methods": {}
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/math/SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations with added overflow checks. * Arithmetic operations in Solidity wrap on overflow. This can easily result in bugs, because programmers usually assume that an overflow raises an error, which is the standard behavior in high level programming languages. `SafeMath` restores this intuition by reverting the transaction when an operation overflows. * Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.",
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/math/SafeMath.sol\":589:5297  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n    /* \"--CODEGEN--\":132:134   */\n  0x0b\n    /* \"--CODEGEN--\":166:173   */\n  dup3\n    /* \"--CODEGEN--\":155:164   */\n  dup3\n    /* \"--CODEGEN--\":146:153   */\n  dup3\n    /* \"--CODEGEN--\":137:174   */\n  codecopy\n    /* \"--CODEGEN--\":255:262   */\n  dup1\n    /* \"--CODEGEN--\":249:263   */\n  mload\n    /* \"--CODEGEN--\":246:247   */\n  0x00\n    /* \"--CODEGEN--\":241:264   */\n  byte\n    /* \"--CODEGEN--\":235:239   */\n  0x73\n    /* \"--CODEGEN--\":232:265   */\n  eq\n    /* \"--CODEGEN--\":222:224   */\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":269:278   */\n  invalid\n    /* \"--CODEGEN--\":222:224   */\ntag_1:\n    /* \"--CODEGEN--\":293:302   */\n  address\n    /* \"--CODEGEN--\":290:291   */\n  0x00\n    /* \"--CODEGEN--\":283:303   */\n  mstore\n    /* \"--CODEGEN--\":323:327   */\n  0x73\n    /* \"--CODEGEN--\":314:321   */\n  dup2\n    /* \"--CODEGEN--\":306:328   */\n  mstore8\n    /* \"--CODEGEN--\":347:354   */\n  dup3\n    /* \"--CODEGEN--\":338:345   */\n  dup2\n    /* \"--CODEGEN--\":331:355   */\n  return\nstop\n\nsub_0: assembly {\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/math/SafeMath.sol\":589:5297  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa265627a7a723158201f6d28a7c2914dbe11decb7acb1df79cbd0d1ff675067714a5027b89b7d5d87e64736f6c634300050c0032\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60556023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea265627a7a723158201f6d28a7c2914dbe11decb7acb1df79cbd0d1ff675067714a5027b89b7d5d87e64736f6c634300050c0032",
							"opcodes": "PUSH1 0x55 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 0x1f PUSH14 0x28A7C2914DBE11DECB7ACB1DF79C 0xbd 0xd 0x1f 0xf6 PUSH22 0x67714A5027B89B7D5D87E64736F6C634300050C0032 ",
							"sourceMap": "589:4708:7:-;;132:2:-1;166:7;155:9;146:7;137:37;255:7;249:14;246:1;241:23;235:4;232:33;222:2;;269:9;222:2;293:9;290:1;283:20;323:4;314:7;306:22;347:7;338;331:24"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea265627a7a723158201f6d28a7c2914dbe11decb7acb1df79cbd0d1ff675067714a5027b89b7d5d87e64736f6c634300050c0032",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 0x1f PUSH14 0x28A7C2914DBE11DECB7ACB1DF79C 0xbd 0xd 0x1f 0xf6 PUSH22 0x67714A5027B89B7D5D87E64736F6C634300050C0032 ",
							"sourceMap": "589:4708:7:-;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "94",
								"totalCost": "17094"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 589,
									"end": 5297,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 589,
									"end": 5297,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 132,
									"end": 134,
									"name": "PUSH",
									"value": "B"
								},
								{
									"begin": 166,
									"end": 173,
									"name": "DUP3"
								},
								{
									"begin": 155,
									"end": 164,
									"name": "DUP3"
								},
								{
									"begin": 146,
									"end": 153,
									"name": "DUP3"
								},
								{
									"begin": 137,
									"end": 174,
									"name": "CODECOPY"
								},
								{
									"begin": 255,
									"end": 262,
									"name": "DUP1"
								},
								{
									"begin": 249,
									"end": 263,
									"name": "MLOAD"
								},
								{
									"begin": 246,
									"end": 247,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 241,
									"end": 264,
									"name": "BYTE"
								},
								{
									"begin": 235,
									"end": 239,
									"name": "PUSH",
									"value": "73"
								},
								{
									"begin": 232,
									"end": 265,
									"name": "EQ"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "JUMPI"
								},
								{
									"begin": 269,
									"end": 278,
									"name": "INVALID"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "JUMPDEST"
								},
								{
									"begin": 293,
									"end": 302,
									"name": "ADDRESS"
								},
								{
									"begin": 290,
									"end": 291,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 283,
									"end": 303,
									"name": "MSTORE"
								},
								{
									"begin": 323,
									"end": 327,
									"name": "PUSH",
									"value": "73"
								},
								{
									"begin": 314,
									"end": 321,
									"name": "DUP2"
								},
								{
									"begin": 306,
									"end": 328,
									"name": "MSTORE8"
								},
								{
									"begin": 347,
									"end": 354,
									"name": "DUP3"
								},
								{
									"begin": 338,
									"end": 345,
									"name": "DUP2"
								},
								{
									"begin": 331,
									"end": 355,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a265627a7a723158201f6d28a7c2914dbe11decb7acb1df79cbd0d1ff675067714a5027b89b7d5d87e64736f6c634300050c0032",
									".code": [
										{
											"begin": 589,
											"end": 5297,
											"name": "PUSHDEPLOYADDRESS"
										},
										{
											"begin": 589,
											"end": 5297,
											"name": "ADDRESS"
										},
										{
											"begin": 589,
											"end": 5297,
											"name": "EQ"
										},
										{
											"begin": 589,
											"end": 5297,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 589,
											"end": 5297,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 589,
											"end": 5297,
											"name": "MSTORE"
										},
										{
											"begin": 589,
											"end": 5297,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 589,
											"end": 5297,
											"name": "DUP1"
										},
										{
											"begin": 589,
											"end": 5297,
											"name": "REVERT"
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.12+commit.7709ece9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations with added overflow checks. * Arithmetic operations in Solidity wrap on overflow. This can easily result in bugs, because programmers usually assume that an overflow raises an error, which is the standard behavior in high level programming languages. `SafeMath` restores this intuition by reverting the transaction when an operation overflows. * Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.\",\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/math/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"petersburg\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x640b6dee7a4b830bdfd52b5031a07fc2b12209f5b2e29e5d364a7d37f69d8076\",\"urls\":[\"bzz-raw://31113152e1ddb78fe7a4197f247591ca894e93f916867beb708d8e747b6cc74f\",\"dweb:/ipfs/QmbZaJyXdpsYGykVhHH9qpVGQg9DGCxE2QufbCUy3daTgq\"]}},\"version\":1}",
					"userdoc": {
						"methods": {}
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/ownership/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "isOwner",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. * This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"isOwner()": {
								"details": "Returns true if the caller is the current owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.     * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						}
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"isOwner()": "8f32d59b",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.12+commit.7709ece9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[],\"name\":\"isOwner\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. * This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"isOwner()\":{\"details\":\"Returns true if the caller is the current owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.     * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/ownership/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"petersburg\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/GSN/Context.sol\":{\"keccak256\":\"0x90a3995645af7562d84b9d69363ffa5ae7217714ab61e951bf7bc450f40e4061\",\"urls\":[\"bzz-raw://216ef9d6b614db4eb46970b4e84903f2534a45572dd30a79f0041f1a5830f436\",\"dweb:/ipfs/QmNPrJ4MWKUAWzKXpUqeyKRUfosaoANZAqXgvepdrCwZAG\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/ownership/Ownable.sol\":{\"keccak256\":\"0x6fb9d7889769d7cc161225f9ef7a90e468ba9788b253816f8d8b6894d3472c24\",\"urls\":[\"bzz-raw://cf4c00fc3c37cc5acf0c82ec6fd97bab67d72c2567fdc0ebf023d9c09b30a08e\",\"dweb:/ipfs/Qmb7TChG6DsEDX7LooJ4vmxot19f7VXX8S1zUGPeJTWbwZ\"]}},\"version\":1}",
					"userdoc": {
						"methods": {}
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20Detailed.sol": {
				"ERC20Detailed": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "name",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "symbol",
									"type": "string"
								},
								{
									"internalType": "uint8",
									"name": "decimals",
									"type": "uint8"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Optional functions from the ERC20 standard.",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default.     * This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens.     * Returns a boolean value indicating whether the operation succeeded.     * IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729     * Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"constructor": {
								"details": "Sets the values for `name`, `symbol`, and `decimals`. All three of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`).     * Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei.     * NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `recipient`.     * Returns a boolean value indicating whether the operation succeeded.     * Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance.     * Returns a boolean value indicating whether the operation succeeded.     * Emits a {Transfer} event."
							}
						}
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.12+commit.7709ece9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"uint8\",\"name\":\"decimals\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Optional functions from the ERC20 standard.\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default.     * This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens.     * Returns a boolean value indicating whether the operation succeeded.     * IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729     * Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"constructor\":{\"details\":\"Sets the values for `name`, `symbol`, and `decimals`. All three of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`).     * Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei.     * NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`.     * Returns a boolean value indicating whether the operation succeeded.     * Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance.     * Returns a boolean value indicating whether the operation succeeded.     * Emits a {Transfer} event.\"}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20Detailed.sol\":\"ERC20Detailed\"},\"evmVersion\":\"petersburg\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20Detailed.sol\":{\"keccak256\":\"0x4a3a810b7ebe742e897e1fd428b3eeed2196d3acea58eaf9c566ed10d545d2ed\",\"urls\":[\"bzz-raw://28d03f328e19e4099d5013de0649afaeaabac1a614e130767ab1cb4aca9775b6\",\"dweb:/ipfs/Qmb9iW7yNuYehB2NfhRMs9TakqbLVQhBhmGMkaDZ5g1Eb4\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe5bb0f57cff3e299f360052ba50f1ea0fff046df2be070b6943e0e3c3fdad8a9\",\"urls\":[\"bzz-raw://59fd025151435da35faa8093a5c7a17de02de9d08ad27275c5cdf05050820d91\",\"dweb:/ipfs/QmQMvwEcPhoRXzbXyrdoeRtvLoifUW9Qh7Luho7bmUPRkc\"]}},\"version\":1}",
					"userdoc": {
						"methods": {}
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP. Does not include the optional functions; to access them see {ERC20Detailed}.",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default.     * This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens.     * Returns a boolean value indicating whether the operation succeeded.     * IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729     * Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `recipient`.     * Returns a boolean value indicating whether the operation succeeded.     * Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance.     * Returns a boolean value indicating whether the operation succeeded.     * Emits a {Transfer} event."
							}
						}
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.12+commit.7709ece9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP. Does not include the optional functions; to access them see {ERC20Detailed}.\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default.     * This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens.     * Returns a boolean value indicating whether the operation succeeded.     * IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729     * Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`.     * Returns a boolean value indicating whether the operation succeeded.     * Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance.     * Returns a boolean value indicating whether the operation succeeded.     * Emits a {Transfer} event.\"}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"petersburg\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe5bb0f57cff3e299f360052ba50f1ea0fff046df2be070b6943e0e3c3fdad8a9\",\"urls\":[\"bzz-raw://59fd025151435da35faa8093a5c7a17de02de9d08ad27275c5cdf05050820d91\",\"dweb:/ipfs/QmQMvwEcPhoRXzbXyrdoeRtvLoifUW9Qh7Luho7bmUPRkc\"]}},\"version\":1}",
					"userdoc": {
						"methods": {}
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/SafeERC20.sol": {
				"SafeERC20": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for ERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.",
						"methods": {},
						"title": "SafeERC20"
					},
					"evm": {
						"assembly": "    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/SafeERC20.sol\":574:3763  library SafeERC20 {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n    /* \"--CODEGEN--\":132:134   */\n  0x0b\n    /* \"--CODEGEN--\":166:173   */\n  dup3\n    /* \"--CODEGEN--\":155:164   */\n  dup3\n    /* \"--CODEGEN--\":146:153   */\n  dup3\n    /* \"--CODEGEN--\":137:174   */\n  codecopy\n    /* \"--CODEGEN--\":255:262   */\n  dup1\n    /* \"--CODEGEN--\":249:263   */\n  mload\n    /* \"--CODEGEN--\":246:247   */\n  0x00\n    /* \"--CODEGEN--\":241:264   */\n  byte\n    /* \"--CODEGEN--\":235:239   */\n  0x73\n    /* \"--CODEGEN--\":232:265   */\n  eq\n    /* \"--CODEGEN--\":222:224   */\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":269:278   */\n  invalid\n    /* \"--CODEGEN--\":222:224   */\ntag_1:\n    /* \"--CODEGEN--\":293:302   */\n  address\n    /* \"--CODEGEN--\":290:291   */\n  0x00\n    /* \"--CODEGEN--\":283:303   */\n  mstore\n    /* \"--CODEGEN--\":323:327   */\n  0x73\n    /* \"--CODEGEN--\":314:321   */\n  dup2\n    /* \"--CODEGEN--\":306:328   */\n  mstore8\n    /* \"--CODEGEN--\":347:354   */\n  dup3\n    /* \"--CODEGEN--\":338:345   */\n  dup2\n    /* \"--CODEGEN--\":331:355   */\n  return\nstop\n\nsub_0: assembly {\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/SafeERC20.sol\":574:3763  library SafeERC20 {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa265627a7a723158200151465d6c1c0e6cac1fb6cdc6b7dd056206849ef946ebd7d461416be9dc489864736f6c634300050c0032\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60556023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea265627a7a723158200151465d6c1c0e6cac1fb6cdc6b7dd056206849ef946ebd7d461416be9dc489864736f6c634300050c0032",
							"opcodes": "PUSH1 0x55 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 ADD MLOAD CHAINID 0x5d PUSH13 0x1C0E6CAC1FB6CDC6B7DD056206 DUP5 SWAP15 0xf9 CHAINID 0xeb 0xd7 0xd4 PUSH2 0x416B 0xe9 0xdc 0x48 SWAP9 PUSH5 0x736F6C6343 STOP SDIV 0xc STOP ORIGIN ",
							"sourceMap": "574:3189:11:-;;132:2:-1;166:7;155:9;146:7;137:37;255:7;249:14;246:1;241:23;235:4;232:33;222:2;;269:9;222:2;293:9;290:1;283:20;323:4;314:7;306:22;347:7;338;331:24"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea265627a7a723158200151465d6c1c0e6cac1fb6cdc6b7dd056206849ef946ebd7d461416be9dc489864736f6c634300050c0032",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 ADD MLOAD CHAINID 0x5d PUSH13 0x1C0E6CAC1FB6CDC6B7DD056206 DUP5 SWAP15 0xf9 CHAINID 0xeb 0xd7 0xd4 PUSH2 0x416B 0xe9 0xdc 0x48 SWAP9 PUSH5 0x736F6C6343 STOP SDIV 0xc STOP ORIGIN ",
							"sourceMap": "574:3189:11:-;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "94",
								"totalCost": "17094"
							},
							"internal": {
								"callOptionalReturn(contract IERC20,bytes memory)": "infinite",
								"safeApprove(contract IERC20,address,uint256)": "infinite",
								"safeDecreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeIncreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeTransfer(contract IERC20,address,uint256)": "infinite",
								"safeTransferFrom(contract IERC20,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 574,
									"end": 3763,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 574,
									"end": 3763,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 132,
									"end": 134,
									"name": "PUSH",
									"value": "B"
								},
								{
									"begin": 166,
									"end": 173,
									"name": "DUP3"
								},
								{
									"begin": 155,
									"end": 164,
									"name": "DUP3"
								},
								{
									"begin": 146,
									"end": 153,
									"name": "DUP3"
								},
								{
									"begin": 137,
									"end": 174,
									"name": "CODECOPY"
								},
								{
									"begin": 255,
									"end": 262,
									"name": "DUP1"
								},
								{
									"begin": 249,
									"end": 263,
									"name": "MLOAD"
								},
								{
									"begin": 246,
									"end": 247,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 241,
									"end": 264,
									"name": "BYTE"
								},
								{
									"begin": 235,
									"end": 239,
									"name": "PUSH",
									"value": "73"
								},
								{
									"begin": 232,
									"end": 265,
									"name": "EQ"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "JUMPI"
								},
								{
									"begin": 269,
									"end": 278,
									"name": "INVALID"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "JUMPDEST"
								},
								{
									"begin": 293,
									"end": 302,
									"name": "ADDRESS"
								},
								{
									"begin": 290,
									"end": 291,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 283,
									"end": 303,
									"name": "MSTORE"
								},
								{
									"begin": 323,
									"end": 327,
									"name": "PUSH",
									"value": "73"
								},
								{
									"begin": 314,
									"end": 321,
									"name": "DUP2"
								},
								{
									"begin": 306,
									"end": 328,
									"name": "MSTORE8"
								},
								{
									"begin": 347,
									"end": 354,
									"name": "DUP3"
								},
								{
									"begin": 338,
									"end": 345,
									"name": "DUP2"
								},
								{
									"begin": 331,
									"end": 355,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a265627a7a723158200151465d6c1c0e6cac1fb6cdc6b7dd056206849ef946ebd7d461416be9dc489864736f6c634300050c0032",
									".code": [
										{
											"begin": 574,
											"end": 3763,
											"name": "PUSHDEPLOYADDRESS"
										},
										{
											"begin": 574,
											"end": 3763,
											"name": "ADDRESS"
										},
										{
											"begin": 574,
											"end": 3763,
											"name": "EQ"
										},
										{
											"begin": 574,
											"end": 3763,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 574,
											"end": 3763,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 574,
											"end": 3763,
											"name": "MSTORE"
										},
										{
											"begin": 574,
											"end": 3763,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 574,
											"end": 3763,
											"name": "DUP1"
										},
										{
											"begin": 574,
											"end": 3763,
											"name": "REVERT"
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.12+commit.7709ece9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for ERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"methods\":{},\"title\":\"SafeERC20\"},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"petersburg\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x640b6dee7a4b830bdfd52b5031a07fc2b12209f5b2e29e5d364a7d37f69d8076\",\"urls\":[\"bzz-raw://31113152e1ddb78fe7a4197f247591ca894e93f916867beb708d8e747b6cc74f\",\"dweb:/ipfs/QmbZaJyXdpsYGykVhHH9qpVGQg9DGCxE2QufbCUy3daTgq\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe5bb0f57cff3e299f360052ba50f1ea0fff046df2be070b6943e0e3c3fdad8a9\",\"urls\":[\"bzz-raw://59fd025151435da35faa8093a5c7a17de02de9d08ad27275c5cdf05050820d91\",\"dweb:/ipfs/QmQMvwEcPhoRXzbXyrdoeRtvLoifUW9Qh7Luho7bmUPRkc\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/SafeERC20.sol\":{\"keccak256\":\"0x6f2c9955d65c522b80f4b8792f076512d2df947d2112cbc4d98a4781ed42ede2\",\"urls\":[\"bzz-raw://7d8ec81683520c06baeef3f7e06cd82bd6fd5fa611f26857f475f6c829540aff\",\"dweb:/ipfs/QmTDkFzKnrpiV1UKnSoiZAHPuguWzokrr4pFbSPvyaSo56\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/utils/Address.sol\":{\"keccak256\":\"0x1a8e5072509c5ea7365eb1d48030b9be865140c8fb779968da0a459a0e174a11\",\"urls\":[\"bzz-raw://03335b7b07c7c8c8d613cfdd8ec39a0b5ec133ee510bf2fe6cc5a496767bef4b\",\"dweb:/ipfs/Qmebp4nzPja645c9yXSdJkGq96oU3am3LUnG2K3R7XxyKf\"]}},\"version\":1}",
					"userdoc": {
						"methods": {}
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/utils/Address.sol": {
				"Address": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/utils/Address.sol\":93:2954  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n    /* \"--CODEGEN--\":132:134   */\n  0x0b\n    /* \"--CODEGEN--\":166:173   */\n  dup3\n    /* \"--CODEGEN--\":155:164   */\n  dup3\n    /* \"--CODEGEN--\":146:153   */\n  dup3\n    /* \"--CODEGEN--\":137:174   */\n  codecopy\n    /* \"--CODEGEN--\":255:262   */\n  dup1\n    /* \"--CODEGEN--\":249:263   */\n  mload\n    /* \"--CODEGEN--\":246:247   */\n  0x00\n    /* \"--CODEGEN--\":241:264   */\n  byte\n    /* \"--CODEGEN--\":235:239   */\n  0x73\n    /* \"--CODEGEN--\":232:265   */\n  eq\n    /* \"--CODEGEN--\":222:224   */\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":269:278   */\n  invalid\n    /* \"--CODEGEN--\":222:224   */\ntag_1:\n    /* \"--CODEGEN--\":293:302   */\n  address\n    /* \"--CODEGEN--\":290:291   */\n  0x00\n    /* \"--CODEGEN--\":283:303   */\n  mstore\n    /* \"--CODEGEN--\":323:327   */\n  0x73\n    /* \"--CODEGEN--\":314:321   */\n  dup2\n    /* \"--CODEGEN--\":306:328   */\n  mstore8\n    /* \"--CODEGEN--\":347:354   */\n  dup3\n    /* \"--CODEGEN--\":338:345   */\n  dup2\n    /* \"--CODEGEN--\":331:355   */\n  return\nstop\n\nsub_0: assembly {\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/utils/Address.sol\":93:2954  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa265627a7a72315820b66d1712810ec1a10229e6415d02cc4a23f0cba807fdee3af6f40ad5756ff6d864736f6c634300050c0032\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60556023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea265627a7a72315820b66d1712810ec1a10229e6415d02cc4a23f0cba807fdee3af6f40ad5756ff6d864736f6c634300050c0032",
							"opcodes": "PUSH1 0x55 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 0xb6 PUSH14 0x1712810EC1A10229E6415D02CC4A 0x23 CREATE 0xcb 0xa8 SMOD REVERT 0xee GASPRICE 0xf6 DELEGATECALL EXP 0xd5 PUSH22 0x6FF6D864736F6C634300050C00320000000000000000 ",
							"sourceMap": "93:2861:12:-;;132:2:-1;166:7;155:9;146:7;137:37;255:7;249:14;246:1;241:23;235:4;232:33;222:2;;269:9;222:2;293:9;290:1;283:20;323:4;314:7;306:22;347:7;338;331:24"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea265627a7a72315820b66d1712810ec1a10229e6415d02cc4a23f0cba807fdee3af6f40ad5756ff6d864736f6c634300050c0032",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 0xb6 PUSH14 0x1712810EC1A10229E6415D02CC4A 0x23 CREATE 0xcb 0xa8 SMOD REVERT 0xee GASPRICE 0xf6 DELEGATECALL EXP 0xd5 PUSH22 0x6FF6D864736F6C634300050C00320000000000000000 ",
							"sourceMap": "93:2861:12:-;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "94",
								"totalCost": "17094"
							},
							"internal": {
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"toPayable(address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 93,
									"end": 2954,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 93,
									"end": 2954,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 132,
									"end": 134,
									"name": "PUSH",
									"value": "B"
								},
								{
									"begin": 166,
									"end": 173,
									"name": "DUP3"
								},
								{
									"begin": 155,
									"end": 164,
									"name": "DUP3"
								},
								{
									"begin": 146,
									"end": 153,
									"name": "DUP3"
								},
								{
									"begin": 137,
									"end": 174,
									"name": "CODECOPY"
								},
								{
									"begin": 255,
									"end": 262,
									"name": "DUP1"
								},
								{
									"begin": 249,
									"end": 263,
									"name": "MLOAD"
								},
								{
									"begin": 246,
									"end": 247,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 241,
									"end": 264,
									"name": "BYTE"
								},
								{
									"begin": 235,
									"end": 239,
									"name": "PUSH",
									"value": "73"
								},
								{
									"begin": 232,
									"end": 265,
									"name": "EQ"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "JUMPI"
								},
								{
									"begin": 269,
									"end": 278,
									"name": "INVALID"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "JUMPDEST"
								},
								{
									"begin": 293,
									"end": 302,
									"name": "ADDRESS"
								},
								{
									"begin": 290,
									"end": 291,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 283,
									"end": 303,
									"name": "MSTORE"
								},
								{
									"begin": 323,
									"end": 327,
									"name": "PUSH",
									"value": "73"
								},
								{
									"begin": 314,
									"end": 321,
									"name": "DUP2"
								},
								{
									"begin": 306,
									"end": 328,
									"name": "MSTORE8"
								},
								{
									"begin": 347,
									"end": 354,
									"name": "DUP3"
								},
								{
									"begin": 338,
									"end": 345,
									"name": "DUP2"
								},
								{
									"begin": 331,
									"end": 355,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a265627a7a72315820b66d1712810ec1a10229e6415d02cc4a23f0cba807fdee3af6f40ad5756ff6d864736f6c634300050c0032",
									".code": [
										{
											"begin": 93,
											"end": 2954,
											"name": "PUSHDEPLOYADDRESS"
										},
										{
											"begin": 93,
											"end": 2954,
											"name": "ADDRESS"
										},
										{
											"begin": 93,
											"end": 2954,
											"name": "EQ"
										},
										{
											"begin": 93,
											"end": 2954,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 93,
											"end": 2954,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 93,
											"end": 2954,
											"name": "MSTORE"
										},
										{
											"begin": 93,
											"end": 2954,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 93,
											"end": 2954,
											"name": "DUP1"
										},
										{
											"begin": 93,
											"end": 2954,
											"name": "REVERT"
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.12+commit.7709ece9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"petersburg\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/utils/Address.sol\":{\"keccak256\":\"0x1a8e5072509c5ea7365eb1d48030b9be865140c8fb779968da0a459a0e174a11\",\"urls\":[\"bzz-raw://03335b7b07c7c8c8d613cfdd8ec39a0b5ec133ee510bf2fe6cc5a496767bef4b\",\"dweb:/ipfs/Qmebp4nzPja645c9yXSdJkGq96oU3am3LUnG2K3R7XxyKf\"]}},\"version\":1}",
					"userdoc": {
						"methods": {}
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-upgrades/blob/master/packages/core/contracts/Initializable.sol": {
				"Initializable": {
					"abi": [],
					"devdoc": {
						"details": "Deprecated. This contract is kept in the Upgrades Plugins for backwards compatibility purposes. Users should use openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol instead. * Helper contract to support initializer functions. To use it, replace the constructor with a function that has the `initializer` modifier. WARNING: Unlike constructors, initializer functions must be manually invoked. This applies both to deploying an Initializable contract, as well as extending an Initializable contract via inheritance. WARNING: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or ensure that all initializers are idempotent, because this is not dealt with automatically as with constructors.",
						"methods": {},
						"title": "Initializable"
					},
					"evm": {
						"assembly": "    /* \"https://github.com/OpenZeppelin/openzeppelin-upgrades/blob/master/packages/core/contracts/Initializable.sol\":886:2243  contract Initializable {... */\n  mstore(0x40, 0x80)\n  callvalue\n    /* \"--CODEGEN--\":8:17   */\n  dup1\n    /* \"--CODEGEN--\":5:7   */\n  iszero\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":30:31   */\n  0x00\n    /* \"--CODEGEN--\":27:28   */\n  dup1\n    /* \"--CODEGEN--\":20:32   */\n  revert\n    /* \"--CODEGEN--\":5:7   */\ntag_1:\n    /* \"https://github.com/OpenZeppelin/openzeppelin-upgrades/blob/master/packages/core/contracts/Initializable.sol\":886:2243  contract Initializable {... */\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"https://github.com/OpenZeppelin/openzeppelin-upgrades/blob/master/packages/core/contracts/Initializable.sol\":886:2243  contract Initializable {... */\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa265627a7a723158207d6ae97d573cc96500222f40dc9722f87f69c5caa0cfe101531ec9aab93e725164736f6c634300050c0032\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "6080604052348015600f57600080fd5b50603e80601d6000396000f3fe6080604052600080fdfea265627a7a723158207d6ae97d573cc96500222f40dc9722f87f69c5caa0cfe101531ec9aab93e725164736f6c634300050c0032",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3E DUP1 PUSH1 0x1D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 PUSH30 0x6AE97D573CC96500222F40DC9722F87F69C5CAA0CFE101531EC9AAB93E72 MLOAD PUSH5 0x736F6C6343 STOP SDIV 0xc STOP ORIGIN ",
							"sourceMap": "886:1357:13:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;886:1357:13;;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "6080604052600080fdfea265627a7a723158207d6ae97d573cc96500222f40dc9722f87f69c5caa0cfe101531ec9aab93e725164736f6c634300050c0032",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 PUSH30 0x6AE97D573CC96500222F40DC9722F87F69C5CAA0CFE101531EC9AAB93E72 MLOAD PUSH5 0x736F6C6343 STOP SDIV 0xc STOP ORIGIN ",
							"sourceMap": "886:1357:13:-;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "12400",
								"executionCost": "66",
								"totalCost": "12466"
							},
							"internal": {
								"isConstructor()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 886,
									"end": 2243,
									"name": "PUSH",
									"value": "80"
								},
								{
									"begin": 886,
									"end": 2243,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 886,
									"end": 2243,
									"name": "MSTORE"
								},
								{
									"begin": 886,
									"end": 2243,
									"name": "CALLVALUE"
								},
								{
									"begin": 8,
									"end": 17,
									"name": "DUP1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "ISZERO"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPI"
								},
								{
									"begin": 30,
									"end": 31,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 27,
									"end": 28,
									"name": "DUP1"
								},
								{
									"begin": 20,
									"end": 32,
									"name": "REVERT"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPDEST"
								},
								{
									"begin": 886,
									"end": 2243,
									"name": "POP"
								},
								{
									"begin": 886,
									"end": 2243,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 886,
									"end": 2243,
									"name": "DUP1"
								},
								{
									"begin": 886,
									"end": 2243,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 886,
									"end": 2243,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 886,
									"end": 2243,
									"name": "CODECOPY"
								},
								{
									"begin": 886,
									"end": 2243,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 886,
									"end": 2243,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a265627a7a723158207d6ae97d573cc96500222f40dc9722f87f69c5caa0cfe101531ec9aab93e725164736f6c634300050c0032",
									".code": [
										{
											"begin": 886,
											"end": 2243,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 886,
											"end": 2243,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 886,
											"end": 2243,
											"name": "MSTORE"
										},
										{
											"begin": 886,
											"end": 2243,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 886,
											"end": 2243,
											"name": "DUP1"
										},
										{
											"begin": 886,
											"end": 2243,
											"name": "REVERT"
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.12+commit.7709ece9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Deprecated. This contract is kept in the Upgrades Plugins for backwards compatibility purposes. Users should use openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol instead. * Helper contract to support initializer functions. To use it, replace the constructor with a function that has the `initializer` modifier. WARNING: Unlike constructors, initializer functions must be manually invoked. This applies both to deploying an Initializable contract, as well as extending an Initializable contract via inheritance. WARNING: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or ensure that all initializers are idempotent, because this is not dealt with automatically as with constructors.\",\"methods\":{},\"title\":\"Initializable\"},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-upgrades/blob/master/packages/core/contracts/Initializable.sol\":\"Initializable\"},\"evmVersion\":\"petersburg\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-upgrades/blob/master/packages/core/contracts/Initializable.sol\":{\"keccak256\":\"0x516c704636466430b300e9290312d225a3e23ac50096a74a80d7830f0701e361\",\"urls\":[\"bzz-raw://04be950324a573c0153167098bfda7e171c1167fd4ee82a8f62a134f2b35806e\",\"dweb:/ipfs/QmRg3kFLFTeCFzmwvaT66cr4g9KUfihQm7U4h8XKxEis4D\"]}},\"version\":1}",
					"userdoc": {
						"methods": {}
					}
				}
			}
		},
		"sources": {
			"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol": {
				"ast": {
					"absolutePath": "Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/MoneyToCurve.sol",
					"exportedSymbols": {
						"MoneyToCurve": [
							697
						]
					},
					"id": 698,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.5",
								".12"
							],
							"nodeType": "PragmaDirective",
							"src": "0:24:0"
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-upgrades/blob/master/packages/core/contracts/Initializable.sol",
							"file": "https://github.com/OpenZeppelin/openzeppelin-upgrades/blob/master/packages/core/contracts/Initializable.sol",
							"id": 2,
							"nodeType": "ImportDirective",
							"scope": 698,
							"sourceUnit": 1815,
							"src": "26:117:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/GSN/Context.sol",
							"file": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/GSN/Context.sol",
							"id": 3,
							"nodeType": "ImportDirective",
							"scope": 698,
							"sourceUnit": 1019,
							"src": "144:110:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/ownership/Ownable.sol",
							"file": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/ownership/Ownable.sol",
							"id": 4,
							"nodeType": "ImportDirective",
							"scope": 698,
							"sourceUnit": 1324,
							"src": "255:116:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/IERC20.sol",
							"file": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/IERC20.sol",
							"id": 5,
							"nodeType": "ImportDirective",
							"scope": 698,
							"sourceUnit": 1451,
							"src": "373:117:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20Detailed.sol",
							"file": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20Detailed.sol",
							"id": 6,
							"nodeType": "ImportDirective",
							"scope": 698,
							"sourceUnit": 1382,
							"src": "491:124:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/SafeERC20.sol",
							"file": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/SafeERC20.sol",
							"id": 7,
							"nodeType": "ImportDirective",
							"scope": 698,
							"sourceUnit": 1671,
							"src": "616:120:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/math/SafeMath.sol",
							"file": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/math/SafeMath.sol",
							"id": 8,
							"nodeType": "ImportDirective",
							"scope": 698,
							"sourceUnit": 1206,
							"src": "737:112:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/curvefi/ICurveFi_DepositY.sol",
							"file": "./curvefi/ICurveFi_DepositY.sol",
							"id": 9,
							"nodeType": "ImportDirective",
							"scope": 698,
							"sourceUnit": 759,
							"src": "851:41:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/curvefi/ICurveFi_Gauge.sol",
							"file": "./curvefi/ICurveFi_Gauge.sol",
							"id": 10,
							"nodeType": "ImportDirective",
							"scope": 698,
							"sourceUnit": 815,
							"src": "893:38:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/curvefi/ICurveFi_Minter.sol",
							"file": "./curvefi/ICurveFi_Minter.sol",
							"id": 11,
							"nodeType": "ImportDirective",
							"scope": 698,
							"sourceUnit": 849,
							"src": "932:39:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/curvefi/ICurveFi_SwapY.sol",
							"file": "./curvefi/ICurveFi_SwapY.sol",
							"id": 12,
							"nodeType": "ImportDirective",
							"scope": 698,
							"sourceUnit": 904,
							"src": "972:38:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/curvefi/IYERC20.sol",
							"file": "./curvefi/IYERC20.sol",
							"id": 13,
							"nodeType": "ImportDirective",
							"scope": 698,
							"sourceUnit": 992,
							"src": "1011:31:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 14,
										"name": "Initializable",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1814,
										"src": "1069:13:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Initializable_$1814",
											"typeString": "contract Initializable"
										}
									},
									"id": 15,
									"nodeType": "InheritanceSpecifier",
									"src": "1069:13:0"
								},
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 16,
										"name": "Context",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1018,
										"src": "1084:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Context_$1018",
											"typeString": "contract Context"
										}
									},
									"id": 17,
									"nodeType": "InheritanceSpecifier",
									"src": "1084:7:0"
								},
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 18,
										"name": "Ownable",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1323,
										"src": "1093:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Ownable_$1323",
											"typeString": "contract Ownable"
										}
									},
									"id": 19,
									"nodeType": "InheritanceSpecifier",
									"src": "1093:7:0"
								}
							],
							"contractDependencies": [
								1018,
								1323,
								1814
							],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 697,
							"linearizedBaseContracts": [
								697,
								1323,
								1018,
								1814
							],
							"name": "MoneyToCurve",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 22,
									"libraryName": {
										"contractScope": null,
										"id": 20,
										"name": "SafeMath",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1205,
										"src": "1113:8:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeMath_$1205",
											"typeString": "library SafeMath"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "1107:27:0",
									"typeName": {
										"id": 21,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1126:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"id": 25,
									"libraryName": {
										"contractScope": null,
										"id": 23,
										"name": "SafeERC20",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1670,
										"src": "1145:9:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeERC20_$1670",
											"typeString": "library SafeERC20"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "1139:27:0",
									"typeName": {
										"contractScope": null,
										"id": 24,
										"name": "IERC20",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1450,
										"src": "1159:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$1450",
											"typeString": "contract IERC20"
										}
									}
								},
								{
									"constant": false,
									"id": 27,
									"name": "curveFi_Deposit",
									"nodeType": "VariableDeclaration",
									"scope": 697,
									"src": "1172:30:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 26,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1172:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 29,
									"name": "curveFi_Swap",
									"nodeType": "VariableDeclaration",
									"scope": 697,
									"src": "1208:27:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 28,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1208:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 31,
									"name": "curveFi_LPToken",
									"nodeType": "VariableDeclaration",
									"scope": 697,
									"src": "1241:30:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 30,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1241:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 33,
									"name": "curveFi_LPGauge",
									"nodeType": "VariableDeclaration",
									"scope": 697,
									"src": "1277:30:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 32,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1277:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 35,
									"name": "curveFi_CRVMinter",
									"nodeType": "VariableDeclaration",
									"scope": 697,
									"src": "1313:32:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 34,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1313:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 37,
									"name": "curveFi_CRVToken",
									"nodeType": "VariableDeclaration",
									"scope": 697,
									"src": "1351:31:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 36,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1351:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 39,
									"name": "x",
									"nodeType": "VariableDeclaration",
									"scope": 697,
									"src": "1388:16:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 38,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1388:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 50,
										"nodeType": "Block",
										"src": "1466:23:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 48,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 46,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 39,
														"src": "1476:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 47,
														"name": "_x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 41,
														"src": "1480:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1476:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 49,
												"nodeType": "ExpressionStatement",
												"src": "1476:6:0"
											}
										]
									},
									"documentation": null,
									"id": 51,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 44,
											"modifierName": {
												"argumentTypes": null,
												"id": 43,
												"name": "initializer",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 1789,
												"src": "1454:11:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "1454:11:0"
										}
									],
									"name": "initialize",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 42,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 41,
												"name": "_x",
												"nodeType": "VariableDeclaration",
												"scope": 51,
												"src": "1435:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 40,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1435:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1434:12:0"
									},
									"returnParameters": {
										"id": 45,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1466:0:0"
									},
									"scope": 697,
									"src": "1415:74:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 120,
										"nodeType": "Block",
										"src": "1846:568:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 67,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 63,
																"name": "_depositContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 53,
																"src": "1864:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 65,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1892:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 64,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1884:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": "address"
																},
																"id": 66,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1884:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "1864:30:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "496e636f7272656374206465706f73697420636f6e74726163742061646472657373",
															"id": 68,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1896:36:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_02c2cde26d907edef0275dd60c1d3730b459d629aea5e0144e75833e4ac66b41",
																"typeString": "literal_string \"Incorrect deposit contract address\""
															},
															"value": "Incorrect deposit contract address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_02c2cde26d907edef0275dd60c1d3730b459d629aea5e0144e75833e4ac66b41",
																"typeString": "literal_string \"Incorrect deposit contract address\""
															}
														],
														"id": 62,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1832,
															1833
														],
														"referencedDeclaration": 1833,
														"src": "1856:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 69,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1856:77:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 70,
												"nodeType": "ExpressionStatement",
												"src": "1856:77:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 73,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 71,
														"name": "curveFi_Deposit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1944:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 72,
														"name": "_depositContract",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 53,
														"src": "1962:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1944:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 74,
												"nodeType": "ExpressionStatement",
												"src": "1944:34:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 81,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 75,
														"name": "curveFi_Swap",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 29,
														"src": "1988:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 77,
																		"name": "curveFi_Deposit",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 27,
																		"src": "2021:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 76,
																	"name": "ICurveFi_DepositY",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 758,
																	"src": "2003:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_ICurveFi_DepositY_$758_$",
																		"typeString": "type(contract ICurveFi_DepositY)"
																	}
																},
																"id": 78,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2003:34:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_ICurveFi_DepositY_$758",
																	"typeString": "contract ICurveFi_DepositY"
																}
															},
															"id": 79,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "curve",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 752,
															"src": "2003:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
																"typeString": "function () view external returns (address)"
															}
														},
														"id": 80,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2003:42:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1988:57:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 82,
												"nodeType": "ExpressionStatement",
												"src": "1988:57:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 85,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 83,
														"name": "curveFi_LPGauge",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 33,
														"src": "2055:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 84,
														"name": "_gaugeContract",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 55,
														"src": "2073:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2055:32:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 86,
												"nodeType": "ExpressionStatement",
												"src": "2055:32:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 93,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 87,
														"name": "curveFi_LPToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 31,
														"src": "2097:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 89,
																		"name": "curveFi_Deposit",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 27,
																		"src": "2133:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 88,
																	"name": "ICurveFi_DepositY",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 758,
																	"src": "2115:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_ICurveFi_DepositY_$758_$",
																		"typeString": "type(contract ICurveFi_DepositY)"
																	}
																},
																"id": 90,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2115:34:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_ICurveFi_DepositY_$758",
																	"typeString": "contract ICurveFi_DepositY"
																}
															},
															"id": 91,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "token",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 757,
															"src": "2115:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
																"typeString": "function () view external returns (address)"
															}
														},
														"id": 92,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2115:42:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2097:60:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 94,
												"nodeType": "ExpressionStatement",
												"src": "2097:60:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 104,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"id": 97,
																				"name": "curveFi_LPGauge",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 33,
																				"src": "2191:15:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 96,
																			"name": "ICurveFi_Gauge",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 814,
																			"src": "2176:14:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_ICurveFi_Gauge_$814_$",
																				"typeString": "type(contract ICurveFi_Gauge)"
																			}
																		},
																		"id": 98,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2176:31:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_ICurveFi_Gauge_$814",
																			"typeString": "contract ICurveFi_Gauge"
																		}
																	},
																	"id": 99,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "lp_token",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 765,
																	"src": "2176:40:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
																		"typeString": "function () view external returns (address)"
																	}
																},
																"id": 100,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2176:42:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 102,
																		"name": "curveFi_LPToken",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 31,
																		"src": "2230:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 101,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2222:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": "address"
																},
																"id": 103,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2222:24:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2176:70:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "43757276654669204c5020746f6b656e7320646f206e6f74206d61746368",
															"id": 105,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2248:32:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f3f254d31744ebd6cca8d79070441ae508dc7b21fbef0b4465ac6dfd55f9ed1f",
																"typeString": "literal_string \"CurveFi LP tokens do not match\""
															},
															"value": "CurveFi LP tokens do not match"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f3f254d31744ebd6cca8d79070441ae508dc7b21fbef0b4465ac6dfd55f9ed1f",
																"typeString": "literal_string \"CurveFi LP tokens do not match\""
															}
														],
														"id": 95,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1832,
															1833
														],
														"referencedDeclaration": 1833,
														"src": "2168:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 106,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2168:113:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 107,
												"nodeType": "ExpressionStatement",
												"src": "2168:113:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 110,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 108,
														"name": "curveFi_CRVMinter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 35,
														"src": "2300:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 109,
														"name": "_minterContract",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 57,
														"src": "2320:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2300:35:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 111,
												"nodeType": "ExpressionStatement",
												"src": "2300:35:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 118,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 112,
														"name": "curveFi_CRVToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 37,
														"src": "2345:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 114,
																		"name": "curveFi_LPGauge",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 33,
																		"src": "2379:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 113,
																	"name": "ICurveFi_Gauge",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 814,
																	"src": "2364:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_ICurveFi_Gauge_$814_$",
																		"typeString": "type(contract ICurveFi_Gauge)"
																	}
																},
																"id": 115,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2364:31:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_ICurveFi_Gauge_$814",
																	"typeString": "contract ICurveFi_Gauge"
																}
															},
															"id": 116,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "crv_token",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 770,
															"src": "2364:41:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
																"typeString": "function () view external returns (address)"
															}
														},
														"id": 117,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2364:43:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2345:62:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 119,
												"nodeType": "ExpressionStatement",
												"src": "2345:62:0"
											}
										]
									},
									"documentation": "@notice Set CurveFi contracts addresses\n@param _depositContract CurveFi Deposit contract for Y-pool\n@param _gaugeContract CurveFi Gauge contract for Y-pool\n@param _minterContract CurveFi CRV minter",
									"id": 121,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 60,
											"modifierName": {
												"argumentTypes": null,
												"id": 59,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 1256,
												"src": "1836:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "1836:9:0"
										}
									],
									"name": "setup",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 58,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 53,
												"name": "_depositContract",
												"nodeType": "VariableDeclaration",
												"scope": 121,
												"src": "1752:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 52,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1752:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 55,
												"name": "_gaugeContract",
												"nodeType": "VariableDeclaration",
												"scope": 121,
												"src": "1778:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 54,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1778:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 57,
												"name": "_minterContract",
												"nodeType": "VariableDeclaration",
												"scope": 121,
												"src": "1802:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 56,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1802:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1751:75:0"
									},
									"returnParameters": {
										"id": 61,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1846:0:0"
									},
									"scope": 697,
									"src": "1737:677:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": {
										"id": 237,
										"nodeType": "Block",
										"src": "2673:1069:0",
										"statements": [
											{
												"assignments": [
													132
												],
												"declarations": [
													{
														"constant": false,
														"id": 132,
														"name": "stablecoins",
														"nodeType": "VariableDeclaration",
														"scope": 237,
														"src": "2683:29:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$4_memory_ptr",
															"typeString": "address[4]"
														},
														"typeName": {
															"baseType": {
																"id": 130,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2683:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 131,
															"length": {
																"argumentTypes": null,
																"hexValue": "34",
																"id": 129,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2691:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_4_by_1",
																	"typeString": "int_const 4"
																},
																"value": "4"
															},
															"nodeType": "ArrayTypeName",
															"src": "2683:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$4_storage_ptr",
																"typeString": "address[4]"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 138,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 134,
																	"name": "curveFi_Deposit",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 27,
																	"src": "2733:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 133,
																"name": "ICurveFi_DepositY",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 758,
																"src": "2715:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_ICurveFi_DepositY_$758_$",
																	"typeString": "type(contract ICurveFi_DepositY)"
																}
															},
															"id": 135,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2715:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ICurveFi_DepositY_$758",
																"typeString": "contract ICurveFi_DepositY"
															}
														},
														"id": 136,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "underlying_coins",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 747,
														"src": "2715:51:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_array$_t_address_$4_memory_ptr_$",
															"typeString": "function () view external returns (address[4] memory)"
														}
													},
													"id": 137,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2715:53:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$4_memory_ptr",
														"typeString": "address[4] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2683:85:0"
											},
											{
												"body": {
													"id": 178,
													"nodeType": "Block",
													"src": "2828:184:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 156,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1006,
																			"src": "2882:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																				"typeString": "function () view returns (address payable)"
																			}
																		},
																		"id": 157,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2882:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"id": 159,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1869,
																				"src": "2904:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_MoneyToCurve_$697",
																					"typeString": "contract MoneyToCurve"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_MoneyToCurve_$697",
																					"typeString": "contract MoneyToCurve"
																				}
																			],
																			"id": 158,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2896:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": "address"
																		},
																		"id": 160,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2896:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 161,
																			"name": "_amounts",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 125,
																			"src": "2911:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_uint256_$4_memory_ptr",
																				"typeString": "uint256[4] memory"
																			}
																		},
																		"id": 163,
																		"indexExpression": {
																			"argumentTypes": null,
																			"id": 162,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 140,
																			"src": "2920:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "2911:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"baseExpression": {
																					"argumentTypes": null,
																					"id": 151,
																					"name": "stablecoins",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 132,
																					"src": "2849:11:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_address_$4_memory_ptr",
																						"typeString": "address[4] memory"
																					}
																				},
																				"id": 153,
																				"indexExpression": {
																					"argumentTypes": null,
																					"id": 152,
																					"name": "i",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 140,
																					"src": "2861:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "2849:14:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 150,
																			"name": "IERC20",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1450,
																			"src": "2842:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC20_$1450_$",
																				"typeString": "type(contract IERC20)"
																			}
																		},
																		"id": 154,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2842:22:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$1450",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 155,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "safeTransferFrom",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1508,
																	"src": "2842:39:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$1450_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$1450_$",
																		"typeString": "function (contract IERC20,address,address,uint256)"
																	}
																},
																"id": 164,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2842:81:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 165,
															"nodeType": "ExpressionStatement",
															"src": "2842:81:0"
														},
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 172,
																		"name": "curveFi_Deposit",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 27,
																		"src": "2972:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 173,
																			"name": "_amounts",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 125,
																			"src": "2989:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_uint256_$4_memory_ptr",
																				"typeString": "uint256[4] memory"
																			}
																		},
																		"id": 175,
																		"indexExpression": {
																			"argumentTypes": null,
																			"id": 174,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 140,
																			"src": "2998:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "2989:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"baseExpression": {
																					"argumentTypes": null,
																					"id": 167,
																					"name": "stablecoins",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 132,
																					"src": "2944:11:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_address_$4_memory_ptr",
																						"typeString": "address[4] memory"
																					}
																				},
																				"id": 169,
																				"indexExpression": {
																					"argumentTypes": null,
																					"id": 168,
																					"name": "i",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 140,
																					"src": "2956:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "2944:14:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 166,
																			"name": "IERC20",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1450,
																			"src": "2937:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC20_$1450_$",
																				"typeString": "type(contract IERC20)"
																			}
																		},
																		"id": 170,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2937:22:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$1450",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 171,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "safeApprove",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1549,
																	"src": "2937:34:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$1450_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$1450_$",
																		"typeString": "function (contract IERC20,address,uint256)"
																	}
																},
																"id": 176,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2937:64:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 177,
															"nodeType": "ExpressionStatement",
															"src": "2937:64:0"
														}
													]
												},
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 146,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 143,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 140,
														"src": "2799:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 144,
															"name": "stablecoins",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 132,
															"src": "2803:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$4_memory_ptr",
																"typeString": "address[4] memory"
															}
														},
														"id": 145,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "2803:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2799:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 179,
												"initializationExpression": {
													"assignments": [
														140
													],
													"declarations": [
														{
															"constant": false,
															"id": 140,
															"name": "i",
															"nodeType": "VariableDeclaration",
															"scope": 179,
															"src": "2784:9:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 139,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2784:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"value": null,
															"visibility": "internal"
														}
													],
													"id": 142,
													"initialValue": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 141,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2796:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "2784:13:0"
												},
												"loopExpression": {
													"expression": {
														"argumentTypes": null,
														"id": 148,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "2823:3:0",
														"subExpression": {
															"argumentTypes": null,
															"id": 147,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 140,
															"src": "2823:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 149,
													"nodeType": "ExpressionStatement",
													"src": "2823:3:0"
												},
												"nodeType": "ForStatement",
												"src": "2779:233:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 184,
															"name": "_amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 125,
															"src": "3137:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$4_memory_ptr",
																"typeString": "uint256[4] memory"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "30",
															"id": 185,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3147:1:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_array$_t_uint256_$4_memory_ptr",
																"typeString": "uint256[4] memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 181,
																	"name": "curveFi_Deposit",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 27,
																	"src": "3106:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 180,
																"name": "ICurveFi_DepositY",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 758,
																"src": "3088:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_ICurveFi_DepositY_$758_$",
																	"typeString": "type(contract ICurveFi_DepositY)"
																}
															},
															"id": 182,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3088:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ICurveFi_DepositY_$758",
																"typeString": "contract ICurveFi_DepositY"
															}
														},
														"id": 183,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "add_liquidity",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 708,
														"src": "3088:48:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_array$_t_uint256_$4_memory_ptr_$_t_uint256_$returns$__$",
															"typeString": "function (uint256[4] memory,uint256) external"
														}
													},
													"id": 186,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3088:61:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 187,
												"nodeType": "ExpressionStatement",
												"src": "3088:61:0"
											},
											{
												"assignments": [
													189
												],
												"declarations": [
													{
														"constant": false,
														"id": 189,
														"name": "curveLPBalance",
														"nodeType": "VariableDeclaration",
														"scope": 237,
														"src": "3262:22:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 188,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3262:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 198,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 195,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1869,
																	"src": "3329:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_MoneyToCurve_$697",
																		"typeString": "contract MoneyToCurve"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_MoneyToCurve_$697",
																		"typeString": "contract MoneyToCurve"
																	}
																],
																"id": 194,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3321:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": "address"
															},
															"id": 196,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3321:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 191,
																	"name": "curveFi_LPToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 31,
																	"src": "3294:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 190,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1450,
																"src": "3287:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$1450_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 192,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3287:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$1450",
																"typeString": "contract IERC20"
															}
														},
														"id": 193,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1395,
														"src": "3287:33:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 197,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3287:48:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3262:73:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 203,
															"name": "curveFi_LPGauge",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 33,
															"src": "3382:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 204,
															"name": "curveLPBalance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 189,
															"src": "3399:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 200,
																	"name": "curveFi_LPToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 31,
																	"src": "3353:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 199,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1450,
																"src": "3346:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$1450_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 201,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3346:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$1450",
																"typeString": "contract IERC20"
															}
														},
														"id": 202,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeApprove",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1549,
														"src": "3346:35:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$1450_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$1450_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 205,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3346:68:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 206,
												"nodeType": "ExpressionStatement",
												"src": "3346:68:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 211,
															"name": "curveLPBalance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 189,
															"src": "3464:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 208,
																	"name": "curveFi_LPGauge",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 33,
																	"src": "3439:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 207,
																"name": "ICurveFi_Gauge",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 814,
																"src": "3424:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_ICurveFi_Gauge_$814_$",
																	"typeString": "type(contract ICurveFi_Gauge)"
																}
															},
															"id": 209,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3424:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ICurveFi_Gauge_$814",
																"typeString": "contract ICurveFi_Gauge"
															}
														},
														"id": 210,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "deposit",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 782,
														"src": "3424:39:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256) external"
														}
													},
													"id": 212,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3424:55:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 213,
												"nodeType": "ExpressionStatement",
												"src": "3424:55:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 214,
														"name": "crvTokenClaim",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 450,
														"src": "3568:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 215,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3568:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 216,
												"nodeType": "ExpressionStatement",
												"src": "3568:15:0"
											},
											{
												"assignments": [
													218
												],
												"declarations": [
													{
														"constant": false,
														"id": 218,
														"name": "crvAmount",
														"nodeType": "VariableDeclaration",
														"scope": 237,
														"src": "3593:17:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 217,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3593:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 227,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 224,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1869,
																	"src": "3656:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_MoneyToCurve_$697",
																		"typeString": "contract MoneyToCurve"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_MoneyToCurve_$697",
																		"typeString": "contract MoneyToCurve"
																	}
																],
																"id": 223,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3648:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": "address"
															},
															"id": 225,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3648:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 220,
																	"name": "curveFi_CRVToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 37,
																	"src": "3620:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 219,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1450,
																"src": "3613:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$1450_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 221,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3613:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$1450",
																"typeString": "contract IERC20"
															}
														},
														"id": 222,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1395,
														"src": "3613:34:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 226,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3613:49:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3593:69:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 232,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1006,
																"src": "3710:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 233,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3710:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 234,
															"name": "crvAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 218,
															"src": "3724:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 229,
																	"name": "curveFi_CRVToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 37,
																	"src": "3679:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 228,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1450,
																"src": "3672:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$1450_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 230,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3672:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$1450",
																"typeString": "contract IERC20"
															}
														},
														"id": 231,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1483,
														"src": "3672:37:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$1450_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$1450_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 235,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3672:62:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 236,
												"nodeType": "ExpressionStatement",
												"src": "3672:62:0"
											}
										]
									},
									"documentation": "@notice Deposits 4 stablecoins (registered in Curve.Fi Y pool)\n@param _amounts Array of amounts for CurveFI stablecoins in pool (denormalized to token decimals)",
									"id": 238,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "multiStepDeposit",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 126,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 125,
												"name": "_amounts",
												"nodeType": "VariableDeclaration",
												"scope": 238,
												"src": "2638:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$4_memory_ptr",
													"typeString": "uint256[4]"
												},
												"typeName": {
													"baseType": {
														"id": 122,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2638:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 124,
													"length": {
														"argumentTypes": null,
														"hexValue": "34",
														"id": 123,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2646:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_4_by_1",
															"typeString": "int_const 4"
														},
														"value": "4"
													},
													"nodeType": "ArrayTypeName",
													"src": "2638:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$4_storage_ptr",
														"typeString": "uint256[4]"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2637:28:0"
									},
									"returnParameters": {
										"id": 127,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2673:0:0"
									},
									"scope": 697,
									"src": "2612:1130:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 387,
										"nodeType": "Block",
										"src": "4003:1390:0",
										"statements": [
											{
												"assignments": [
													249
												],
												"declarations": [
													{
														"constant": false,
														"id": 249,
														"name": "stablecoins",
														"nodeType": "VariableDeclaration",
														"scope": 387,
														"src": "4013:29:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$4_memory_ptr",
															"typeString": "address[4]"
														},
														"typeName": {
															"baseType": {
																"id": 247,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "4013:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 248,
															"length": {
																"argumentTypes": null,
																"hexValue": "34",
																"id": 246,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4021:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_4_by_1",
																	"typeString": "int_const 4"
																},
																"value": "4"
															},
															"nodeType": "ArrayTypeName",
															"src": "4013:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$4_storage_ptr",
																"typeString": "address[4]"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 255,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 251,
																	"name": "curveFi_Deposit",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 27,
																	"src": "4063:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 250,
																"name": "ICurveFi_DepositY",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 758,
																"src": "4045:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_ICurveFi_DepositY_$758_$",
																	"typeString": "type(contract ICurveFi_DepositY)"
																}
															},
															"id": 252,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4045:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ICurveFi_DepositY_$758",
																"typeString": "contract ICurveFi_DepositY"
															}
														},
														"id": 253,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "underlying_coins",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 747,
														"src": "4045:51:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_array$_t_address_$4_memory_ptr_$",
															"typeString": "function () view external returns (address[4] memory)"
														}
													},
													"id": 254,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4045:53:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$4_memory_ptr",
														"typeString": "address[4] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4013:85:0"
											},
											{
												"assignments": [
													257
												],
												"declarations": [
													{
														"constant": false,
														"id": 257,
														"name": "nWithdraw",
														"nodeType": "VariableDeclaration",
														"scope": 387,
														"src": "4175:17:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 256,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4175:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 258,
												"initialValue": null,
												"nodeType": "VariableDeclarationStatement",
												"src": "4175:17:0"
											},
											{
												"assignments": [
													260
												],
												"declarations": [
													{
														"constant": false,
														"id": 260,
														"name": "i",
														"nodeType": "VariableDeclaration",
														"scope": 387,
														"src": "4202:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 259,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4202:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 261,
												"initialValue": null,
												"nodeType": "VariableDeclarationStatement",
												"src": "4202:9:0"
											},
											{
												"body": {
													"id": 287,
													"nodeType": "Block",
													"src": "4262:90:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 285,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 273,
																	"name": "nWithdraw",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 257,
																	"src": "4276:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"baseExpression": {
																						"argumentTypes": null,
																						"id": 277,
																						"name": "stablecoins",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 249,
																						"src": "4312:11:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_array$_t_address_$4_memory_ptr",
																							"typeString": "address[4] memory"
																						}
																					},
																					"id": 279,
																					"indexExpression": {
																						"argumentTypes": null,
																						"id": 278,
																						"name": "i",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 260,
																						"src": "4324:1:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "4312:14:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"argumentTypes": null,
																					"baseExpression": {
																						"argumentTypes": null,
																						"id": 280,
																						"name": "_amounts",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 242,
																						"src": "4328:8:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_array$_t_uint256_$4_memory_ptr",
																							"typeString": "uint256[4] memory"
																						}
																					},
																					"id": 282,
																					"indexExpression": {
																						"argumentTypes": null,
																						"id": 281,
																						"name": "i",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 260,
																						"src": "4337:1:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "4328:11:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 276,
																				"name": "normalize",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 696,
																				"src": "4302:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
																					"typeString": "function (address,uint256) view returns (uint256)"
																				}
																			},
																			"id": 283,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "4302:38:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"id": 274,
																			"name": "nWithdraw",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 257,
																			"src": "4288:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 275,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "add",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1045,
																		"src": "4288:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 284,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4288:53:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4276:65:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 286,
															"nodeType": "ExpressionStatement",
															"src": "4276:65:0"
														}
													]
												},
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 269,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 266,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 260,
														"src": "4233:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 267,
															"name": "stablecoins",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 249,
															"src": "4237:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$4_memory_ptr",
																"typeString": "address[4] memory"
															}
														},
														"id": 268,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "4237:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4233:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 288,
												"initializationExpression": {
													"expression": {
														"argumentTypes": null,
														"id": 264,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"argumentTypes": null,
															"id": 262,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 260,
															"src": "4226:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"argumentTypes": null,
															"hexValue": "30",
															"id": 263,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4230:1:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "4226:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 265,
													"nodeType": "ExpressionStatement",
													"src": "4226:5:0"
												},
												"loopExpression": {
													"expression": {
														"argumentTypes": null,
														"id": 271,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "4257:3:0",
														"subExpression": {
															"argumentTypes": null,
															"id": 270,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 260,
															"src": "4257:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 272,
													"nodeType": "ExpressionStatement",
													"src": "4257:3:0"
												},
												"nodeType": "ForStatement",
												"src": "4221:131:0"
											},
											{
												"assignments": [
													290
												],
												"declarations": [
													{
														"constant": false,
														"id": 290,
														"name": "withdrawShares",
														"nodeType": "VariableDeclaration",
														"scope": 387,
														"src": "4362:22:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 289,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4362:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 294,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 292,
															"name": "nWithdraw",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 257,
															"src": "4403:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 291,
														"name": "calculateShares",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 476,
														"src": "4387:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256) view returns (uint256)"
														}
													},
													"id": 293,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4387:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4362:51:0"
											},
											{
												"assignments": [
													296
												],
												"declarations": [
													{
														"constant": false,
														"id": 296,
														"name": "notStaked",
														"nodeType": "VariableDeclaration",
														"scope": 387,
														"src": "4477:17:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 295,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4477:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 299,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 297,
														"name": "curveLPTokenUnstaked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 418,
														"src": "4497:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
															"typeString": "function () view returns (uint256)"
														}
													},
													"id": 298,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4497:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4477:42:0"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 302,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 300,
														"name": "notStaked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 296,
														"src": "4533:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 301,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4545:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "4533:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 311,
												"nodeType": "IfStatement",
												"src": "4529:90:0",
												"trueBody": {
													"id": 310,
													"nodeType": "Block",
													"src": "4548:71:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 308,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 303,
																	"name": "withdrawShares",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 290,
																	"src": "4562:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 306,
																			"name": "notStaked",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 296,
																			"src": "4598:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"id": 304,
																			"name": "withdrawShares",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 290,
																			"src": "4579:14:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 305,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sub",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1061,
																		"src": "4579:18:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 307,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4579:29:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4562:46:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 309,
															"nodeType": "ExpressionStatement",
															"src": "4562:46:0"
														}
													]
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 316,
															"name": "withdrawShares",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 290,
															"src": "4724:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 313,
																	"name": "curveFi_LPGauge",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 33,
																	"src": "4698:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 312,
																"name": "ICurveFi_Gauge",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 814,
																"src": "4683:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_ICurveFi_Gauge_$814_$",
																	"typeString": "type(contract ICurveFi_Gauge)"
																}
															},
															"id": 314,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4683:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ICurveFi_Gauge_$814",
																"typeString": "contract ICurveFi_Gauge"
															}
														},
														"id": 315,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "withdraw",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 787,
														"src": "4683:40:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256) external"
														}
													},
													"id": 317,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4683:56:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 318,
												"nodeType": "ExpressionStatement",
												"src": "4683:56:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 323,
															"name": "curveFi_Deposit",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "4848:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 324,
															"name": "withdrawShares",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 290,
															"src": "4865:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 320,
																	"name": "curveFi_LPToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 31,
																	"src": "4819:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 319,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1450,
																"src": "4812:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$1450_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 321,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4812:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$1450",
																"typeString": "contract IERC20"
															}
														},
														"id": 322,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeApprove",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1549,
														"src": "4812:35:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$1450_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$1450_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 325,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4812:68:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 326,
												"nodeType": "ExpressionStatement",
												"src": "4812:68:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 331,
															"name": "_amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 242,
															"src": "4952:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$4_memory_ptr",
																"typeString": "uint256[4] memory"
															}
														},
														{
															"argumentTypes": null,
															"id": 332,
															"name": "withdrawShares",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 290,
															"src": "4962:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_array$_t_uint256_$4_memory_ptr",
																"typeString": "uint256[4] memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 328,
																	"name": "curveFi_Deposit",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 27,
																	"src": "4908:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 327,
																"name": "ICurveFi_DepositY",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 758,
																"src": "4890:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_ICurveFi_DepositY_$758_$",
																	"typeString": "type(contract ICurveFi_DepositY)"
																}
															},
															"id": 329,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4890:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ICurveFi_DepositY_$758",
																"typeString": "contract ICurveFi_DepositY"
															}
														},
														"id": 330,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "remove_liquidity_imbalance",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 726,
														"src": "4890:61:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_array$_t_uint256_$4_memory_ptr_$_t_uint256_$returns$__$",
															"typeString": "function (uint256[4] memory,uint256) external"
														}
													},
													"id": 333,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4890:87:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 334,
												"nodeType": "ExpressionStatement",
												"src": "4890:87:0"
											},
											{
												"body": {
													"id": 385,
													"nodeType": "Block",
													"src": "5090:297:0",
													"statements": [
														{
															"assignments": [
																347
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 347,
																	"name": "stablecoin",
																	"nodeType": "VariableDeclaration",
																	"scope": 385,
																	"src": "5104:17:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$1450",
																		"typeString": "contract IERC20"
																	},
																	"typeName": {
																		"contractScope": null,
																		"id": 346,
																		"name": "IERC20",
																		"nodeType": "UserDefinedTypeName",
																		"referencedDeclaration": 1450,
																		"src": "5104:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$1450",
																			"typeString": "contract IERC20"
																		}
																	},
																	"value": null,
																	"visibility": "internal"
																}
															],
															"id": 353,
															"initialValue": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 349,
																			"name": "stablecoins",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 249,
																			"src": "5131:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_address_$4_memory_ptr",
																				"typeString": "address[4] memory"
																			}
																		},
																		"id": 351,
																		"indexExpression": {
																			"argumentTypes": null,
																			"id": 350,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 260,
																			"src": "5143:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "5131:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 348,
																	"name": "IERC20",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1450,
																	"src": "5124:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC20_$1450_$",
																		"typeString": "type(contract IERC20)"
																	}
																},
																"id": 352,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5124:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$1450",
																	"typeString": "contract IERC20"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "5104:42:0"
														},
														{
															"assignments": [
																355
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 355,
																	"name": "balance",
																	"nodeType": "VariableDeclaration",
																	"scope": 385,
																	"src": "5160:15:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 354,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "5160:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"value": null,
																	"visibility": "internal"
																}
															],
															"id": 362,
															"initialValue": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"id": 359,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1869,
																				"src": "5207:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_MoneyToCurve_$697",
																					"typeString": "contract MoneyToCurve"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_MoneyToCurve_$697",
																					"typeString": "contract MoneyToCurve"
																				}
																			],
																			"id": 358,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5199:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": "address"
																		},
																		"id": 360,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5199:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"id": 356,
																		"name": "stablecoin",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 347,
																		"src": "5178:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$1450",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 357,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "balanceOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1395,
																	"src": "5178:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view external returns (uint256)"
																	}
																},
																"id": 361,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5178:35:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "5160:53:0"
														},
														{
															"assignments": [
																364
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 364,
																	"name": "amount",
																	"nodeType": "VariableDeclaration",
																	"scope": 385,
																	"src": "5227:14:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 363,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "5227:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"value": null,
																	"visibility": "internal"
																}
															],
															"id": 376,
															"initialValue": {
																"argumentTypes": null,
																"condition": {
																	"argumentTypes": null,
																	"components": [
																		{
																			"argumentTypes": null,
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 369,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"argumentTypes": null,
																				"id": 365,
																				"name": "balance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 355,
																				"src": "5245:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "<=",
																			"rightExpression": {
																				"argumentTypes": null,
																				"baseExpression": {
																					"argumentTypes": null,
																					"id": 366,
																					"name": "_amounts",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 242,
																					"src": "5256:8:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_uint256_$4_memory_ptr",
																						"typeString": "uint256[4] memory"
																					}
																				},
																				"id": 368,
																				"indexExpression": {
																					"argumentTypes": null,
																					"id": 367,
																					"name": "i",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 260,
																					"src": "5265:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "5256:11:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "5245:22:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		}
																	],
																	"id": 370,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "5244:24:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"falseExpression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 372,
																		"name": "_amounts",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 242,
																		"src": "5281:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$4_memory_ptr",
																			"typeString": "uint256[4] memory"
																		}
																	},
																	"id": 374,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 373,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 260,
																		"src": "5290:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "5281:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 375,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "Conditional",
																"src": "5244:48:0",
																"trueExpression": {
																	"argumentTypes": null,
																	"id": 371,
																	"name": "balance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 355,
																	"src": "5271:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "5227:65:0"
														},
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 380,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1006,
																			"src": "5355:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																				"typeString": "function () view returns (address payable)"
																			}
																		},
																		"id": 381,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5355:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 382,
																		"name": "amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 364,
																		"src": "5369:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"id": 377,
																		"name": "stablecoin",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 347,
																		"src": "5331:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$1450",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 379,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "safeTransfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1483,
																	"src": "5331:23:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$1450_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$1450_$",
																		"typeString": "function (contract IERC20,address,uint256)"
																	}
																},
																"id": 383,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5331:45:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 384,
															"nodeType": "ExpressionStatement",
															"src": "5331:45:0"
														}
													]
												},
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 342,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 339,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 260,
														"src": "5061:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 340,
															"name": "stablecoins",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 249,
															"src": "5066:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$4_memory_ptr",
																"typeString": "address[4] memory"
															}
														},
														"id": 341,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "5066:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5061:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 386,
												"initializationExpression": {
													"expression": {
														"argumentTypes": null,
														"id": 337,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"argumentTypes": null,
															"id": 335,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 260,
															"src": "5054:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"argumentTypes": null,
															"hexValue": "30",
															"id": 336,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5058:1:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "5054:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 338,
													"nodeType": "ExpressionStatement",
													"src": "5054:5:0"
												},
												"loopExpression": {
													"expression": {
														"argumentTypes": null,
														"id": 344,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "5086:3:0",
														"subExpression": {
															"argumentTypes": null,
															"id": 343,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 260,
															"src": "5086:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 345,
													"nodeType": "ExpressionStatement",
													"src": "5086:3:0"
												},
												"nodeType": "ForStatement",
												"src": "5049:338:0"
											}
										]
									},
									"documentation": "@notice Withdraws 4 stablecoins (registered in Curve.Fi Y pool)\n@param _amounts Array of amounts for CurveFI stablecoins in pool (denormalized to token decimals)",
									"id": 388,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "multiStepWithdraw",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 243,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 242,
												"name": "_amounts",
												"nodeType": "VariableDeclaration",
												"scope": 388,
												"src": "3968:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$4_memory_ptr",
													"typeString": "uint256[4]"
												},
												"typeName": {
													"baseType": {
														"id": 239,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "3968:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 241,
													"length": {
														"argumentTypes": null,
														"hexValue": "34",
														"id": 240,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3976:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_4_by_1",
															"typeString": "int_const 4"
														},
														"value": "4"
													},
													"nodeType": "ArrayTypeName",
													"src": "3968:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$4_storage_ptr",
														"typeString": "uint256[4]"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3967:28:0"
									},
									"returnParameters": {
										"id": 244,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4003:0:0"
									},
									"scope": 697,
									"src": "3941:1452:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 402,
										"nodeType": "Block",
										"src": "5541:80:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 398,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1869,
																	"src": "5608:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_MoneyToCurve_$697",
																		"typeString": "contract MoneyToCurve"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_MoneyToCurve_$697",
																		"typeString": "contract MoneyToCurve"
																	}
																],
																"id": 397,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5600:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": "address"
															},
															"id": 399,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5600:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 394,
																	"name": "curveFi_LPGauge",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 33,
																	"src": "5573:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 393,
																"name": "ICurveFi_Gauge",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 814,
																"src": "5558:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_ICurveFi_Gauge_$814_$",
																	"typeString": "type(contract ICurveFi_Gauge)"
																}
															},
															"id": 395,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5558:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ICurveFi_Gauge_$814",
																"typeString": "contract ICurveFi_Gauge"
															}
														},
														"id": 396,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 777,
														"src": "5558:41:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 400,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5558:56:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 392,
												"id": 401,
												"nodeType": "Return",
												"src": "5551:63:0"
											}
										]
									},
									"documentation": "@notice Get amount of CurveFi LP tokens staked in the Gauge",
									"id": 403,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "curveLPTokenStaked",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 389,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5509:2:0"
									},
									"returnParameters": {
										"id": 392,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 391,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 403,
												"src": "5532:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 390,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5532:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5531:9:0"
									},
									"scope": 697,
									"src": "5482:139:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 417,
										"nodeType": "Block",
										"src": "5793:72:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 413,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1869,
																	"src": "5852:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_MoneyToCurve_$697",
																		"typeString": "contract MoneyToCurve"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_MoneyToCurve_$697",
																		"typeString": "contract MoneyToCurve"
																	}
																],
																"id": 412,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5844:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": "address"
															},
															"id": 414,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5844:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 409,
																	"name": "curveFi_LPToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 31,
																	"src": "5817:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 408,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1450,
																"src": "5810:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$1450_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 410,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5810:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$1450",
																"typeString": "contract IERC20"
															}
														},
														"id": 411,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1395,
														"src": "5810:33:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 415,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5810:48:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 407,
												"id": 416,
												"nodeType": "Return",
												"src": "5803:55:0"
											}
										]
									},
									"documentation": "@notice Get amount of unstaked CurveFi LP tokens (which lay on this contract)",
									"id": 418,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "curveLPTokenUnstaked",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 404,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5761:2:0"
									},
									"returnParameters": {
										"id": 407,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 406,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 418,
												"src": "5784:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 405,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5784:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5783:9:0"
									},
									"scope": 697,
									"src": "5732:133:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 438,
										"nodeType": "Block",
										"src": "6025:142:0",
										"statements": [
											{
												"assignments": [
													424
												],
												"declarations": [
													{
														"constant": false,
														"id": 424,
														"name": "staked",
														"nodeType": "VariableDeclaration",
														"scope": 438,
														"src": "6035:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 423,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6035:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 427,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 425,
														"name": "curveLPTokenStaked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 403,
														"src": "6052:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
															"typeString": "function () view returns (uint256)"
														}
													},
													"id": 426,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6052:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6035:37:0"
											},
											{
												"assignments": [
													429
												],
												"declarations": [
													{
														"constant": false,
														"id": 429,
														"name": "unstaked",
														"nodeType": "VariableDeclaration",
														"scope": 438,
														"src": "6082:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 428,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6082:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 432,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 430,
														"name": "curveLPTokenUnstaked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 418,
														"src": "6101:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
															"typeString": "function () view returns (uint256)"
														}
													},
													"id": 431,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6101:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6082:41:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 435,
															"name": "staked",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 424,
															"src": "6153:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 433,
															"name": "unstaked",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 429,
															"src": "6140:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 434,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "add",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1045,
														"src": "6140:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 436,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6140:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 422,
												"id": 437,
												"nodeType": "Return",
												"src": "6133:27:0"
											}
										]
									},
									"documentation": "@notice Get full amount of Curve LP tokens available for this contract",
									"id": 439,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "curveLPTokenBalance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 419,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5993:2:0"
									},
									"returnParameters": {
										"id": 422,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 421,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 439,
												"src": "6016:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 420,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6016:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6015:9:0"
									},
									"scope": 697,
									"src": "5965:202:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 449,
										"nodeType": "Block",
										"src": "6255:73:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 446,
															"name": "curveFi_LPGauge",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 33,
															"src": "6305:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 443,
																	"name": "curveFi_CRVMinter",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 35,
																	"src": "6281:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 442,
																"name": "ICurveFi_Minter",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 848,
																"src": "6265:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_ICurveFi_Minter_$848_$",
																	"typeString": "type(contract ICurveFi_Minter)"
																}
															},
															"id": 444,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6265:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ICurveFi_Minter_$848",
																"typeString": "contract ICurveFi_Minter"
															}
														},
														"id": 445,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "mint",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 821,
														"src": "6265:39:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address) external"
														}
													},
													"id": 447,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6265:56:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 448,
												"nodeType": "ExpressionStatement",
												"src": "6265:56:0"
											}
										]
									},
									"documentation": "@notice Claim CRV reward",
									"id": 450,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "crvTokenClaim",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 440,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6243:2:0"
									},
									"returnParameters": {
										"id": 441,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6255:0:0"
									},
									"scope": 697,
									"src": "6221:107:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 475,
										"nodeType": "Block",
										"src": "6609:181:0",
										"statements": [
											{
												"assignments": [
													458
												],
												"declarations": [
													{
														"constant": false,
														"id": 458,
														"name": "nBalance",
														"nodeType": "VariableDeclaration",
														"scope": 475,
														"src": "6619:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 457,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6619:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 461,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 459,
														"name": "normalizedBalance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 637,
														"src": "6638:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
															"typeString": "function () view returns (uint256)"
														}
													},
													"id": 460,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6638:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6619:38:0"
											},
											{
												"assignments": [
													463
												],
												"declarations": [
													{
														"constant": false,
														"id": 463,
														"name": "poolShares",
														"nodeType": "VariableDeclaration",
														"scope": 475,
														"src": "6667:18:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 462,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6667:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 466,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 464,
														"name": "curveLPTokenBalance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 439,
														"src": "6688:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
															"typeString": "function () view returns (uint256)"
														}
													},
													"id": 465,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6688:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6667:42:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 472,
															"name": "nBalance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 458,
															"src": "6774:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 469,
																	"name": "normalizedWithdraw",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 452,
																	"src": "6750:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 467,
																	"name": "poolShares",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 463,
																	"src": "6735:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 468,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "mul",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1122,
																"src": "6735:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 470,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6735:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 471,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1138,
														"src": "6735:38:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 473,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6735:48:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 456,
												"id": 474,
												"nodeType": "Return",
												"src": "6728:55:0"
											}
										]
									},
									"documentation": "@notice Calculate shared part of this contract in LP token distriution\n@param normalizedWithdraw amount of stablecoins to withdraw normalized to 18 decimals",
									"id": 476,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "calculateShares",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 453,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 452,
												"name": "normalizedWithdraw",
												"nodeType": "VariableDeclaration",
												"scope": 476,
												"src": "6550:26:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 451,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6550:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6549:28:0"
									},
									"returnParameters": {
										"id": 456,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 455,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 476,
												"src": "6600:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 454,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6600:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6599:9:0"
									},
									"scope": 697,
									"src": "6525:265:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 579,
										"nodeType": "Block",
										"src": "6946:971:0",
										"statements": [
											{
												"assignments": [
													487
												],
												"declarations": [
													{
														"constant": false,
														"id": 487,
														"name": "stablecoins",
														"nodeType": "VariableDeclaration",
														"scope": 579,
														"src": "6956:29:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$4_memory_ptr",
															"typeString": "address[4]"
														},
														"typeName": {
															"baseType": {
																"id": 485,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6956:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 486,
															"length": {
																"argumentTypes": null,
																"hexValue": "34",
																"id": 484,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6964:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_4_by_1",
																	"typeString": "int_const 4"
																},
																"value": "4"
															},
															"nodeType": "ArrayTypeName",
															"src": "6956:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$4_storage_ptr",
																"typeString": "address[4]"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 493,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 489,
																	"name": "curveFi_Deposit",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 27,
																	"src": "7006:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 488,
																"name": "ICurveFi_DepositY",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 758,
																"src": "6988:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_ICurveFi_DepositY_$758_$",
																	"typeString": "type(contract ICurveFi_DepositY)"
																}
															},
															"id": 490,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6988:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ICurveFi_DepositY_$758",
																"typeString": "contract ICurveFi_DepositY"
															}
														},
														"id": 491,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "underlying_coins",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 747,
														"src": "6988:51:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_array$_t_address_$4_memory_ptr_$",
															"typeString": "function () view external returns (address[4] memory)"
														}
													},
													"id": 492,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6988:53:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$4_memory_ptr",
														"typeString": "address[4] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6956:85:0"
											},
											{
												"assignments": [
													495
												],
												"declarations": [
													{
														"constant": false,
														"id": 495,
														"name": "curveLPBalance",
														"nodeType": "VariableDeclaration",
														"scope": 579,
														"src": "7052:22:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 494,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7052:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 498,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 496,
														"name": "curveLPTokenBalance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 439,
														"src": "7077:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
															"typeString": "function () view returns (uint256)"
														}
													},
													"id": 497,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7077:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7052:46:0"
											},
											{
												"assignments": [
													500
												],
												"declarations": [
													{
														"constant": false,
														"id": 500,
														"name": "curveLPTokenSupply",
														"nodeType": "VariableDeclaration",
														"scope": 579,
														"src": "7108:26:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 499,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7108:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 506,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 502,
																	"name": "curveFi_LPToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 31,
																	"src": "7144:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 501,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1450,
																"src": "7137:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$1450_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 503,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7137:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$1450",
																"typeString": "contract IERC20"
															}
														},
														"id": 504,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "totalSupply",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1388,
														"src": "7137:35:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
															"typeString": "function () view external returns (uint256)"
														}
													},
													"id": 505,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7137:37:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7108:66:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 510,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 508,
																"name": "curveLPTokenSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 500,
																"src": "7193:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 509,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7214:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "7193:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "4e6f204375727665204c5020746f6b656e73206d696e746564",
															"id": 511,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7217:27:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b6f2249058aed4a67819a3ec079e94f22e4f2b977980a2865de8107f57b4e30f",
																"typeString": "literal_string \"No Curve LP tokens minted\""
															},
															"value": "No Curve LP tokens minted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b6f2249058aed4a67819a3ec079e94f22e4f2b977980a2865de8107f57b4e30f",
																"typeString": "literal_string \"No Curve LP tokens minted\""
															}
														],
														"id": 507,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1832,
															1833
														],
														"referencedDeclaration": 1833,
														"src": "7185:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 512,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7185:60:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 513,
												"nodeType": "ExpressionStatement",
												"src": "7185:60:0"
											},
											{
												"body": {
													"id": 577,
													"nodeType": "Block",
													"src": "7305:606:0",
													"statements": [
														{
															"assignments": [
																526
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 526,
																	"name": "yLPTokenBalance",
																	"nodeType": "VariableDeclaration",
																	"scope": 577,
																	"src": "7354:23:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 525,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "7354:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"value": null,
																	"visibility": "internal"
																}
															],
															"id": 535,
															"initialValue": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"id": 532,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 515,
																				"src": "7425:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 531,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "7418:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_int128_$",
																				"typeString": "type(int128)"
																			},
																			"typeName": "int128"
																		},
																		"id": 533,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7418:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int128",
																			"typeString": "int128"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_int128",
																			"typeString": "int128"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"id": 528,
																				"name": "curveFi_Swap",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 29,
																				"src": "7395:12:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 527,
																			"name": "ICurveFi_SwapY",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 903,
																			"src": "7380:14:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_ICurveFi_SwapY_$903_$",
																				"typeString": "type(contract ICurveFi_SwapY)"
																			}
																		},
																		"id": 529,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7380:28:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_ICurveFi_SwapY_$903",
																			"typeString": "contract ICurveFi_SwapY"
																		}
																	},
																	"id": 530,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "balances",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 895,
																	"src": "7380:37:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_int128_$returns$_t_uint256_$",
																		"typeString": "function (int128) view external returns (uint256)"
																	}
																},
																"id": 534,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7380:48:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "7354:74:0"
														},
														{
															"assignments": [
																537
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 537,
																	"name": "yCoin",
																	"nodeType": "VariableDeclaration",
																	"scope": 577,
																	"src": "7442:13:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"typeName": {
																		"id": 536,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "7442:7:0",
																		"stateMutability": "nonpayable",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"value": null,
																	"visibility": "internal"
																}
															],
															"id": 546,
															"initialValue": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"id": 543,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 515,
																				"src": "7500:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 542,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "7493:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_int128_$",
																				"typeString": "type(int128)"
																			},
																			"typeName": "int128"
																		},
																		"id": 544,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7493:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int128",
																			"typeString": "int128"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_int128",
																			"typeString": "int128"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"id": 539,
																				"name": "curveFi_Swap",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 29,
																				"src": "7473:12:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 538,
																			"name": "ICurveFi_SwapY",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 903,
																			"src": "7458:14:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_ICurveFi_SwapY_$903_$",
																				"typeString": "type(contract ICurveFi_SwapY)"
																			}
																		},
																		"id": 540,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7458:28:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_ICurveFi_SwapY_$903",
																			"typeString": "contract ICurveFi_SwapY"
																		}
																	},
																	"id": 541,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "coins",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 902,
																	"src": "7458:34:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_int128_$returns$_t_address_$",
																		"typeString": "function (int128) view external returns (address)"
																	}
																},
																"id": 545,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7458:45:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "7442:61:0"
														},
														{
															"assignments": [
																548
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 548,
																	"name": "yShares",
																	"nodeType": "VariableDeclaration",
																	"scope": 577,
																	"src": "7568:15:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 547,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "7568:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"value": null,
																	"visibility": "internal"
																}
															],
															"id": 556,
															"initialValue": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 554,
																		"name": "curveLPTokenSupply",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 500,
																		"src": "7626:18:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"id": 551,
																				"name": "curveLPBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 495,
																				"src": "7606:14:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"argumentTypes": null,
																				"id": 549,
																				"name": "yLPTokenBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 526,
																				"src": "7586:15:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 550,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "mul",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1122,
																			"src": "7586:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																				"typeString": "function (uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 552,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7586:35:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 553,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "div",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1138,
																	"src": "7586:39:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 555,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7586:59:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "7568:77:0"
														},
														{
															"assignments": [
																558
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 558,
																	"name": "yPrice",
																	"nodeType": "VariableDeclaration",
																	"scope": 577,
																	"src": "7712:14:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 557,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "7712:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"value": null,
																	"visibility": "internal"
																}
															],
															"id": 564,
															"initialValue": {
																"argumentTypes": null,
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"id": 560,
																				"name": "yCoin",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 537,
																				"src": "7737:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 559,
																			"name": "IYERC20",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 991,
																			"src": "7729:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IYERC20_$991_$",
																				"typeString": "type(contract IYERC20)"
																			}
																		},
																		"id": 561,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7729:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IYERC20_$991",
																			"typeString": "contract IYERC20"
																		}
																	},
																	"id": 562,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "getPricePerFullShare",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 985,
																	"src": "7729:35:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
																		"typeString": "function () view external returns (uint256)"
																	}
																},
																"id": 563,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7729:37:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "7712:54:0"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 575,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 565,
																		"name": "balances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 481,
																		"src": "7857:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$4_memory_ptr",
																			"typeString": "uint256[4] memory"
																		}
																	},
																	"id": 567,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 566,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 515,
																		"src": "7866:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "7857:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"hexValue": "31653138",
																			"id": 573,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "7895:4:0",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1000000000000000000_by_1",
																				"typeString": "int_const 1000000000000000000"
																			},
																			"value": "1e18"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_1000000000000000000_by_1",
																				"typeString": "int_const 1000000000000000000"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"id": 570,
																					"name": "yShares",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 548,
																					"src": "7882:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"argumentTypes": null,
																					"id": 568,
																					"name": "yPrice",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 558,
																					"src": "7871:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 569,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "mul",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1122,
																				"src": "7871:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 571,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7871:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 572,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "div",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1138,
																		"src": "7871:23:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 574,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7871:29:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7857:43:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 576,
															"nodeType": "ExpressionStatement",
															"src": "7857:43:0"
														}
													]
												},
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 521,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 518,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 515,
														"src": "7276:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 519,
															"name": "stablecoins",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 487,
															"src": "7280:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$4_memory_ptr",
																"typeString": "address[4] memory"
															}
														},
														"id": 520,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "7280:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7276:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 578,
												"initializationExpression": {
													"assignments": [
														515
													],
													"declarations": [
														{
															"constant": false,
															"id": 515,
															"name": "i",
															"nodeType": "VariableDeclaration",
															"scope": 578,
															"src": "7261:9:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 514,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "7261:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"value": null,
															"visibility": "internal"
														}
													],
													"id": 517,
													"initialValue": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 516,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7273:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "7261:13:0"
												},
												"loopExpression": {
													"expression": {
														"argumentTypes": null,
														"id": 523,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "7300:3:0",
														"subExpression": {
															"argumentTypes": null,
															"id": 522,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 515,
															"src": "7300:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 524,
													"nodeType": "ExpressionStatement",
													"src": "7300:3:0"
												},
												"nodeType": "ForStatement",
												"src": "7256:655:0"
											}
										]
									},
									"documentation": "@notice Balances of stablecoins available for withdraw",
									"id": 580,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOfAll",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 477,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6895:2:0"
									},
									"returnParameters": {
										"id": 482,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 481,
												"name": "balances",
												"nodeType": "VariableDeclaration",
												"scope": 580,
												"src": "6918:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$4_memory_ptr",
													"typeString": "uint256[4]"
												},
												"typeName": {
													"baseType": {
														"id": 478,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "6918:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 480,
													"length": {
														"argumentTypes": null,
														"hexValue": "34",
														"id": 479,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6926:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_4_by_1",
															"typeString": "int_const 4"
														},
														"value": "4"
													},
													"nodeType": "ArrayTypeName",
													"src": "6918:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$4_storage_ptr",
														"typeString": "uint256[4]"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6917:28:0"
									},
									"scope": 697,
									"src": "6874:1043:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 636,
										"nodeType": "Block",
										"src": "8085:334:0",
										"statements": [
											{
												"assignments": [
													589
												],
												"declarations": [
													{
														"constant": false,
														"id": 589,
														"name": "stablecoins",
														"nodeType": "VariableDeclaration",
														"scope": 636,
														"src": "8095:29:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$4_memory_ptr",
															"typeString": "address[4]"
														},
														"typeName": {
															"baseType": {
																"id": 587,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8095:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 588,
															"length": {
																"argumentTypes": null,
																"hexValue": "34",
																"id": 586,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8103:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_4_by_1",
																	"typeString": "int_const 4"
																},
																"value": "4"
															},
															"nodeType": "ArrayTypeName",
															"src": "8095:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$4_storage_ptr",
																"typeString": "address[4]"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 595,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 591,
																	"name": "curveFi_Deposit",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 27,
																	"src": "8145:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 590,
																"name": "ICurveFi_DepositY",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 758,
																"src": "8127:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_ICurveFi_DepositY_$758_$",
																	"typeString": "type(contract ICurveFi_DepositY)"
																}
															},
															"id": 592,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8127:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ICurveFi_DepositY_$758",
																"typeString": "contract ICurveFi_DepositY"
															}
														},
														"id": 593,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "underlying_coins",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 747,
														"src": "8127:51:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_array$_t_address_$4_memory_ptr_$",
															"typeString": "function () view external returns (address[4] memory)"
														}
													},
													"id": 594,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8127:53:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$4_memory_ptr",
														"typeString": "address[4] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8095:85:0"
											},
											{
												"assignments": [
													600
												],
												"declarations": [
													{
														"constant": false,
														"id": 600,
														"name": "balances",
														"nodeType": "VariableDeclaration",
														"scope": 636,
														"src": "8190:26:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$4_memory_ptr",
															"typeString": "uint256[4]"
														},
														"typeName": {
															"baseType": {
																"id": 598,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "8190:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 599,
															"length": {
																"argumentTypes": null,
																"hexValue": "34",
																"id": 597,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8198:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_4_by_1",
																	"typeString": "int_const 4"
																},
																"value": "4"
															},
															"nodeType": "ArrayTypeName",
															"src": "8190:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$4_storage_ptr",
																"typeString": "uint256[4]"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 603,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 601,
														"name": "balanceOfAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 580,
														"src": "8219:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_array$_t_uint256_$4_memory_ptr_$",
															"typeString": "function () view returns (uint256[4] memory)"
														}
													},
													"id": 602,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8219:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$4_memory_ptr",
														"typeString": "uint256[4] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8190:43:0"
											},
											{
												"assignments": [
													605
												],
												"declarations": [
													{
														"constant": false,
														"id": 605,
														"name": "summ",
														"nodeType": "VariableDeclaration",
														"scope": 636,
														"src": "8244:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 604,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8244:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 606,
												"initialValue": null,
												"nodeType": "VariableDeclarationStatement",
												"src": "8244:12:0"
											},
											{
												"body": {
													"id": 632,
													"nodeType": "Block",
													"src": "8312:80:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 630,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 618,
																	"name": "summ",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 605,
																	"src": "8326:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"baseExpression": {
																						"argumentTypes": null,
																						"id": 622,
																						"name": "stablecoins",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 589,
																						"src": "8352:11:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_array$_t_address_$4_memory_ptr",
																							"typeString": "address[4] memory"
																						}
																					},
																					"id": 624,
																					"indexExpression": {
																						"argumentTypes": null,
																						"id": 623,
																						"name": "i",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 608,
																						"src": "8364:1:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "8352:14:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"argumentTypes": null,
																					"baseExpression": {
																						"argumentTypes": null,
																						"id": 625,
																						"name": "balances",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 600,
																						"src": "8368:8:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_array$_t_uint256_$4_memory_ptr",
																							"typeString": "uint256[4] memory"
																						}
																					},
																					"id": 627,
																					"indexExpression": {
																						"argumentTypes": null,
																						"id": 626,
																						"name": "i",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 608,
																						"src": "8377:1:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "8368:11:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 621,
																				"name": "normalize",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 696,
																				"src": "8342:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
																					"typeString": "function (address,uint256) view returns (uint256)"
																				}
																			},
																			"id": 628,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8342:38:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"id": 619,
																			"name": "summ",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 605,
																			"src": "8333:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 620,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "add",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1045,
																		"src": "8333:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 629,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8333:48:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "8326:55:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 631,
															"nodeType": "ExpressionStatement",
															"src": "8326:55:0"
														}
													]
												},
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 614,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 611,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 608,
														"src": "8284:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 612,
															"name": "stablecoins",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 589,
															"src": "8288:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$4_memory_ptr",
																"typeString": "address[4] memory"
															}
														},
														"id": 613,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "8288:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8284:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 633,
												"initializationExpression": {
													"assignments": [
														608
													],
													"declarations": [
														{
															"constant": false,
															"id": 608,
															"name": "i",
															"nodeType": "VariableDeclaration",
															"scope": 633,
															"src": "8271:9:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 607,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "8271:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"value": null,
															"visibility": "internal"
														}
													],
													"id": 610,
													"initialValue": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 609,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8281:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "8271:11:0"
												},
												"loopExpression": {
													"expression": {
														"argumentTypes": null,
														"id": 616,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "8308:3:0",
														"subExpression": {
															"argumentTypes": null,
															"id": 615,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 608,
															"src": "8308:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 617,
													"nodeType": "ExpressionStatement",
													"src": "8308:3:0"
												},
												"nodeType": "ForStatement",
												"src": "8266:126:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 634,
													"name": "summ",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 605,
													"src": "8408:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 584,
												"id": 635,
												"nodeType": "Return",
												"src": "8401:11:0"
											}
										]
									},
									"documentation": "@notice Balances of stablecoins available for withdraw normalized to 18 decimals",
									"id": 637,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "normalizedBalance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 581,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8053:2:0"
									},
									"returnParameters": {
										"id": 584,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 583,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 637,
												"src": "8076:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 582,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8076:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "8075:9:0"
									},
									"scope": 697,
									"src": "8027:392:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 695,
										"nodeType": "Block",
										"src": "8580:323:0",
										"statements": [
											{
												"assignments": [
													647
												],
												"declarations": [
													{
														"constant": false,
														"id": 647,
														"name": "decimals",
														"nodeType": "VariableDeclaration",
														"scope": 695,
														"src": "8590:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														},
														"typeName": {
															"id": 646,
															"name": "uint8",
															"nodeType": "ElementaryTypeName",
															"src": "8590:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 653,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 649,
																	"name": "coin",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 639,
																	"src": "8621:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 648,
																"name": "ERC20Detailed",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1381,
																"src": "8607:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_ERC20Detailed_$1381_$",
																	"typeString": "type(contract ERC20Detailed)"
																}
															},
															"id": 650,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8607:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ERC20Detailed_$1381",
																"typeString": "contract ERC20Detailed"
															}
														},
														"id": 651,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "decimals",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1380,
														"src": "8607:28:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_uint8_$",
															"typeString": "function () view external returns (uint8)"
														}
													},
													"id": 652,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8607:30:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8590:47:0"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													},
													"id": 656,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 654,
														"name": "decimals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 647,
														"src": "8651:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "3138",
														"id": 655,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8663:2:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_18_by_1",
															"typeString": "int_const 18"
														},
														"value": "18"
													},
													"src": "8651:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														},
														"id": 662,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 660,
															"name": "decimals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 647,
															"src": "8715:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"argumentTypes": null,
															"hexValue": "3138",
															"id": 661,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8726:2:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_18_by_1",
																"typeString": "int_const 18"
															},
															"value": "18"
														},
														"src": "8715:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": {
														"condition": {
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															"id": 678,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 676,
																"name": "decimals",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 647,
																"src": "8810:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "3138",
																"id": 677,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8821:2:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_18_by_1",
																	"typeString": "int_const 18"
																},
																"value": "18"
															},
															"src": "8810:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseBody": null,
														"id": 692,
														"nodeType": "IfStatement",
														"src": "8806:91:0",
														"trueBody": {
															"id": 691,
															"nodeType": "Block",
															"src": "8825:72:0",
															"statements": [
																{
																	"expression": {
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 688,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"argumentTypes": null,
																					"arguments": [
																						{
																							"argumentTypes": null,
																							"hexValue": "3130",
																							"id": 682,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "8865:2:0",
																							"subdenomination": null,
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_10_by_1",
																								"typeString": "int_const 10"
																							},
																							"value": "10"
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_rational_10_by_1",
																								"typeString": "int_const 10"
																							}
																						],
																						"id": 681,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "8857:7:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_uint256_$",
																							"typeString": "type(uint256)"
																						},
																						"typeName": "uint256"
																					},
																					"id": 683,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "8857:11:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "**",
																				"rightExpression": {
																					"argumentTypes": null,
																					"components": [
																						{
																							"argumentTypes": null,
																							"commonType": {
																								"typeIdentifier": "t_uint8",
																								"typeString": "uint8"
																							},
																							"id": 686,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftExpression": {
																								"argumentTypes": null,
																								"hexValue": "3138",
																								"id": 684,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "8871:2:0",
																								"subdenomination": null,
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_18_by_1",
																									"typeString": "int_const 18"
																								},
																								"value": "18"
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "-",
																							"rightExpression": {
																								"argumentTypes": null,
																								"id": 685,
																								"name": "decimals",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 647,
																								"src": "8876:8:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint8",
																									"typeString": "uint8"
																								}
																							},
																							"src": "8871:13:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint8",
																								"typeString": "uint8"
																							}
																						}
																					],
																					"id": 687,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "8870:15:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint8",
																						"typeString": "uint8"
																					}
																				},
																				"src": "8857:28:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"argumentTypes": null,
																				"id": 679,
																				"name": "amount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 641,
																				"src": "8846:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 680,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "mul",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1122,
																			"src": "8846:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																				"typeString": "function (uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 689,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8846:40:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"functionReturnParameters": 645,
																	"id": 690,
																	"nodeType": "Return",
																	"src": "8839:47:0"
																}
															]
														}
													},
													"id": 693,
													"nodeType": "IfStatement",
													"src": "8711:186:0",
													"trueBody": {
														"id": 675,
														"nodeType": "Block",
														"src": "8730:70:0",
														"statements": [
															{
																"expression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 672,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"argumentTypes": null,
																				"arguments": [
																					{
																						"argumentTypes": null,
																						"hexValue": "3130",
																						"id": 666,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "8770:2:0",
																						"subdenomination": null,
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_10_by_1",
																							"typeString": "int_const 10"
																						},
																						"value": "10"
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_rational_10_by_1",
																							"typeString": "int_const 10"
																						}
																					],
																					"id": 665,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "8762:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint256_$",
																						"typeString": "type(uint256)"
																					},
																					"typeName": "uint256"
																				},
																				"id": 667,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "8762:11:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"argumentTypes": null,
																				"components": [
																					{
																						"argumentTypes": null,
																						"commonType": {
																							"typeIdentifier": "t_uint8",
																							"typeString": "uint8"
																						},
																						"id": 670,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"argumentTypes": null,
																							"id": 668,
																							"name": "decimals",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 647,
																							"src": "8776:8:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint8",
																								"typeString": "uint8"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "-",
																						"rightExpression": {
																							"argumentTypes": null,
																							"hexValue": "3138",
																							"id": 669,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "8785:2:0",
																							"subdenomination": null,
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_18_by_1",
																								"typeString": "int_const 18"
																							},
																							"value": "18"
																						},
																						"src": "8776:11:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint8",
																							"typeString": "uint8"
																						}
																					}
																				],
																				"id": 671,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "8775:13:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				}
																			},
																			"src": "8762:26:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"id": 663,
																			"name": "amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 641,
																			"src": "8751:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 664,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "div",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1138,
																		"src": "8751:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 673,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8751:38:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"functionReturnParameters": 645,
																"id": 674,
																"nodeType": "Return",
																"src": "8744:45:0"
															}
														]
													}
												},
												"id": 694,
												"nodeType": "IfStatement",
												"src": "8647:250:0",
												"trueBody": {
													"id": 659,
													"nodeType": "Block",
													"src": "8667:38:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 657,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 641,
																"src": "8688:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 645,
															"id": 658,
															"nodeType": "Return",
															"src": "8681:13:0"
														}
													]
												}
											}
										]
									},
									"documentation": "@notice Util to normalize balance up to 18 decimals",
									"id": 696,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "normalize",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 642,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 639,
												"name": "coin",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "8519:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 638,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8519:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 641,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "8533:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 640,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8533:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "8518:30:0"
									},
									"returnParameters": {
										"id": 645,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 644,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "8571:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 643,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8571:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "8570:9:0"
									},
									"scope": 697,
									"src": "8500:403:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "internal"
								}
							],
							"scope": 698,
							"src": "1044:7861:0"
						}
					],
					"src": "0:8905:0"
				},
				"id": 0
			},
			"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/curvefi/ICurveFi_DepositY.sol": {
				"ast": {
					"absolutePath": "Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/curvefi/ICurveFi_DepositY.sol",
					"exportedSymbols": {
						"ICurveFi_DepositY": [
							758
						]
					},
					"id": 759,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 699,
							"literals": [
								"solidity",
								"^",
								"0.5",
								".12"
							],
							"nodeType": "PragmaDirective",
							"src": "0:24:1"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": "@dev Interface for Curve.Fi deposit contract for Y-pool.\n@dev See original implementation in official repository:\nhttps://github.com/curvefi/curve-contract/blob/master/contracts/pools/y/DepositY.vy",
							"fullyImplemented": false,
							"id": 758,
							"linearizedBaseContracts": [
								758
							],
							"name": "ICurveFi_DepositY",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": null,
									"documentation": null,
									"id": 708,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "add_liquidity",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 706,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 703,
												"name": "uamounts",
												"nodeType": "VariableDeclaration",
												"scope": 708,
												"src": "299:28:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$4_calldata_ptr",
													"typeString": "uint256[4]"
												},
												"typeName": {
													"baseType": {
														"id": 700,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "299:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 702,
													"length": {
														"argumentTypes": null,
														"hexValue": "34",
														"id": 701,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "307:1:1",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_4_by_1",
															"typeString": "int_const 4"
														},
														"value": "4"
													},
													"nodeType": "ArrayTypeName",
													"src": "299:10:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$4_storage_ptr",
														"typeString": "uint256[4]"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 705,
												"name": "min_mint_amount",
												"nodeType": "VariableDeclaration",
												"scope": 708,
												"src": "329:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 704,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "329:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "298:55:1"
									},
									"returnParameters": {
										"id": 707,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "362:0:1"
									},
									"scope": 758,
									"src": "276:87:1",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 717,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "remove_liquidity",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 715,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 710,
												"name": "_amount",
												"nodeType": "VariableDeclaration",
												"scope": 717,
												"src": "394:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 709,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "394:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 714,
												"name": "min_uamounts",
												"nodeType": "VariableDeclaration",
												"scope": 717,
												"src": "411:32:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$4_calldata_ptr",
													"typeString": "uint256[4]"
												},
												"typeName": {
													"baseType": {
														"id": 711,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "411:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 713,
													"length": {
														"argumentTypes": null,
														"hexValue": "34",
														"id": 712,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "419:1:1",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_4_by_1",
															"typeString": "int_const 4"
														},
														"value": "4"
													},
													"nodeType": "ArrayTypeName",
													"src": "411:10:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$4_storage_ptr",
														"typeString": "uint256[4]"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "393:51:1"
									},
									"returnParameters": {
										"id": 716,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "453:0:1"
									},
									"scope": 758,
									"src": "368:86:1",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 726,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "remove_liquidity_imbalance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 724,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 721,
												"name": "uamounts",
												"nodeType": "VariableDeclaration",
												"scope": 726,
												"src": "495:28:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$4_calldata_ptr",
													"typeString": "uint256[4]"
												},
												"typeName": {
													"baseType": {
														"id": 718,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "495:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 720,
													"length": {
														"argumentTypes": null,
														"hexValue": "34",
														"id": 719,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "503:1:1",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_4_by_1",
															"typeString": "int_const 4"
														},
														"value": "4"
													},
													"nodeType": "ArrayTypeName",
													"src": "495:10:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$4_storage_ptr",
														"typeString": "uint256[4]"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 723,
												"name": "max_burn_amount",
												"nodeType": "VariableDeclaration",
												"scope": 726,
												"src": "525:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 722,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "525:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "494:55:1"
									},
									"returnParameters": {
										"id": 725,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "558:0:1"
									},
									"scope": 758,
									"src": "459:100:1",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 733,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "coins",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 729,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 728,
												"name": "i",
												"nodeType": "VariableDeclaration",
												"scope": 733,
												"src": "580:8:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int128",
													"typeString": "int128"
												},
												"typeName": {
													"id": 727,
													"name": "int128",
													"nodeType": "ElementaryTypeName",
													"src": "580:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_int128",
														"typeString": "int128"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "579:10:1"
									},
									"returnParameters": {
										"id": 732,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 731,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 733,
												"src": "613:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 730,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "613:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "612:9:1"
									},
									"scope": 758,
									"src": "565:57:1",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 740,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "underlying_coins",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 736,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 735,
												"name": "i",
												"nodeType": "VariableDeclaration",
												"scope": 740,
												"src": "653:8:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int128",
													"typeString": "int128"
												},
												"typeName": {
													"id": 734,
													"name": "int128",
													"nodeType": "ElementaryTypeName",
													"src": "653:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_int128",
														"typeString": "int128"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "652:10:1"
									},
									"returnParameters": {
										"id": 739,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 738,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 740,
												"src": "686:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 737,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "686:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "685:9:1"
									},
									"scope": 758,
									"src": "627:68:1",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 747,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "underlying_coins",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 741,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "725:2:1"
									},
									"returnParameters": {
										"id": 746,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 745,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 747,
												"src": "751:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$4_memory_ptr",
													"typeString": "address[4]"
												},
												"typeName": {
													"baseType": {
														"id": 742,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "751:7:1",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 744,
													"length": {
														"argumentTypes": null,
														"hexValue": "34",
														"id": 743,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "759:1:1",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_4_by_1",
															"typeString": "int_const 4"
														},
														"value": "4"
													},
													"nodeType": "ArrayTypeName",
													"src": "751:10:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$4_storage_ptr",
														"typeString": "address[4]"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "750:19:1"
									},
									"scope": 758,
									"src": "700:70:1",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 752,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "curve",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 748,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "789:2:1"
									},
									"returnParameters": {
										"id": 751,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 750,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 752,
												"src": "815:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 749,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "815:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "814:9:1"
									},
									"scope": 758,
									"src": "775:49:1",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 757,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "token",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 753,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "843:2:1"
									},
									"returnParameters": {
										"id": 756,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 755,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 757,
												"src": "869:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 754,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "869:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "868:9:1"
									},
									"scope": 758,
									"src": "829:49:1",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								}
							],
							"scope": 759,
							"src": "242:639:1"
						}
					],
					"src": "0:881:1"
				},
				"id": 1
			},
			"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/curvefi/ICurveFi_Gauge.sol": {
				"ast": {
					"absolutePath": "Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/curvefi/ICurveFi_Gauge.sol",
					"exportedSymbols": {
						"ICurveFi_Gauge": [
							814
						]
					},
					"id": 815,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 760,
							"literals": [
								"solidity",
								"^",
								"0.5",
								".12"
							],
							"nodeType": "PragmaDirective",
							"src": "0:24:2"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": "@dev Interface for Curve.Fi CRV staking Gauge contract.\n@dev See original implementation in official repository:\nhttps://github.com/curvefi/curve-dao-contracts/blob/master/contracts/LiquidityGauge.vy",
							"fullyImplemented": false,
							"id": 814,
							"linearizedBaseContracts": [
								814
							],
							"name": "ICurveFi_Gauge",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": null,
									"documentation": null,
									"id": 765,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "lp_token",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 761,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "294:2:2"
									},
									"returnParameters": {
										"id": 764,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 763,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 765,
												"src": "319:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 762,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "319:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "318:9:2"
									},
									"scope": 814,
									"src": "277:51:2",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 770,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "crv_token",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 766,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "351:2:2"
									},
									"returnParameters": {
										"id": 769,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 768,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 770,
												"src": "376:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 767,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "376:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "375:9:2"
									},
									"scope": 814,
									"src": "333:52:2",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 777,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 773,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 772,
												"name": "addr",
												"nodeType": "VariableDeclaration",
												"scope": 777,
												"src": "411:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 771,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "411:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "410:14:2"
									},
									"returnParameters": {
										"id": 776,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 775,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 777,
												"src": "448:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 774,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "448:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "447:9:2"
									},
									"scope": 814,
									"src": "392:65:2",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 782,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "deposit",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 780,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 779,
												"name": "_value",
												"nodeType": "VariableDeclaration",
												"scope": 782,
												"src": "479:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 778,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "479:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "478:16:2"
									},
									"returnParameters": {
										"id": 781,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "503:0:2"
									},
									"scope": 814,
									"src": "462:42:2",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 787,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "withdraw",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 785,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 784,
												"name": "_value",
												"nodeType": "VariableDeclaration",
												"scope": 787,
												"src": "527:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 783,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "527:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "526:16:2"
									},
									"returnParameters": {
										"id": 786,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "551:0:2"
									},
									"scope": 814,
									"src": "509:43:2",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 794,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "claimable_tokens",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 790,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 789,
												"name": "addr",
												"nodeType": "VariableDeclaration",
												"scope": 794,
												"src": "584:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 788,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "584:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "583:14:2"
									},
									"returnParameters": {
										"id": 793,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 792,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 794,
												"src": "616:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 791,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "616:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "615:9:2"
									},
									"scope": 814,
									"src": "558:67:2",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 799,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "minter",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 795,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "645:2:2"
									},
									"returnParameters": {
										"id": 798,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 797,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 799,
												"src": "670:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 796,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "670:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "669:9:2"
									},
									"scope": 814,
									"src": "630:49:2",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 806,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "integrate_fraction",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 802,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 801,
												"name": "_for",
												"nodeType": "VariableDeclaration",
												"scope": 806,
												"src": "758:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 800,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "758:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "757:14:2"
									},
									"returnParameters": {
										"id": 805,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 804,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 806,
												"src": "794:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 803,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "794:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "793:9:2"
									},
									"scope": 814,
									"src": "730:73:2",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 813,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "user_checkpoint",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 809,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 808,
												"name": "_for",
												"nodeType": "VariableDeclaration",
												"scope": 813,
												"src": "833:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 807,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "833:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "832:14:2"
									},
									"returnParameters": {
										"id": 812,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 811,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 813,
												"src": "864:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 810,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "864:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "863:6:2"
									},
									"scope": 814,
									"src": "808:62:2",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								}
							],
							"scope": 815,
							"src": "246:626:2"
						}
					],
					"src": "0:872:2"
				},
				"id": 2
			},
			"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/curvefi/ICurveFi_Minter.sol": {
				"ast": {
					"absolutePath": "Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/curvefi/ICurveFi_Minter.sol",
					"exportedSymbols": {
						"ICurveFi_Minter": [
							848
						]
					},
					"id": 849,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 816,
							"literals": [
								"solidity",
								"^",
								"0.5",
								".12"
							],
							"nodeType": "PragmaDirective",
							"src": "0:24:3"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": "@dev Interface for Curve.Fi CRV minter contract.\n@dev See original implementation in official repository:\nhttps://github.com/curvefi/curve-dao-contracts/blob/master/contracts/Minter.vy",
							"fullyImplemented": false,
							"id": 848,
							"linearizedBaseContracts": [
								848
							],
							"name": "ICurveFi_Minter",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": null,
									"documentation": null,
									"id": 821,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "mint",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 819,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 818,
												"name": "gauge_addr",
												"nodeType": "VariableDeclaration",
												"scope": 821,
												"src": "277:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 817,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "277:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "276:20:3"
									},
									"returnParameters": {
										"id": 820,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "305:0:3"
									},
									"scope": 848,
									"src": "263:43:3",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 828,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "mint_for",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 826,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 823,
												"name": "gauge_addr",
												"nodeType": "VariableDeclaration",
												"scope": 828,
												"src": "329:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 822,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "329:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 825,
												"name": "_for",
												"nodeType": "VariableDeclaration",
												"scope": 828,
												"src": "349:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 824,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "349:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "328:34:3"
									},
									"returnParameters": {
										"id": 827,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "371:0:3"
									},
									"scope": 848,
									"src": "311:61:3",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 837,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "minted",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 833,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 830,
												"name": "_for",
												"nodeType": "VariableDeclaration",
												"scope": 837,
												"src": "393:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 829,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "393:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 832,
												"name": "gauge_addr",
												"nodeType": "VariableDeclaration",
												"scope": 837,
												"src": "407:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 831,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "407:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "392:34:3"
									},
									"returnParameters": {
										"id": 836,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 835,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 837,
												"src": "449:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 834,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "449:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "448:9:3"
									},
									"scope": 848,
									"src": "377:81:3",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 842,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "toggle_approve_mint",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 840,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 839,
												"name": "minting_user",
												"nodeType": "VariableDeclaration",
												"scope": 842,
												"src": "493:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 838,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "493:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "492:22:3"
									},
									"returnParameters": {
										"id": 841,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "523:0:3"
									},
									"scope": 848,
									"src": "464:60:3",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 847,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "token",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 843,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "544:2:3"
									},
									"returnParameters": {
										"id": 846,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 845,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 847,
												"src": "569:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 844,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "569:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "568:9:3"
									},
									"scope": 848,
									"src": "530:48:3",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								}
							],
							"scope": 849,
							"src": "231:349:3"
						}
					],
					"src": "0:580:3"
				},
				"id": 3
			},
			"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/curvefi/ICurveFi_SwapY.sol": {
				"ast": {
					"absolutePath": "Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/curvefi/ICurveFi_SwapY.sol",
					"exportedSymbols": {
						"ICurveFi_SwapY": [
							903
						]
					},
					"id": 904,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 850,
							"literals": [
								"solidity",
								"^",
								"0.5",
								".12"
							],
							"nodeType": "PragmaDirective",
							"src": "0:24:4"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": "@dev Interface for Curve.Fi swap contract for Y-pool.\n@dev See original implementation in official repository:\nhttps://github.com/curvefi/curve-contract/blob/master/contracts/pools/y/StableSwapY.vy",
							"fullyImplemented": false,
							"id": 903,
							"linearizedBaseContracts": [
								903
							],
							"name": "ICurveFi_SwapY",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": null,
									"documentation": null,
									"id": 859,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "add_liquidity",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 857,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 854,
												"name": "amounts",
												"nodeType": "VariableDeclaration",
												"scope": 859,
												"src": "299:27:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$4_calldata_ptr",
													"typeString": "uint256[4]"
												},
												"typeName": {
													"baseType": {
														"id": 851,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "299:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 853,
													"length": {
														"argumentTypes": null,
														"hexValue": "34",
														"id": 852,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "307:1:4",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_4_by_1",
															"typeString": "int_const 4"
														},
														"value": "4"
													},
													"nodeType": "ArrayTypeName",
													"src": "299:10:4",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$4_storage_ptr",
														"typeString": "uint256[4]"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 856,
												"name": "min_mint_amount",
												"nodeType": "VariableDeclaration",
												"scope": 859,
												"src": "328:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 855,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "328:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "298:54:4"
									},
									"returnParameters": {
										"id": 858,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "361:0:4"
									},
									"scope": 903,
									"src": "276:86:4",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 868,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "remove_liquidity",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 866,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 861,
												"name": "_amount",
												"nodeType": "VariableDeclaration",
												"scope": 868,
												"src": "393:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 860,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "393:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 865,
												"name": "min_amounts",
												"nodeType": "VariableDeclaration",
												"scope": 868,
												"src": "410:31:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$4_calldata_ptr",
													"typeString": "uint256[4]"
												},
												"typeName": {
													"baseType": {
														"id": 862,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "410:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 864,
													"length": {
														"argumentTypes": null,
														"hexValue": "34",
														"id": 863,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "418:1:4",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_4_by_1",
															"typeString": "int_const 4"
														},
														"value": "4"
													},
													"nodeType": "ArrayTypeName",
													"src": "410:10:4",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$4_storage_ptr",
														"typeString": "uint256[4]"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "392:50:4"
									},
									"returnParameters": {
										"id": 867,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "451:0:4"
									},
									"scope": 903,
									"src": "367:85:4",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 877,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "remove_liquidity_imbalance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 875,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 872,
												"name": "amounts",
												"nodeType": "VariableDeclaration",
												"scope": 877,
												"src": "493:27:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$4_calldata_ptr",
													"typeString": "uint256[4]"
												},
												"typeName": {
													"baseType": {
														"id": 869,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "493:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 871,
													"length": {
														"argumentTypes": null,
														"hexValue": "34",
														"id": 870,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "501:1:4",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_4_by_1",
															"typeString": "int_const 4"
														},
														"value": "4"
													},
													"nodeType": "ArrayTypeName",
													"src": "493:10:4",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$4_storage_ptr",
														"typeString": "uint256[4]"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 874,
												"name": "max_burn_amount",
												"nodeType": "VariableDeclaration",
												"scope": 877,
												"src": "522:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 873,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "522:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "492:54:4"
									},
									"returnParameters": {
										"id": 876,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "555:0:4"
									},
									"scope": 903,
									"src": "457:99:4",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 888,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "calc_token_amount",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 884,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 881,
												"name": "amounts",
												"nodeType": "VariableDeclaration",
												"scope": 888,
												"src": "588:27:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$4_calldata_ptr",
													"typeString": "uint256[4]"
												},
												"typeName": {
													"baseType": {
														"id": 878,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "588:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 880,
													"length": {
														"argumentTypes": null,
														"hexValue": "34",
														"id": 879,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "596:1:4",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_4_by_1",
															"typeString": "int_const 4"
														},
														"value": "4"
													},
													"nodeType": "ArrayTypeName",
													"src": "588:10:4",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$4_storage_ptr",
														"typeString": "uint256[4]"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 883,
												"name": "deposit",
												"nodeType": "VariableDeclaration",
												"scope": 888,
												"src": "617:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 882,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "617:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "587:43:4"
									},
									"returnParameters": {
										"id": 887,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 886,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 888,
												"src": "653:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 885,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "653:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "652:9:4"
									},
									"scope": 903,
									"src": "561:101:4",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 895,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balances",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 891,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 890,
												"name": "i",
												"nodeType": "VariableDeclaration",
												"scope": 895,
												"src": "686:8:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int128",
													"typeString": "int128"
												},
												"typeName": {
													"id": 889,
													"name": "int128",
													"nodeType": "ElementaryTypeName",
													"src": "686:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_int128",
														"typeString": "int128"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "685:10:4"
									},
									"returnParameters": {
										"id": 894,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 893,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 895,
												"src": "718:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 892,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "718:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "717:9:4"
									},
									"scope": 903,
									"src": "668:59:4",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 902,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "coins",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 898,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 897,
												"name": "i",
												"nodeType": "VariableDeclaration",
												"scope": 902,
												"src": "747:8:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int128",
													"typeString": "int128"
												},
												"typeName": {
													"id": 896,
													"name": "int128",
													"nodeType": "ElementaryTypeName",
													"src": "747:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_int128",
														"typeString": "int128"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "746:10:4"
									},
									"returnParameters": {
										"id": 901,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 900,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 902,
												"src": "780:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 899,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "780:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "779:9:4"
									},
									"scope": 903,
									"src": "732:57:4",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								}
							],
							"scope": 904,
							"src": "244:547:4"
						}
					],
					"src": "0:791:4"
				},
				"id": 4
			},
			"Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/curvefi/IYERC20.sol": {
				"ast": {
					"absolutePath": "Users/yanickwilisky/Library/CloudStorage/GoogleDrive-yanickw@gmail.com/My Drive/09_Programming/FinTech_Workspace/sabot3/Contracts/curvefi/IYERC20.sol",
					"exportedSymbols": {
						"IYERC20": [
							991
						]
					},
					"id": 992,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 905,
							"literals": [
								"solidity",
								"^",
								"0.5",
								".12"
							],
							"nodeType": "PragmaDirective",
							"src": "0:24:5"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": false,
							"id": 991,
							"linearizedBaseContracts": [
								991
							],
							"name": "IYERC20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": null,
									"documentation": null,
									"id": 910,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 906,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "93:2:5"
									},
									"returnParameters": {
										"id": 909,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 908,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 910,
												"src": "119:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 907,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "119:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "118:9:5"
									},
									"scope": 991,
									"src": "73:55:5",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 917,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 913,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 912,
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 917,
												"src": "152:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 911,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "152:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "151:17:5"
									},
									"returnParameters": {
										"id": 916,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 915,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 917,
												"src": "192:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 914,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "192:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "191:9:5"
									},
									"scope": 991,
									"src": "133:68:5",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 926,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 922,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 919,
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 926,
												"src": "224:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 918,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "224:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 921,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 926,
												"src": "243:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 920,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "243:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "223:35:5"
									},
									"returnParameters": {
										"id": 925,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 924,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 926,
												"src": "277:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 923,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "277:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "276:6:5"
									},
									"scope": 991,
									"src": "206:77:5",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 935,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 931,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 928,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 935,
												"src": "307:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 927,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "307:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 930,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 935,
												"src": "322:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 929,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "322:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "306:32:5"
									},
									"returnParameters": {
										"id": 934,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 933,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 935,
												"src": "362:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 932,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "362:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "361:9:5"
									},
									"scope": 991,
									"src": "288:83:5",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 944,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 940,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 937,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 944,
												"src": "393:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 936,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "393:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 939,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 944,
												"src": "410:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 938,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "410:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "392:33:5"
									},
									"returnParameters": {
										"id": 943,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 942,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 944,
												"src": "444:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 941,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "444:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "443:6:5"
									},
									"scope": 991,
									"src": "376:74:5",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 955,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 951,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 946,
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"scope": 955,
												"src": "477:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 945,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "477:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 948,
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 955,
												"src": "493:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 947,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "493:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 950,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 955,
												"src": "512:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 949,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "512:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "476:51:5"
									},
									"returnParameters": {
										"id": 954,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 953,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 955,
												"src": "546:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 952,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "546:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "545:6:5"
									},
									"scope": 991,
									"src": "455:97:5",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 960,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 956,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "570:2:5"
									},
									"returnParameters": {
										"id": 959,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 958,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 960,
												"src": "596:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 957,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "596:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "595:15:5"
									},
									"scope": 991,
									"src": "557:54:5",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 965,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 961,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "631:2:5"
									},
									"returnParameters": {
										"id": 964,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 963,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 965,
												"src": "657:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 962,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "657:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "656:15:5"
									},
									"scope": 991,
									"src": "616:56:5",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 970,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 966,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "694:2:5"
									},
									"returnParameters": {
										"id": 969,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 968,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 970,
												"src": "720:5:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 967,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "720:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "719:7:5"
									},
									"scope": 991,
									"src": "677:50:5",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 975,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "deposit",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 973,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 972,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 975,
												"src": "774:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 971,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "774:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "773:16:5"
									},
									"returnParameters": {
										"id": 974,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "798:0:5"
									},
									"scope": 991,
									"src": "757:42:5",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 980,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "withdraw",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 978,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 977,
												"name": "shares",
												"nodeType": "VariableDeclaration",
												"scope": 980,
												"src": "822:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 976,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "822:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "821:16:5"
									},
									"returnParameters": {
										"id": 979,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "846:0:5"
									},
									"scope": 991,
									"src": "804:43:5",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 985,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getPricePerFullShare",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 981,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "881:2:5"
									},
									"returnParameters": {
										"id": 984,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 983,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 985,
												"src": "907:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 982,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "907:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "906:9:5"
									},
									"scope": 991,
									"src": "852:64:5",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 990,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "token",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 986,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "936:2:5"
									},
									"returnParameters": {
										"id": 989,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 988,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 990,
												"src": "956:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 987,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "956:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "955:9:5"
									},
									"scope": 991,
									"src": "922:43:5",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								}
							],
							"scope": 992,
							"src": "26:942:5"
						}
					],
					"src": "0:968:5"
				},
				"id": 5
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/GSN/Context.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/GSN/Context.sol",
					"exportedSymbols": {
						"Context": [
							1018
						]
					},
					"id": 1019,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 993,
							"literals": [
								"solidity",
								"^",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "0:23:6"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 1018,
							"linearizedBaseContracts": [
								1018
							],
							"name": "Context",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 996,
										"nodeType": "Block",
										"src": "726:3:6",
										"statements": []
									},
									"documentation": null,
									"id": 997,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 994,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "714:2:6"
									},
									"returnParameters": {
										"id": 995,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "726:0:6"
									},
									"scope": 1018,
									"src": "702:27:6",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1005,
										"nodeType": "Block",
										"src": "850:34:6",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"id": 1002,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1829,
														"src": "867:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1003,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"referencedDeclaration": null,
													"src": "867:10:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"functionReturnParameters": 1001,
												"id": 1004,
												"nodeType": "Return",
												"src": "860:17:6"
											}
										]
									},
									"documentation": null,
									"id": 1006,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 998,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "807:2:6"
									},
									"returnParameters": {
										"id": 1001,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1000,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1006,
												"src": "833:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 999,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "833:15:6",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "832:17:6"
									},
									"scope": 1018,
									"src": "788:96:6",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1016,
										"nodeType": "Block",
										"src": "947:165:6",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 1011,
													"name": "this",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1845,
													"src": "957:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_Context_$1018",
														"typeString": "contract Context"
													}
												},
												"id": 1012,
												"nodeType": "ExpressionStatement",
												"src": "957:4:6"
											},
											{
												"expression": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"id": 1013,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1829,
														"src": "1097:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1014,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"referencedDeclaration": null,
													"src": "1097:8:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1010,
												"id": 1015,
												"nodeType": "Return",
												"src": "1090:15:6"
											}
										]
									},
									"documentation": null,
									"id": 1017,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1007,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "907:2:6"
									},
									"returnParameters": {
										"id": 1010,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1009,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1017,
												"src": "933:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1008,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "933:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "932:14:6"
									},
									"scope": 1018,
									"src": "890:222:6",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "internal"
								}
							],
							"scope": 1019,
							"src": "525:589:6"
						}
					],
					"src": "0:1115:6"
				},
				"id": 6
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/math/SafeMath.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/math/SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							1205
						]
					},
					"id": 1206,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1020,
							"literals": [
								"solidity",
								"^",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "0:23:7"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": "@dev Wrappers over Solidity's arithmetic operations with added overflow\nchecks.\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\nin bugs, because programmers usually assume that an overflow raises an\nerror, which is the standard behavior in high level programming languages.\n`SafeMath` restores this intuition by reverting the transaction when an\noperation overflows.\n * Using this library instead of the unchecked operations eliminates an entire\nclass of bugs, so it's recommended to use it always.",
							"fullyImplemented": true,
							"id": 1205,
							"linearizedBaseContracts": [
								1205
							],
							"name": "SafeMath",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1044,
										"nodeType": "Block",
										"src": "901:109:7",
										"statements": [
											{
												"assignments": [
													1030
												],
												"declarations": [
													{
														"constant": false,
														"id": 1030,
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 1044,
														"src": "911:9:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1029,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "911:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1034,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1033,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 1031,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1022,
														"src": "923:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"argumentTypes": null,
														"id": 1032,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1024,
														"src": "927:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "923:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "911:17:7"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1038,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1036,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1030,
																"src": "946:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 1037,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1022,
																"src": "951:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "946:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206164646974696f6e206f766572666c6f77",
															"id": 1039,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "954:29:7",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															},
															"value": "SafeMath: addition overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															}
														],
														"id": 1035,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1832,
															1833
														],
														"referencedDeclaration": 1833,
														"src": "938:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1040,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "938:46:7",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1041,
												"nodeType": "ExpressionStatement",
												"src": "938:46:7"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1042,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1030,
													"src": "1002:1:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1028,
												"id": 1043,
												"nodeType": "Return",
												"src": "995:8:7"
											}
										]
									},
									"documentation": "@dev Returns the addition of two unsigned integers, reverting on\noverflow.\n     * Counterpart to Solidity's `+` operator.\n     * Requirements:\n- Addition cannot overflow.",
									"id": 1045,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1025,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1022,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 1045,
												"src": "847:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1021,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "847:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1024,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 1045,
												"src": "858:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1023,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "846:22:7"
									},
									"returnParameters": {
										"id": 1028,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1027,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1045,
												"src": "892:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1026,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "892:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "891:9:7"
									},
									"scope": 1205,
									"src": "834:176:7",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1060,
										"nodeType": "Block",
										"src": "1341:67:7",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1055,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1047,
															"src": "1362:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 1056,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1049,
															"src": "1365:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a207375627472616374696f6e206f766572666c6f77",
															"id": 1057,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1368:32:7",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															},
															"value": "SafeMath: subtraction overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															}
														],
														"id": 1054,
														"name": "sub",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1061,
															1088
														],
														"referencedDeclaration": 1088,
														"src": "1358:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 1058,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1358:43:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1053,
												"id": 1059,
												"nodeType": "Return",
												"src": "1351:50:7"
											}
										]
									},
									"documentation": "@dev Returns the subtraction of two unsigned integers, reverting on\noverflow (when the result is negative).\n     * Counterpart to Solidity's `-` operator.\n     * Requirements:\n- Subtraction cannot overflow.",
									"id": 1061,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1050,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1047,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 1061,
												"src": "1287:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1046,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1287:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1049,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 1061,
												"src": "1298:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1048,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1298:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1286:22:7"
									},
									"returnParameters": {
										"id": 1053,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1052,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1061,
												"src": "1332:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1051,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1332:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1331:9:7"
									},
									"scope": 1205,
									"src": "1274:134:7",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1087,
										"nodeType": "Block",
										"src": "1827:92:7",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1075,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1073,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1065,
																"src": "1845:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 1074,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1063,
																"src": "1850:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1845:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 1076,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1067,
															"src": "1853:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1072,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1832,
															1833
														],
														"referencedDeclaration": 1833,
														"src": "1837:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1077,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1837:29:7",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1078,
												"nodeType": "ExpressionStatement",
												"src": "1837:29:7"
											},
											{
												"assignments": [
													1080
												],
												"declarations": [
													{
														"constant": false,
														"id": 1080,
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 1087,
														"src": "1876:9:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1079,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1876:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1084,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1083,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 1081,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1063,
														"src": "1888:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"argumentTypes": null,
														"id": 1082,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1065,
														"src": "1892:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1888:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1876:17:7"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1085,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1080,
													"src": "1911:1:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1071,
												"id": 1086,
												"nodeType": "Return",
												"src": "1904:8:7"
											}
										]
									},
									"documentation": "@dev Returns the subtraction of two unsigned integers, reverting with custom message on\noverflow (when the result is negative).\n     * Counterpart to Solidity's `-` operator.\n     * Requirements:\n- Subtraction cannot overflow.\n     * _Available since v2.4.0._",
									"id": 1088,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1068,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1063,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 1088,
												"src": "1745:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1062,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1745:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1065,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 1088,
												"src": "1756:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1064,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1756:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1067,
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 1088,
												"src": "1767:26:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1066,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1767:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1744:50:7"
									},
									"returnParameters": {
										"id": 1071,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1070,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1088,
												"src": "1818:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1069,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1818:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1817:9:7"
									},
									"scope": 1205,
									"src": "1732:187:7",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1121,
										"nodeType": "Block",
										"src": "2226:392:7",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1099,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 1097,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1090,
														"src": "2458:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 1098,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2463:1:7",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2458:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 1103,
												"nodeType": "IfStatement",
												"src": "2454:45:7",
												"trueBody": {
													"id": 1102,
													"nodeType": "Block",
													"src": "2466:33:7",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 1100,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2487:1:7",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 1096,
															"id": 1101,
															"nodeType": "Return",
															"src": "2480:8:7"
														}
													]
												}
											},
											{
												"assignments": [
													1105
												],
												"declarations": [
													{
														"constant": false,
														"id": 1105,
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 1121,
														"src": "2509:9:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1104,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2509:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1109,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1108,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 1106,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1090,
														"src": "2521:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"argumentTypes": null,
														"id": 1107,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1092,
														"src": "2525:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2521:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2509:17:7"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1115,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1113,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 1111,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1105,
																	"src": "2544:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 1112,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1090,
																	"src": "2548:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2544:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"id": 1114,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1092,
																"src": "2553:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2544:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77",
															"id": 1116,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2556:35:7",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															},
															"value": "SafeMath: multiplication overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															}
														],
														"id": 1110,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1832,
															1833
														],
														"referencedDeclaration": 1833,
														"src": "2536:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1117,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2536:56:7",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1118,
												"nodeType": "ExpressionStatement",
												"src": "2536:56:7"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1119,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1105,
													"src": "2610:1:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1096,
												"id": 1120,
												"nodeType": "Return",
												"src": "2603:8:7"
											}
										]
									},
									"documentation": "@dev Returns the multiplication of two unsigned integers, reverting on\noverflow.\n     * Counterpart to Solidity's `*` operator.\n     * Requirements:\n- Multiplication cannot overflow.",
									"id": 1122,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1093,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1090,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 1122,
												"src": "2172:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1089,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2172:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1092,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 1122,
												"src": "2183:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1091,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2183:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2171:22:7"
									},
									"returnParameters": {
										"id": 1096,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1095,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1122,
												"src": "2217:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1094,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2217:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2216:9:7"
									},
									"scope": 1205,
									"src": "2159:459:7",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1137,
										"nodeType": "Block",
										"src": "3140:63:7",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1132,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1124,
															"src": "3161:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 1133,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1126,
															"src": "3164:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206469766973696f6e206279207a65726f",
															"id": 1134,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3167:28:7",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															},
															"value": "SafeMath: division by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															}
														],
														"id": 1131,
														"name": "div",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1138,
															1165
														],
														"referencedDeclaration": 1165,
														"src": "3157:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 1135,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3157:39:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1130,
												"id": 1136,
												"nodeType": "Return",
												"src": "3150:46:7"
											}
										]
									},
									"documentation": "@dev Returns the integer division of two unsigned integers. Reverts on\ndivision by zero. The result is rounded towards zero.\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n`revert` opcode (which leaves remaining gas untouched) while Solidity\nuses an invalid opcode to revert (consuming all remaining gas).\n     * Requirements:\n- The divisor cannot be zero.",
									"id": 1138,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1127,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1124,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 1138,
												"src": "3086:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1123,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3086:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1126,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 1138,
												"src": "3097:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1125,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3097:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3085:22:7"
									},
									"returnParameters": {
										"id": 1130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1129,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1138,
												"src": "3131:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1128,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3131:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3130:9:7"
									},
									"scope": 1205,
									"src": "3073:130:7",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1164,
										"nodeType": "Block",
										"src": "3813:243:7",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1152,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1150,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1142,
																"src": "3897:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 1151,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3901:1:7",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "3897:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 1153,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1144,
															"src": "3904:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1149,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1832,
															1833
														],
														"referencedDeclaration": 1833,
														"src": "3889:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1154,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3889:28:7",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1155,
												"nodeType": "ExpressionStatement",
												"src": "3889:28:7"
											},
											{
												"assignments": [
													1157
												],
												"declarations": [
													{
														"constant": false,
														"id": 1157,
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 1164,
														"src": "3927:9:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1156,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3927:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1161,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1160,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 1158,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1140,
														"src": "3939:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"argumentTypes": null,
														"id": 1159,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1142,
														"src": "3943:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3939:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3927:17:7"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1162,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1157,
													"src": "4048:1:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1148,
												"id": 1163,
												"nodeType": "Return",
												"src": "4041:8:7"
											}
										]
									},
									"documentation": "@dev Returns the integer division of two unsigned integers. Reverts with custom message on\ndivision by zero. The result is rounded towards zero.\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n`revert` opcode (which leaves remaining gas untouched) while Solidity\nuses an invalid opcode to revert (consuming all remaining gas).\n     * Requirements:\n- The divisor cannot be zero.\n     * _Available since v2.4.0._",
									"id": 1165,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1145,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1140,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 1165,
												"src": "3731:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1139,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3731:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1142,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 1165,
												"src": "3742:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1141,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3742:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1144,
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 1165,
												"src": "3753:26:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1143,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3753:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3730:50:7"
									},
									"returnParameters": {
										"id": 1148,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1147,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1165,
												"src": "3804:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1146,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3804:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3803:9:7"
									},
									"scope": 1205,
									"src": "3718:338:7",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1180,
										"nodeType": "Block",
										"src": "4567:61:7",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1175,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1167,
															"src": "4588:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 1176,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1169,
															"src": "4591:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206d6f64756c6f206279207a65726f",
															"id": 1177,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4594:26:7",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															},
															"value": "SafeMath: modulo by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															}
														],
														"id": 1174,
														"name": "mod",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1181,
															1204
														],
														"referencedDeclaration": 1204,
														"src": "4584:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 1178,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4584:37:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1173,
												"id": 1179,
												"nodeType": "Return",
												"src": "4577:44:7"
											}
										]
									},
									"documentation": "@dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\nReverts when dividing by zero.\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\nopcode (which leaves remaining gas untouched) while Solidity uses an\ninvalid opcode to revert (consuming all remaining gas).\n     * Requirements:\n- The divisor cannot be zero.",
									"id": 1181,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1170,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1167,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 1181,
												"src": "4513:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1166,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4513:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1169,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 1181,
												"src": "4524:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1168,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4524:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4512:22:7"
									},
									"returnParameters": {
										"id": 1173,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1172,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1181,
												"src": "4558:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1171,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4558:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4557:9:7"
									},
									"scope": 1205,
									"src": "4500:128:7",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1203,
										"nodeType": "Block",
										"src": "5227:68:7",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1195,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1193,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1185,
																"src": "5245:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 1194,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5250:1:7",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "5245:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 1196,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1187,
															"src": "5253:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1192,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1832,
															1833
														],
														"referencedDeclaration": 1833,
														"src": "5237:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1197,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5237:29:7",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1198,
												"nodeType": "ExpressionStatement",
												"src": "5237:29:7"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1201,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 1199,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1183,
														"src": "5283:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"argumentTypes": null,
														"id": 1200,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1185,
														"src": "5287:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5283:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1191,
												"id": 1202,
												"nodeType": "Return",
												"src": "5276:12:7"
											}
										]
									},
									"documentation": "@dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\nReverts with custom message when dividing by zero.\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\nopcode (which leaves remaining gas untouched) while Solidity uses an\ninvalid opcode to revert (consuming all remaining gas).\n     * Requirements:\n- The divisor cannot be zero.\n     * _Available since v2.4.0._",
									"id": 1204,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1188,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1183,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 1204,
												"src": "5145:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1182,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5145:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1185,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 1204,
												"src": "5156:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1184,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5156:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1187,
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 1204,
												"src": "5167:26:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1186,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5167:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5144:50:7"
									},
									"returnParameters": {
										"id": 1191,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1190,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1204,
												"src": "5218:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1189,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5218:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5217:9:7"
									},
									"scope": 1205,
									"src": "5132:163:7",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								}
							],
							"scope": 1206,
							"src": "589:4708:7"
						}
					],
					"src": "0:5298:7"
				},
				"id": 7
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/ownership/Ownable.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/ownership/Ownable.sol",
					"exportedSymbols": {
						"Ownable": [
							1323
						]
					},
					"id": 1324,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1207,
							"literals": [
								"solidity",
								"^",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "0:23:8"
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/GSN/Context.sol",
							"file": "../GSN/Context.sol",
							"id": 1208,
							"nodeType": "ImportDirective",
							"scope": 1324,
							"sourceUnit": 1019,
							"src": "25:28:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 1209,
										"name": "Context",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1018,
										"src": "435:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Context_$1018",
											"typeString": "contract Context"
										}
									},
									"id": 1210,
									"nodeType": "InheritanceSpecifier",
									"src": "435:7:8"
								}
							],
							"contractDependencies": [
								1018
							],
							"contractKind": "contract",
							"documentation": "@dev Contract module which provides a basic access control mechanism, where\nthere is an account (an owner) that can be granted exclusive access to\nspecific functions.\n * This module is used through inheritance. It will make available the modifier\n`onlyOwner`, which can be applied to your functions to restrict their use to\nthe owner.",
							"fullyImplemented": true,
							"id": 1323,
							"linearizedBaseContracts": [
								1323,
								1018
							],
							"name": "Ownable",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 1212,
									"name": "_owner",
									"nodeType": "VariableDeclaration",
									"scope": 1323,
									"src": "449:22:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1211,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "449:7:8",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 1218,
									"name": "OwnershipTransferred",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1217,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1214,
												"indexed": true,
												"name": "previousOwner",
												"nodeType": "VariableDeclaration",
												"scope": 1218,
												"src": "505:29:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1213,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "505:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1216,
												"indexed": true,
												"name": "newOwner",
												"nodeType": "VariableDeclaration",
												"scope": 1218,
												"src": "536:24:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1215,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "536:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "504:57:8"
									},
									"src": "478:84:8"
								},
								{
									"body": {
										"id": 1237,
										"nodeType": "Block",
										"src": "688:135:8",
										"statements": [
											{
												"assignments": [
													1222
												],
												"declarations": [
													{
														"constant": false,
														"id": 1222,
														"name": "msgSender",
														"nodeType": "VariableDeclaration",
														"scope": 1237,
														"src": "698:17:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1221,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "698:7:8",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1225,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1223,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1006,
														"src": "718:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
															"typeString": "function () view returns (address payable)"
														}
													},
													"id": 1224,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "718:12:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "698:32:8"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1228,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1226,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1212,
														"src": "740:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 1227,
														"name": "msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1222,
														"src": "749:9:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "740:18:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1229,
												"nodeType": "ExpressionStatement",
												"src": "740:18:8"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 1232,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "802:1:8",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1231,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "794:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": "address"
															},
															"id": 1233,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "794:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 1234,
															"name": "msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1222,
															"src": "806:9:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1230,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1218,
														"src": "773:20:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 1235,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "773:43:8",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1236,
												"nodeType": "EmitStatement",
												"src": "768:48:8"
											}
										]
									},
									"documentation": "@dev Initializes the contract setting the deployer as the initial owner.",
									"id": 1238,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1219,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "676:2:8"
									},
									"returnParameters": {
										"id": 1220,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "688:0:8"
									},
									"scope": 1323,
									"src": "664:159:8",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1245,
										"nodeType": "Block",
										"src": "946:30:8",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 1243,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1212,
													"src": "963:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1242,
												"id": 1244,
												"nodeType": "Return",
												"src": "956:13:8"
											}
										]
									},
									"documentation": "@dev Returns the address of the current owner.",
									"id": 1246,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1239,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "913:2:8"
									},
									"returnParameters": {
										"id": 1242,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1241,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1246,
												"src": "937:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1240,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "937:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "936:9:8"
									},
									"scope": 1323,
									"src": "899:77:8",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1255,
										"nodeType": "Block",
										"src": "1085:82:8",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1249,
																"name": "isOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1267,
																"src": "1103:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																	"typeString": "function () view returns (bool)"
																}
															},
															"id": 1250,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1103:9:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 1251,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1114:34:8",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 1248,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1832,
															1833
														],
														"referencedDeclaration": 1833,
														"src": "1095:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1252,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1095:54:8",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1253,
												"nodeType": "ExpressionStatement",
												"src": "1095:54:8"
											},
											{
												"id": 1254,
												"nodeType": "PlaceholderStatement",
												"src": "1159:1:8"
											}
										]
									},
									"documentation": "@dev Throws if called by any account other than the owner.",
									"id": 1256,
									"name": "onlyOwner",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1247,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1082:2:8"
									},
									"src": "1064:103:8",
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1266,
										"nodeType": "Block",
										"src": "1296:46:8",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1264,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1261,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1006,
															"src": "1313:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																"typeString": "function () view returns (address payable)"
															}
														},
														"id": 1262,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1313:12:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"id": 1263,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1212,
														"src": "1329:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1313:22:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1260,
												"id": 1265,
												"nodeType": "Return",
												"src": "1306:29:8"
											}
										]
									},
									"documentation": "@dev Returns true if the caller is the current owner.",
									"id": 1267,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isOwner",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1257,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1266:2:8"
									},
									"returnParameters": {
										"id": 1260,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1259,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1267,
												"src": "1290:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1258,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1290:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1289:6:8"
									},
									"scope": 1323,
									"src": "1250:92:8",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1285,
										"nodeType": "Block",
										"src": "1730:91:8",
										"statements": [
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1273,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1212,
															"src": "1766:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 1275,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1782:1:8",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1274,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1774:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": "address"
															},
															"id": 1276,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1774:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														],
														"id": 1272,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1218,
														"src": "1745:20:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 1277,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1745:40:8",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1278,
												"nodeType": "EmitStatement",
												"src": "1740:45:8"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1283,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1279,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1212,
														"src": "1795:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"hexValue": "30",
																"id": 1281,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1812:1:8",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1280,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1804:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": "address"
														},
														"id": 1282,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1804:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "1795:19:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1284,
												"nodeType": "ExpressionStatement",
												"src": "1795:19:8"
											}
										]
									},
									"documentation": "@dev Leaves the contract without owner. It will not be possible to call\n`onlyOwner` functions anymore. Can only be called by the current owner.\n     * NOTE: Renouncing ownership will leave the contract without an owner,\nthereby removing any functionality that is only available to the owner.",
									"id": 1286,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 1270,
											"modifierName": {
												"argumentTypes": null,
												"id": 1269,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 1256,
												"src": "1720:9:8",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "1720:9:8"
										}
									],
									"name": "renounceOwnership",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1268,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1710:2:8"
									},
									"returnParameters": {
										"id": 1271,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1730:0:8"
									},
									"scope": 1323,
									"src": "1684:137:8",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1297,
										"nodeType": "Block",
										"src": "2032:45:8",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1294,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1288,
															"src": "2061:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1293,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1322,
														"src": "2042:18:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1295,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2042:28:8",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1296,
												"nodeType": "ExpressionStatement",
												"src": "2042:28:8"
											}
										]
									},
									"documentation": "@dev Transfers ownership of the contract to a new account (`newOwner`).\nCan only be called by the current owner.",
									"id": 1298,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 1291,
											"modifierName": {
												"argumentTypes": null,
												"id": 1290,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 1256,
												"src": "2022:9:8",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "2022:9:8"
										}
									],
									"name": "transferOwnership",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1289,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1288,
												"name": "newOwner",
												"nodeType": "VariableDeclaration",
												"scope": 1298,
												"src": "1997:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1287,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1997:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1996:18:8"
									},
									"returnParameters": {
										"id": 1292,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2032:0:8"
									},
									"scope": 1323,
									"src": "1970:107:8",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1321,
										"nodeType": "Block",
										"src": "2233:170:8",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1308,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1304,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1300,
																"src": "2251:8:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 1306,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2271:1:8",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1305,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2263:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": "address"
																},
																"id": 1307,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2263:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "2251:22:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 1309,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2275:40:8",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 1303,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1832,
															1833
														],
														"referencedDeclaration": 1833,
														"src": "2243:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1310,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2243:73:8",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1311,
												"nodeType": "ExpressionStatement",
												"src": "2243:73:8"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1313,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1212,
															"src": "2352:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1314,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1300,
															"src": "2360:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1312,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1218,
														"src": "2331:20:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 1315,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2331:38:8",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1316,
												"nodeType": "EmitStatement",
												"src": "2326:43:8"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1319,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1317,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1212,
														"src": "2379:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 1318,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1300,
														"src": "2388:8:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2379:17:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1320,
												"nodeType": "ExpressionStatement",
												"src": "2379:17:8"
											}
										]
									},
									"documentation": "@dev Transfers ownership of the contract to a new account (`newOwner`).",
									"id": 1322,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1301,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1300,
												"name": "newOwner",
												"nodeType": "VariableDeclaration",
												"scope": 1322,
												"src": "2206:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1299,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2206:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2205:18:8"
									},
									"returnParameters": {
										"id": 1302,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2233:0:8"
									},
									"scope": 1323,
									"src": "2178:225:8",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								}
							],
							"scope": 1324,
							"src": "415:1990:8"
						}
					],
					"src": "0:2406:8"
				},
				"id": 8
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20Detailed.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/ERC20Detailed.sol",
					"exportedSymbols": {
						"ERC20Detailed": [
							1381
						]
					},
					"id": 1382,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1325,
							"literals": [
								"solidity",
								"^",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "0:23:9"
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 1326,
							"nodeType": "ImportDirective",
							"scope": 1382,
							"sourceUnit": 1451,
							"src": "25:22:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 1327,
										"name": "IERC20",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1450,
										"src": "135:6:9",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$1450",
											"typeString": "contract IERC20"
										}
									},
									"id": 1328,
									"nodeType": "InheritanceSpecifier",
									"src": "135:6:9"
								}
							],
							"contractDependencies": [
								1450
							],
							"contractKind": "contract",
							"documentation": "@dev Optional functions from the ERC20 standard.",
							"fullyImplemented": false,
							"id": 1381,
							"linearizedBaseContracts": [
								1381,
								1450
							],
							"name": "ERC20Detailed",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 1330,
									"name": "_name",
									"nodeType": "VariableDeclaration",
									"scope": 1381,
									"src": "148:20:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 1329,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "148:6:9",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1332,
									"name": "_symbol",
									"nodeType": "VariableDeclaration",
									"scope": 1381,
									"src": "174:22:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 1331,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "174:6:9",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1334,
									"name": "_decimals",
									"nodeType": "VariableDeclaration",
									"scope": 1381,
									"src": "202:23:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 1333,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "202:5:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1355,
										"nodeType": "Block",
										"src": "494:85:9",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 1345,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1343,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1330,
														"src": "504:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 1344,
														"name": "name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1336,
														"src": "512:4:9",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "504:12:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 1346,
												"nodeType": "ExpressionStatement",
												"src": "504:12:9"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1349,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1347,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1332,
														"src": "526:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 1348,
														"name": "symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1338,
														"src": "536:6:9",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "526:16:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 1350,
												"nodeType": "ExpressionStatement",
												"src": "526:16:9"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1353,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1351,
														"name": "_decimals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1334,
														"src": "552:9:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 1352,
														"name": "decimals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1340,
														"src": "564:8:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "552:20:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 1354,
												"nodeType": "ExpressionStatement",
												"src": "552:20:9"
											}
										]
									},
									"documentation": "@dev Sets the values for `name`, `symbol`, and `decimals`. All three of\nthese values are immutable: they can only be set once during\nconstruction.",
									"id": 1356,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1341,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1336,
												"name": "name",
												"nodeType": "VariableDeclaration",
												"scope": 1356,
												"src": "429:18:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1335,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "429:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1338,
												"name": "symbol",
												"nodeType": "VariableDeclaration",
												"scope": 1356,
												"src": "449:20:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1337,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "449:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1340,
												"name": "decimals",
												"nodeType": "VariableDeclaration",
												"scope": 1356,
												"src": "471:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1339,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "471:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "428:58:9"
									},
									"returnParameters": {
										"id": 1342,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "494:0:9"
									},
									"scope": 1381,
									"src": "416:163:9",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1363,
										"nodeType": "Block",
										"src": "696:29:9",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 1361,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1330,
													"src": "713:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 1360,
												"id": 1362,
												"nodeType": "Return",
												"src": "706:12:9"
											}
										]
									},
									"documentation": "@dev Returns the name of the token.",
									"id": 1364,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1357,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "657:2:9"
									},
									"returnParameters": {
										"id": 1360,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1359,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1364,
												"src": "681:13:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1358,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "681:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "680:15:9"
									},
									"scope": 1381,
									"src": "644:81:9",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1371,
										"nodeType": "Block",
										"src": "892:31:9",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 1369,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1332,
													"src": "909:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 1368,
												"id": 1370,
												"nodeType": "Return",
												"src": "902:14:9"
											}
										]
									},
									"documentation": "@dev Returns the symbol of the token, usually a shorter version of the\nname.",
									"id": 1372,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1365,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "853:2:9"
									},
									"returnParameters": {
										"id": 1368,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1367,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1372,
												"src": "877:13:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1366,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "877:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "876:15:9"
									},
									"scope": 1381,
									"src": "838:85:9",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1379,
										"nodeType": "Block",
										"src": "1520:33:9",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 1377,
													"name": "_decimals",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1334,
													"src": "1537:9:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"functionReturnParameters": 1376,
												"id": 1378,
												"nodeType": "Return",
												"src": "1530:16:9"
											}
										]
									},
									"documentation": "@dev Returns the number of decimals used to get its user representation.\nFor example, if `decimals` equals `2`, a balance of `505` tokens should\nbe displayed to a user as `5,05` (`505 / 10 ** 2`).\n     * Tokens usually opt for a value of 18, imitating the relationship between\nEther and Wei.\n     * NOTE: This information is only used for _display_ purposes: it in\nno way affects any of the arithmetic of the contract, including\n{IERC20-balanceOf} and {IERC20-transfer}.",
									"id": 1380,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1373,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1489:2:9"
									},
									"returnParameters": {
										"id": 1376,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1375,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1380,
												"src": "1513:5:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1374,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1513:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1512:7:9"
									},
									"scope": 1381,
									"src": "1472:81:9",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								}
							],
							"scope": 1382,
							"src": "109:1446:9"
						}
					],
					"src": "0:1556:9"
				},
				"id": 9
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							1450
						]
					},
					"id": 1451,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1383,
							"literals": [
								"solidity",
								"^",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "0:23:10"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": "@dev Interface of the ERC20 standard as defined in the EIP. Does not include\nthe optional functions; to access them see {ERC20Detailed}.",
							"fullyImplemented": false,
							"id": 1450,
							"linearizedBaseContracts": [
								1450
							],
							"name": "IERC20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": null,
									"documentation": "@dev Returns the amount of tokens in existence.",
									"id": 1388,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1384,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "290:2:10"
									},
									"returnParameters": {
										"id": 1387,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1386,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1388,
												"src": "316:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1385,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "316:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "315:9:10"
									},
									"scope": 1450,
									"src": "270:55:10",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": "@dev Returns the amount of tokens owned by `account`.",
									"id": 1395,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1391,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1390,
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 1395,
												"src": "427:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1389,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "427:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "426:17:10"
									},
									"returnParameters": {
										"id": 1394,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1393,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1395,
												"src": "467:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1392,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "467:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "466:9:10"
									},
									"scope": 1450,
									"src": "408:68:10",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": "@dev Moves `amount` tokens from the caller's account to `recipient`.\n     * Returns a boolean value indicating whether the operation succeeded.\n     * Emits a {Transfer} event.",
									"id": 1404,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1400,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1397,
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 1404,
												"src": "714:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1396,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "714:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1399,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 1404,
												"src": "733:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1398,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "733:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "713:35:10"
									},
									"returnParameters": {
										"id": 1403,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1402,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1404,
												"src": "767:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1401,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "767:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "766:6:10"
									},
									"scope": 1450,
									"src": "696:77:10",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": "@dev Returns the remaining number of tokens that `spender` will be\nallowed to spend on behalf of `owner` through {transferFrom}. This is\nzero by default.\n     * This value changes when {approve} or {transferFrom} are called.",
									"id": 1413,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1409,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1406,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 1413,
												"src": "1067:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1405,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1067:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1408,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 1413,
												"src": "1082:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1407,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1082:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1066:32:10"
									},
									"returnParameters": {
										"id": 1412,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1411,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1413,
												"src": "1122:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1410,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1122:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1121:9:10"
									},
									"scope": 1450,
									"src": "1048:83:10",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": "@dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     * Returns a boolean value indicating whether the operation succeeded.\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\nthat someone may use both the old and the new allowance by unfortunate\ntransaction ordering. One possible solution to mitigate this race\ncondition is to first reduce the spender's allowance to 0 and set the\ndesired value afterwards:\nhttps://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     * Emits an {Approval} event.",
									"id": 1422,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1418,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1415,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 1422,
												"src": "1801:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1414,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1801:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1417,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 1422,
												"src": "1818:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1416,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1818:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1800:33:10"
									},
									"returnParameters": {
										"id": 1421,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1420,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1422,
												"src": "1852:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1419,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1852:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1851:6:10"
									},
									"scope": 1450,
									"src": "1784:74:10",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": "@dev Moves `amount` tokens from `sender` to `recipient` using the\nallowance mechanism. `amount` is then deducted from the caller's\nallowance.\n     * Returns a boolean value indicating whether the operation succeeded.\n     * Emits a {Transfer} event.",
									"id": 1433,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1429,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1424,
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"scope": 1433,
												"src": "2187:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1423,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2187:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1426,
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 1433,
												"src": "2203:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1425,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2203:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1428,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 1433,
												"src": "2222:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1427,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2222:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2186:51:10"
									},
									"returnParameters": {
										"id": 1432,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1431,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1433,
												"src": "2256:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1430,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2256:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2255:6:10"
									},
									"scope": 1450,
									"src": "2165:97:10",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": "@dev Emitted when `value` tokens are moved from one account (`from`) to\nanother (`to`).\n     * Note that `value` may be zero.",
									"id": 1441,
									"name": "Transfer",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1440,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1435,
												"indexed": true,
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 1441,
												"src": "2446:20:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1434,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2446:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1437,
												"indexed": true,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 1441,
												"src": "2468:18:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1436,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2468:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1439,
												"indexed": false,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 1441,
												"src": "2488:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1438,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2488:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2445:57:10"
									},
									"src": "2431:72:10"
								},
								{
									"anonymous": false,
									"documentation": "@dev Emitted when the allowance of a `spender` for an `owner` is set by\na call to {approve}. `value` is the new allowance.",
									"id": 1449,
									"name": "Approval",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1448,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1443,
												"indexed": true,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 1449,
												"src": "2677:21:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1442,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2677:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1445,
												"indexed": true,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 1449,
												"src": "2700:23:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1444,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2700:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1447,
												"indexed": false,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 1449,
												"src": "2725:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1446,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2725:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2676:63:10"
									},
									"src": "2662:78:10"
								}
							],
							"scope": 1451,
							"src": "176:2566:10"
						}
					],
					"src": "0:2743:10"
				},
				"id": 10
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/SafeERC20.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/SafeERC20.sol",
					"exportedSymbols": {
						"SafeERC20": [
							1670
						]
					},
					"id": 1671,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1452,
							"literals": [
								"solidity",
								"^",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "0:23:11"
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 1453,
							"nodeType": "ImportDirective",
							"scope": 1671,
							"sourceUnit": 1451,
							"src": "25:22:11",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/math/SafeMath.sol",
							"file": "../../math/SafeMath.sol",
							"id": 1454,
							"nodeType": "ImportDirective",
							"scope": 1671,
							"sourceUnit": 1206,
							"src": "48:33:11",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/utils/Address.sol",
							"file": "../../utils/Address.sol",
							"id": 1455,
							"nodeType": "ImportDirective",
							"scope": 1671,
							"sourceUnit": 1746,
							"src": "82:33:11",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": "@title SafeERC20\n@dev Wrappers around ERC20 operations that throw on failure (when the token\ncontract returns false). Tokens that return no value (and instead revert or\nthrow on failure) are also supported, non-reverting calls are assumed to be\nsuccessful.\nTo use this library you can add a `using SafeERC20 for ERC20;` statement to your contract,\nwhich allows you to call the safe operations as `token.safeTransfer(...)`, etc.",
							"fullyImplemented": true,
							"id": 1670,
							"linearizedBaseContracts": [
								1670
							],
							"name": "SafeERC20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 1458,
									"libraryName": {
										"contractScope": null,
										"id": 1456,
										"name": "SafeMath",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1205,
										"src": "604:8:11",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeMath_$1205",
											"typeString": "library SafeMath"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "598:27:11",
									"typeName": {
										"id": 1457,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "617:7:11",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"id": 1461,
									"libraryName": {
										"contractScope": null,
										"id": 1459,
										"name": "Address",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1745,
										"src": "636:7:11",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Address_$1745",
											"typeString": "library Address"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "630:26:11",
									"typeName": {
										"id": 1460,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "648:7:11",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"body": {
										"id": 1482,
										"nodeType": "Block",
										"src": "734:102:11",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1471,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1463,
															"src": "763:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$1450",
																"typeString": "contract IERC20"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 1474,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1463,
																			"src": "793:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$1450",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 1475,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "transfer",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1404,
																		"src": "793:14:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 1476,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "793:23:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 1477,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1465,
																	"src": "818:2:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 1478,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1467,
																	"src": "822:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 1472,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1816,
																	"src": "770:3:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1473,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "770:22:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 1479,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "770:58:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$1450",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1470,
														"name": "callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1669,
														"src": "744:18:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$1450_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 1480,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "744:85:11",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1481,
												"nodeType": "ExpressionStatement",
												"src": "744:85:11"
											}
										]
									},
									"documentation": null,
									"id": 1483,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1468,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1463,
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 1483,
												"src": "684:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$1450",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"contractScope": null,
													"id": 1462,
													"name": "IERC20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 1450,
													"src": "684:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$1450",
														"typeString": "contract IERC20"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1465,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 1483,
												"src": "698:10:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1464,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "698:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1467,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 1483,
												"src": "710:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1466,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "710:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "683:41:11"
									},
									"returnParameters": {
										"id": 1469,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "734:0:11"
									},
									"scope": 1670,
									"src": "662:174:11",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1507,
										"nodeType": "Block",
										"src": "932:112:11",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1495,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1485,
															"src": "961:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$1450",
																"typeString": "contract IERC20"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 1498,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1485,
																			"src": "991:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$1450",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 1499,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "transferFrom",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1433,
																		"src": "991:18:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,address,uint256) external returns (bool)"
																		}
																	},
																	"id": 1500,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "991:27:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 1501,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1487,
																	"src": "1020:4:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 1502,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1489,
																	"src": "1026:2:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 1503,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1491,
																	"src": "1030:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 1496,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1816,
																	"src": "968:3:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1497,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "968:22:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 1504,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "968:68:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$1450",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1494,
														"name": "callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1669,
														"src": "942:18:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$1450_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 1505,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "942:95:11",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1506,
												"nodeType": "ExpressionStatement",
												"src": "942:95:11"
											}
										]
									},
									"documentation": null,
									"id": 1508,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1492,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1485,
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 1508,
												"src": "868:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$1450",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"contractScope": null,
													"id": 1484,
													"name": "IERC20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 1450,
													"src": "868:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$1450",
														"typeString": "contract IERC20"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1487,
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 1508,
												"src": "882:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1486,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "882:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1489,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 1508,
												"src": "896:10:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1488,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "896:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1491,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 1508,
												"src": "908:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1490,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "908:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "867:55:11"
									},
									"returnParameters": {
										"id": 1493,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "932:0:11"
									},
									"scope": 1670,
									"src": "842:202:11",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1548,
										"nodeType": "Block",
										"src": "1126:536:11",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1532,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"components": [
																	{
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1520,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"id": 1518,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1514,
																			"src": "1415:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"argumentTypes": null,
																			"hexValue": "30",
																			"id": 1519,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1424:1:11",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1415:10:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 1521,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1414:12:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"argumentTypes": null,
																"components": [
																	{
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1530,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"arguments": [
																						{
																							"argumentTypes": null,
																							"id": 1525,
																							"name": "this",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1857,
																							"src": "1455:4:11",
																							"typeDescriptions": {
																								"typeIdentifier": "t_contract$_SafeERC20_$1670",
																								"typeString": "library SafeERC20"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_contract$_SafeERC20_$1670",
																								"typeString": "library SafeERC20"
																							}
																						],
																						"id": 1524,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "1447:7:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_address_$",
																							"typeString": "type(address)"
																						},
																						"typeName": "address"
																					},
																					"id": 1526,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "1447:13:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"argumentTypes": null,
																					"id": 1527,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1512,
																					"src": "1462:7:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"expression": {
																					"argumentTypes": null,
																					"id": 1522,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1510,
																					"src": "1431:5:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$1450",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 1523,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "allowance",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1413,
																				"src": "1431:15:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																					"typeString": "function (address,address) view external returns (uint256)"
																				}
																			},
																			"id": 1528,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1431:39:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"argumentTypes": null,
																			"hexValue": "30",
																			"id": 1529,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1474:1:11",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1431:44:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 1531,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1430:46:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1414:62:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f20746f206e6f6e2d7a65726f20616c6c6f77616e6365",
															"id": 1533,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1490:56:11",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25",
																"typeString": "literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""
															},
															"value": "SafeERC20: approve from non-zero to non-zero allowance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25",
																"typeString": "literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""
															}
														],
														"id": 1517,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1832,
															1833
														],
														"referencedDeclaration": 1833,
														"src": "1406:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1534,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1406:150:11",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1535,
												"nodeType": "ExpressionStatement",
												"src": "1406:150:11"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1537,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1510,
															"src": "1585:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$1450",
																"typeString": "contract IERC20"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 1540,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1510,
																			"src": "1615:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$1450",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 1541,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1422,
																		"src": "1615:13:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 1542,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "1615:22:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 1543,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1512,
																	"src": "1639:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 1544,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1514,
																	"src": "1648:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 1538,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1816,
																	"src": "1592:3:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1539,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "1592:22:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 1545,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1592:62:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$1450",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1536,
														"name": "callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1669,
														"src": "1566:18:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$1450_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 1546,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1566:89:11",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1547,
												"nodeType": "ExpressionStatement",
												"src": "1566:89:11"
											}
										]
									},
									"documentation": null,
									"id": 1549,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeApprove",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1515,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1510,
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 1549,
												"src": "1071:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$1450",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"contractScope": null,
													"id": 1509,
													"name": "IERC20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 1450,
													"src": "1071:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$1450",
														"typeString": "contract IERC20"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1512,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 1549,
												"src": "1085:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1511,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1085:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1514,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 1549,
												"src": "1102:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1513,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1102:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1070:46:11"
									},
									"returnParameters": {
										"id": 1516,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1126:0:11"
									},
									"scope": 1670,
									"src": "1050:612:11",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1583,
										"nodeType": "Block",
										"src": "1754:196:11",
										"statements": [
											{
												"assignments": [
													1559
												],
												"declarations": [
													{
														"constant": false,
														"id": 1559,
														"name": "newAllowance",
														"nodeType": "VariableDeclaration",
														"scope": 1583,
														"src": "1764:20:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1558,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1764:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1570,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1568,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1555,
															"src": "1831:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 1563,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1857,
																			"src": "1811:4:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeERC20_$1670",
																				"typeString": "library SafeERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeERC20_$1670",
																				"typeString": "library SafeERC20"
																			}
																		],
																		"id": 1562,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "1803:7:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": "address"
																	},
																	"id": 1564,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1803:13:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 1565,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1553,
																	"src": "1818:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 1560,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1551,
																	"src": "1787:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$1450",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 1561,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1413,
																"src": "1787:15:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 1566,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1787:39:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1567,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "add",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1045,
														"src": "1787:43:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1569,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1787:50:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1764:73:11"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1572,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1551,
															"src": "1866:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$1450",
																"typeString": "contract IERC20"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 1575,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1551,
																			"src": "1896:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$1450",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 1576,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1422,
																		"src": "1896:13:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 1577,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "1896:22:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 1578,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1553,
																	"src": "1920:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 1579,
																	"name": "newAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1559,
																	"src": "1929:12:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 1573,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1816,
																	"src": "1873:3:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1574,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "1873:22:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 1580,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1873:69:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$1450",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1571,
														"name": "callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1669,
														"src": "1847:18:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$1450_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 1581,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1847:96:11",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1582,
												"nodeType": "ExpressionStatement",
												"src": "1847:96:11"
											}
										]
									},
									"documentation": null,
									"id": 1584,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeIncreaseAllowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1556,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1551,
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 1584,
												"src": "1699:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$1450",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"contractScope": null,
													"id": 1550,
													"name": "IERC20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 1450,
													"src": "1699:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$1450",
														"typeString": "contract IERC20"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1553,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 1584,
												"src": "1713:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1552,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1713:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1555,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 1584,
												"src": "1730:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1554,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1730:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1698:46:11"
									},
									"returnParameters": {
										"id": 1557,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1754:0:11"
									},
									"scope": 1670,
									"src": "1668:282:11",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1619,
										"nodeType": "Block",
										"src": "2042:241:11",
										"statements": [
											{
												"assignments": [
													1594
												],
												"declarations": [
													{
														"constant": false,
														"id": 1594,
														"name": "newAllowance",
														"nodeType": "VariableDeclaration",
														"scope": 1619,
														"src": "2052:20:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1593,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2052:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1606,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1603,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1590,
															"src": "2119:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "5361666545524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
															"id": 1604,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2126:43:11",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a",
																"typeString": "literal_string \"SafeERC20: decreased allowance below zero\""
															},
															"value": "SafeERC20: decreased allowance below zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a",
																"typeString": "literal_string \"SafeERC20: decreased allowance below zero\""
															}
														],
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 1598,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1857,
																			"src": "2099:4:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeERC20_$1670",
																				"typeString": "library SafeERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeERC20_$1670",
																				"typeString": "library SafeERC20"
																			}
																		],
																		"id": 1597,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2091:7:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": "address"
																	},
																	"id": 1599,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2091:13:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 1600,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1588,
																	"src": "2106:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 1595,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1586,
																	"src": "2075:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$1450",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 1596,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1413,
																"src": "2075:15:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 1601,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2075:39:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1602,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sub",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1088,
														"src": "2075:43:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 1605,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2075:95:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2052:118:11"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1608,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1586,
															"src": "2199:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$1450",
																"typeString": "contract IERC20"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 1611,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1586,
																			"src": "2229:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$1450",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 1612,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1422,
																		"src": "2229:13:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 1613,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "2229:22:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 1614,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1588,
																	"src": "2253:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 1615,
																	"name": "newAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1594,
																	"src": "2262:12:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 1609,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1816,
																	"src": "2206:3:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1610,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "2206:22:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 1616,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2206:69:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$1450",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1607,
														"name": "callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1669,
														"src": "2180:18:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$1450_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 1617,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2180:96:11",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1618,
												"nodeType": "ExpressionStatement",
												"src": "2180:96:11"
											}
										]
									},
									"documentation": null,
									"id": 1620,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeDecreaseAllowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1591,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1586,
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 1620,
												"src": "1987:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$1450",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"contractScope": null,
													"id": 1585,
													"name": "IERC20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 1450,
													"src": "1987:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$1450",
														"typeString": "contract IERC20"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1588,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 1620,
												"src": "2001:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1587,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2001:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1590,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 1620,
												"src": "2018:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1589,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2018:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1986:46:11"
									},
									"returnParameters": {
										"id": 1592,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2042:0:11"
									},
									"scope": 1670,
									"src": "1956:327:11",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1668,
										"nodeType": "Block",
										"src": "2735:1026:11",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"expression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 1629,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1622,
																			"src": "3269:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$1450",
																				"typeString": "contract IERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_IERC20_$1450",
																				"typeString": "contract IERC20"
																			}
																		],
																		"id": 1628,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3261:7:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": "address"
																	},
																	"id": 1630,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3261:14:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 1631,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "isContract",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1697,
																"src": "3261:25:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$bound_to$_t_address_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 1632,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3261:27:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "5361666545524332303a2063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 1633,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3290:33:11",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f6ce7bfd656f35145dec774d6f7e67f4cba158373d2dd7a0f8273e232f86148d",
																"typeString": "literal_string \"SafeERC20: call to non-contract\""
															},
															"value": "SafeERC20: call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f6ce7bfd656f35145dec774d6f7e67f4cba158373d2dd7a0f8273e232f86148d",
																"typeString": "literal_string \"SafeERC20: call to non-contract\""
															}
														],
														"id": 1627,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1832,
															1833
														],
														"referencedDeclaration": 1833,
														"src": "3253:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1634,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3253:71:11",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1635,
												"nodeType": "ExpressionStatement",
												"src": "3253:71:11"
											},
											{
												"assignments": [
													1637,
													1639
												],
												"declarations": [
													{
														"constant": false,
														"id": 1637,
														"name": "success",
														"nodeType": "VariableDeclaration",
														"scope": 1668,
														"src": "3395:12:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1636,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3395:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"value": null,
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1639,
														"name": "returndata",
														"nodeType": "VariableDeclaration",
														"scope": 1668,
														"src": "3409:23:11",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1638,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3409:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1646,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1644,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1624,
															"src": "3456:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1641,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1622,
																	"src": "3444:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$1450",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$1450",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 1640,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3436:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": "address"
															},
															"id": 1642,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3436:14:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1643,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "call",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "3436:19:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1645,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3436:25:11",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3394:67:11"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1648,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1637,
															"src": "3479:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 1649,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3488:34:11",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b",
																"typeString": "literal_string \"SafeERC20: low-level call failed\""
															},
															"value": "SafeERC20: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b",
																"typeString": "literal_string \"SafeERC20: low-level call failed\""
															}
														],
														"id": 1647,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1832,
															1833
														],
														"referencedDeclaration": 1833,
														"src": "3471:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1650,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3471:52:11",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1651,
												"nodeType": "ExpressionStatement",
												"src": "3471:52:11"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1655,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 1652,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1639,
															"src": "3538:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1653,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "3538:17:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 1654,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3558:1:11",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3538:21:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 1667,
												"nodeType": "IfStatement",
												"src": "3534:221:11",
												"trueBody": {
													"id": 1666,
													"nodeType": "Block",
													"src": "3561:194:11",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"id": 1659,
																				"name": "returndata",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1639,
																				"src": "3678:10:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			{
																				"argumentTypes": null,
																				"components": [
																					{
																						"argumentTypes": null,
																						"id": 1660,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "3691:4:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_bool_$",
																							"typeString": "type(bool)"
																						},
																						"typeName": "bool"
																					}
																				],
																				"id": 1661,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "3690:6:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				},
																				{
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			],
																			"expression": {
																				"argumentTypes": null,
																				"id": 1657,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1816,
																				"src": "3667:3:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 1658,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberName": "decode",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": null,
																			"src": "3667:10:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 1662,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3667:30:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"hexValue": "5361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564",
																		"id": 1663,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3699:44:11",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																			"typeString": "literal_string \"SafeERC20: ERC20 operation did not succeed\""
																		},
																		"value": "SafeERC20: ERC20 operation did not succeed"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																			"typeString": "literal_string \"SafeERC20: ERC20 operation did not succeed\""
																		}
																	],
																	"id": 1656,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		1832,
																		1833
																	],
																	"referencedDeclaration": 1833,
																	"src": "3659:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 1664,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3659:85:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1665,
															"nodeType": "ExpressionStatement",
															"src": "3659:85:11"
														}
													]
												}
											}
										]
									},
									"documentation": "@dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\non the return value: the return value is optional (but if data is returned, it must not be false).\n@param token The token targeted by the call.\n@param data The call data (encoded using abi.encode or one of its variants).",
									"id": 1669,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "callOptionalReturn",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1625,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1622,
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 1669,
												"src": "2694:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$1450",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"contractScope": null,
													"id": 1621,
													"name": "IERC20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 1450,
													"src": "2694:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$1450",
														"typeString": "contract IERC20"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1624,
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 1669,
												"src": "2708:17:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1623,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2708:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2693:33:11"
									},
									"returnParameters": {
										"id": 1626,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2735:0:11"
									},
									"scope": 1670,
									"src": "2666:1095:11",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "private"
								}
							],
							"scope": 1671,
							"src": "574:3189:11"
						}
					],
					"src": "0:3764:11"
				},
				"id": 11
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/utils/Address.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v2.5.0/contracts/utils/Address.sol",
					"exportedSymbols": {
						"Address": [
							1745
						]
					},
					"id": 1746,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1672,
							"literals": [
								"solidity",
								"^",
								"0.5",
								".5"
							],
							"nodeType": "PragmaDirective",
							"src": "0:23:12"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": "@dev Collection of functions related to the address type",
							"fullyImplemented": true,
							"id": 1745,
							"linearizedBaseContracts": [
								1745
							],
							"name": "Address",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1696,
										"nodeType": "Block",
										"src": "752:544:12",
										"statements": [
											{
												"assignments": [
													1680
												],
												"declarations": [
													{
														"constant": false,
														"id": 1680,
														"name": "codehash",
														"nodeType": "VariableDeclaration",
														"scope": 1696,
														"src": "1004:16:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 1679,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "1004:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1681,
												"initialValue": null,
												"nodeType": "VariableDeclarationStatement",
												"src": "1004:16:12"
											},
											{
												"assignments": [
													1683
												],
												"declarations": [
													{
														"constant": false,
														"id": 1683,
														"name": "accountHash",
														"nodeType": "VariableDeclaration",
														"scope": 1696,
														"src": "1030:19:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 1682,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "1030:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1685,
												"initialValue": {
													"argumentTypes": null,
													"hexValue": "307863356432343630313836663732333363393237653764623264636337303363306535303062363533636138323237336237626661643830343564383561343730",
													"id": 1684,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1052:66:12",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_rational_89477152217924674838424037953991966239322087453347756267410168184682657981552_by_1",
														"typeString": "int_const 8947...(69 digits omitted)...1552"
													},
													"value": "0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1030:88:12"
											},
											{
												"externalReferences": [
													{
														"codehash": {
															"declaration": 1680,
															"isOffset": false,
															"isSlot": false,
															"src": "1195:8:12",
															"valueSize": 1
														}
													},
													{
														"account": {
															"declaration": 1674,
															"isOffset": false,
															"isSlot": false,
															"src": "1219:7:12",
															"valueSize": 1
														}
													}
												],
												"id": 1686,
												"nodeType": "InlineAssembly",
												"operations": "{\n    codehash := extcodehash(account)\n}",
												"src": "1184:45:12"
											},
											{
												"expression": {
													"argumentTypes": null,
													"components": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1693,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																"id": 1689,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 1687,
																	"name": "codehash",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1680,
																	"src": "1246:8:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 1688,
																	"name": "accountHash",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1683,
																	"src": "1258:11:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"src": "1246:23:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																"id": 1692,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 1690,
																	"name": "codehash",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1680,
																	"src": "1273:8:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "307830",
																	"id": 1691,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1285:3:12",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0x0"
																},
																"src": "1273:15:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1246:42:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"id": 1694,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "1245:44:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1678,
												"id": 1695,
												"nodeType": "Return",
												"src": "1238:51:12"
											}
										]
									},
									"documentation": "@dev Returns true if `account` is a contract.\n     * [IMPORTANT]\n====\nIt is unsafe to assume that an address for which this function returns\nfalse is an externally-owned account (EOA) and not a contract.\n     * Among others, `isContract` will return false for the following \ntypes of addresses:\n     *  - an externally-owned account\n - a contract in construction\n - an address where a contract will be created\n - an address where a contract lived, but was destroyed\n====",
									"id": 1697,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1675,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1674,
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 1697,
												"src": "706:15:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1673,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "706:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "705:17:12"
									},
									"returnParameters": {
										"id": 1678,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1677,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1697,
												"src": "746:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1676,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "746:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "745:6:12"
									},
									"scope": 1745,
									"src": "686:610:12",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1710,
										"nodeType": "Block",
										"src": "1581:49:12",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1706,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1699,
																	"src": "1614:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1705,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1606:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint160_$",
																	"typeString": "type(uint160)"
																},
																"typeName": "uint160"
															},
															"id": 1707,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1606:16:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														],
														"id": 1704,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "1598:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_$",
															"typeString": "type(address)"
														},
														"typeName": "address"
													},
													"id": 1708,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1598:25:12",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"functionReturnParameters": 1703,
												"id": 1709,
												"nodeType": "Return",
												"src": "1591:32:12"
											}
										]
									},
									"documentation": "@dev Converts an `address` into `address payable`. Note that this is\nsimply a type cast: the actual underlying value is not changed.\n     * _Available since v2.4.0._",
									"id": 1711,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toPayable",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1700,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1699,
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 1711,
												"src": "1524:15:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1698,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1524:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1523:17:12"
									},
									"returnParameters": {
										"id": 1703,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1702,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1711,
												"src": "1564:15:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 1701,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1564:15:12",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1563:17:12"
									},
									"scope": 1745,
									"src": "1505:125:12",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1743,
										"nodeType": "Block",
										"src": "2658:294:12",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1724,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 1720,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1855,
																			"src": "2684:4:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$1745",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$1745",
																				"typeString": "library Address"
																			}
																		],
																		"id": 1719,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2676:7:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": "address"
																	},
																	"id": 1721,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2676:13:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 1722,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "2676:21:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 1723,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1715,
																"src": "2701:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2676:31:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 1725,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2709:31:12",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 1718,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1832,
															1833
														],
														"referencedDeclaration": 1833,
														"src": "2668:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1726,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2668:73:12",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1727,
												"nodeType": "ExpressionStatement",
												"src": "2668:73:12"
											},
											{
												"assignments": [
													1729,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 1729,
														"name": "success",
														"nodeType": "VariableDeclaration",
														"scope": 1743,
														"src": "2807:12:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1728,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2807:4:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"value": null,
														"visibility": "internal"
													},
													null
												],
												"id": 1737,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"hexValue": "",
															"id": 1735,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2854:2:12",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"arguments": [
															{
																"argumentTypes": null,
																"id": 1733,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1715,
																"src": "2846:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 1730,
																	"name": "recipient",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1713,
																	"src": "2825:9:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																},
																"id": 1731,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "call",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "2825:14:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
																}
															},
															"id": 1732,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "value",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "2825:20:12",
															"typeDescriptions": {
																"typeIdentifier": "t_function_setvalue_pure$_t_uint256_$returns$_t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value_$",
																"typeString": "function (uint256) pure returns (function (bytes memory) payable returns (bool,bytes memory))"
															}
														},
														"id": 1734,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2825:28:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1736,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2825:32:12",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2806:51:12"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1739,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1729,
															"src": "2875:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 1740,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2884:60:12",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 1738,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1832,
															1833
														],
														"referencedDeclaration": 1833,
														"src": "2867:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1741,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2867:78:12",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1742,
												"nodeType": "ExpressionStatement",
												"src": "2867:78:12"
											}
										]
									},
									"documentation": "@dev Replacement for Solidity's `transfer`: sends `amount` wei to\n`recipient`, forwarding all available gas and reverting on errors.\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\nof certain opcodes, possibly making contracts go over the 2300 gas limit\nimposed by `transfer`, making them unable to receive funds via\n`transfer`. {sendValue} removes this limitation.\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     * IMPORTANT: because control is transferred to `recipient`, care must be\ntaken to not create reentrancy vulnerabilities. Consider using\n{ReentrancyGuard} or the\nhttps://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     * _Available since v2.4.0._",
									"id": 1744,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1716,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1713,
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 1744,
												"src": "2606:25:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 1712,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2606:15:12",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1715,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 1744,
												"src": "2633:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1714,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2633:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2605:43:12"
									},
									"returnParameters": {
										"id": 1717,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2658:0:12"
									},
									"scope": 1745,
									"src": "2587:365:12",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								}
							],
							"scope": 1746,
							"src": "93:2861:12"
						}
					],
					"src": "0:2955:12"
				},
				"id": 12
			},
			"https://github.com/OpenZeppelin/openzeppelin-upgrades/blob/master/packages/core/contracts/Initializable.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-upgrades/blob/master/packages/core/contracts/Initializable.sol",
					"exportedSymbols": {
						"Initializable": [
							1814
						]
					},
					"id": 1815,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1747,
							"literals": [
								"solidity",
								">=",
								"0.4",
								".24",
								"<",
								"0.7",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:32:13"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": "@title Initializable\n * @dev Deprecated. This contract is kept in the Upgrades Plugins for backwards compatibility purposes.\nUsers should use openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol instead.\n * Helper contract to support initializer functions. To use it, replace\nthe constructor with a function that has the `initializer` modifier.\nWARNING: Unlike constructors, initializer functions must be manually\ninvoked. This applies both to deploying an Initializable contract, as well\nas extending an Initializable contract via inheritance.\nWARNING: When used with inheritance, manual care must be taken to not invoke\na parent initializer twice, or ensure that all initializers are idempotent,\nbecause this is not dealt with automatically as with constructors.",
							"fullyImplemented": true,
							"id": 1814,
							"linearizedBaseContracts": [
								1814
							],
							"name": "Initializable",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 1749,
									"name": "initialized",
									"nodeType": "VariableDeclaration",
									"scope": 1814,
									"src": "986:24:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 1748,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "986:4:13",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1751,
									"name": "initializing",
									"nodeType": "VariableDeclaration",
									"scope": 1814,
									"src": "1105:25:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 1750,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "1105:4:13",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1788,
										"nodeType": "Block",
										"src": "1239:313:13",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1760,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 1757,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 1754,
																	"name": "initializing",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1751,
																	"src": "1253:12:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "||",
																"rightExpression": {
																	"argumentTypes": null,
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 1755,
																		"name": "isConstructor",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1809,
																		"src": "1269:13:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																			"typeString": "function () view returns (bool)"
																		}
																	},
																	"id": 1756,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1269:15:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "1253:31:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"argumentTypes": null,
																"id": 1759,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "!",
																"prefix": true,
																"src": "1288:12:13",
																"subExpression": {
																	"argumentTypes": null,
																	"id": 1758,
																	"name": "initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1749,
																	"src": "1289:11:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1253:47:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "436f6e747261637420696e7374616e63652068617320616c7265616479206265656e20696e697469616c697a6564",
															"id": 1761,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1302:48:13",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9fbba6c4dcac9134893b633b9564f36435b3f927c1d5fa152c5c14b20cecb1a4",
																"typeString": "literal_string \"Contract instance has already been initialized\""
															},
															"value": "Contract instance has already been initialized"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9fbba6c4dcac9134893b633b9564f36435b3f927c1d5fa152c5c14b20cecb1a4",
																"typeString": "literal_string \"Contract instance has already been initialized\""
															}
														],
														"id": 1753,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1832,
															1833
														],
														"referencedDeclaration": 1833,
														"src": "1245:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1762,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1245:106:13",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1763,
												"nodeType": "ExpressionStatement",
												"src": "1245:106:13"
											},
											{
												"assignments": [
													1765
												],
												"declarations": [
													{
														"constant": false,
														"id": 1765,
														"name": "isTopLevelCall",
														"nodeType": "VariableDeclaration",
														"scope": 1788,
														"src": "1358:19:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1764,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "1358:4:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1768,
												"initialValue": {
													"argumentTypes": null,
													"id": 1767,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "1380:13:13",
													"subExpression": {
														"argumentTypes": null,
														"id": 1766,
														"name": "initializing",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1751,
														"src": "1381:12:13",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1358:35:13"
											},
											{
												"condition": {
													"argumentTypes": null,
													"id": 1769,
													"name": "isTopLevelCall",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1765,
													"src": "1403:14:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 1779,
												"nodeType": "IfStatement",
												"src": "1399:80:13",
												"trueBody": {
													"id": 1778,
													"nodeType": "Block",
													"src": "1419:60:13",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 1772,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 1770,
																	"name": "initializing",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1751,
																	"src": "1427:12:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"hexValue": "74727565",
																	"id": 1771,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1442:4:13",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "1427:19:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1773,
															"nodeType": "ExpressionStatement",
															"src": "1427:19:13"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 1776,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 1774,
																	"name": "initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1749,
																	"src": "1454:11:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"hexValue": "74727565",
																	"id": 1775,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1468:4:13",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "1454:18:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1777,
															"nodeType": "ExpressionStatement",
															"src": "1454:18:13"
														}
													]
												}
											},
											{
												"id": 1780,
												"nodeType": "PlaceholderStatement",
												"src": "1485:1:13"
											},
											{
												"condition": {
													"argumentTypes": null,
													"id": 1781,
													"name": "isTopLevelCall",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1765,
													"src": "1497:14:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 1787,
												"nodeType": "IfStatement",
												"src": "1493:55:13",
												"trueBody": {
													"id": 1786,
													"nodeType": "Block",
													"src": "1513:35:13",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 1784,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 1782,
																	"name": "initializing",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1751,
																	"src": "1521:12:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"hexValue": "66616c7365",
																	"id": 1783,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1536:5:13",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "1521:20:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1785,
															"nodeType": "ExpressionStatement",
															"src": "1521:20:13"
														}
													]
												}
											}
										]
									},
									"documentation": "@dev Modifier to use in the initializer function of a contract.",
									"id": 1789,
									"name": "initializer",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1752,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1236:2:13"
									},
									"src": "1216:336:13",
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1808,
										"nodeType": "Block",
										"src": "1691:445:13",
										"statements": [
											{
												"assignments": [
													1795
												],
												"declarations": [
													{
														"constant": false,
														"id": 1795,
														"name": "self",
														"nodeType": "VariableDeclaration",
														"scope": 1808,
														"src": "2026:12:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1794,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2026:7:13",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1799,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1797,
															"name": "this",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1843,
															"src": "2049:4:13",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_Initializable_$1814",
																"typeString": "contract Initializable"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_Initializable_$1814",
																"typeString": "contract Initializable"
															}
														],
														"id": 1796,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "2041:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_$",
															"typeString": "type(address)"
														},
														"typeName": "address"
													},
													"id": 1798,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2041:13:13",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2026:28:13"
											},
											{
												"assignments": [
													1801
												],
												"declarations": [
													{
														"constant": false,
														"id": 1801,
														"name": "cs",
														"nodeType": "VariableDeclaration",
														"scope": 1808,
														"src": "2060:10:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1800,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2060:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1802,
												"initialValue": null,
												"nodeType": "VariableDeclarationStatement",
												"src": "2060:10:13"
											},
											{
												"externalReferences": [
													{
														"cs": {
															"declaration": 1801,
															"isOffset": false,
															"isSlot": false,
															"src": "2087:2:13",
															"valueSize": 1
														}
													},
													{
														"self": {
															"declaration": 1795,
															"isOffset": false,
															"isSlot": false,
															"src": "2105:4:13",
															"valueSize": 1
														}
													}
												],
												"id": 1803,
												"nodeType": "InlineAssembly",
												"operations": "{ cs := extcodesize(self) }",
												"src": "2076:36:13"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1806,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 1804,
														"name": "cs",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1801,
														"src": "2124:2:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 1805,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2130:1:13",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2124:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1793,
												"id": 1807,
												"nodeType": "Return",
												"src": "2117:14:13"
											}
										]
									},
									"documentation": "@dev Returns true if and only if the function is running in the constructor",
									"id": 1809,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isConstructor",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1790,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1660:2:13"
									},
									"returnParameters": {
										"id": 1793,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1792,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1809,
												"src": "1685:4:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1791,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1685:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1684:6:13"
									},
									"scope": 1814,
									"src": "1638:498:13",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1813,
									"name": "______gap",
									"nodeType": "VariableDeclaration",
									"scope": 1814,
									"src": "2211:29:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_uint256_$50_storage",
										"typeString": "uint256[50]"
									},
									"typeName": {
										"baseType": {
											"id": 1810,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "2211:7:13",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"id": 1812,
										"length": {
											"argumentTypes": null,
											"hexValue": "3530",
											"id": 1811,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "2219:2:13",
											"subdenomination": null,
											"typeDescriptions": {
												"typeIdentifier": "t_rational_50_by_1",
												"typeString": "int_const 50"
											},
											"value": "50"
										},
										"nodeType": "ArrayTypeName",
										"src": "2211:11:13",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint256_$50_storage_ptr",
											"typeString": "uint256[50]"
										}
									},
									"value": null,
									"visibility": "private"
								}
							],
							"scope": 1815,
							"src": "886:1357:13"
						}
					],
					"src": "33:2211:13"
				},
				"id": 13
			}
		}
	}
}